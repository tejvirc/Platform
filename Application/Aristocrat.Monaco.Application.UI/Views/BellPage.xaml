<operatorMenu:OperatorMenuPage x:Class="Aristocrat.Monaco.Application.UI.Views.BellPage"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                               xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                               xmlns:helpers="http://monaco.aristocrat.com/common"
                               xmlns:operatorMenu="clr-namespace:Aristocrat.Monaco.Application.UI.OperatorMenu"
                               xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Application.UI.ViewModels"
                               xmlns:lex="http://wpflocalizeextension.codeplex.com"
                               xmlns:loc="http://monaco.aristocrat.com/localization"
                               mc:Ignorable="d"
                               d:DataContext="{d:DesignInstance {x:Type viewModels:BellPageViewModel}}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/OperatorMenu.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="ToggleSwitchButtonStyle"
                   TargetType="controls:ToggleSwitchButton"
                   BasedOn="{StaticResource MonacoToggleSwitchButton}">
                <Setter Property="Height"
                        Value="40" />
                <Setter Property="Margin"
                        Value="0" />
                <Setter Property="ThumbIndicatorWidth"
                        Value="75" />
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="Width"
                        Value="150" />
            </Style>
            <Style TargetType="GroupBox"
                   BasedOn="{StaticResource MonacoGroupBox}">
                <Setter Property="Margin"
                        Value="0 10 0 0" />
                <Setter Property="Padding"
                        Value="10 0 10 0" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid AutomationProperties.AutomationId="Grid0_7095ED6D">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"
                           AutomationProperties.AutomationId="RowDefinition1_7095ED6D" />
            <RowDefinition Height="Auto"
                           AutomationProperties.AutomationId="RowDefinition2_7095ED6D" />
            <RowDefinition Height="Auto"
                           AutomationProperties.AutomationId="RowDefinition3_7095ED6D" />
            <RowDefinition Height="Auto"
                           AutomationProperties.AutomationId="RowDefinition4_7095ED6D" />
            <RowDefinition Height="*"
                           AutomationProperties.AutomationId="RowDefinition5_7095ED6D" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"
                              AutomationProperties.AutomationId="ColumnDefinition6_7095ED6D" />
        </Grid.ColumnDefinitions>
        <GroupBox Grid.Row="0"
                  Margin="0"
                  Header="{lex:Loc Key={x:Static loc:ResourceKeys.StatusLabel}}"
                  AutomationProperties.AutomationId="GroupBox7_7095ED6D">
            <TextBlock Text="{Binding Status}"
                       AutomationProperties.AutomationId="TextBlock8_7095ED6D" />
        </GroupBox>
        <GroupBox Grid.Row="1"
                  Margin="0"
                  Header="{lex:Loc Key={x:Static loc:ResourceKeys.TestBellLabel}}"
                  Visibility="{Binding ShowToggle, Converter={StaticResource TrueHiddenFalseVisible}}"
                  AutomationProperties.AutomationId="GroupBox9_7095ED6D">
            <StackPanel Orientation="Horizontal"
                        AutomationProperties.AutomationId="StackPanel10_7095ED6D">
                <controls:ToggleSwitchButton Style="{StaticResource ToggleSwitchButtonStyle}"
                                             Name="BellToggleSwitch"
                                             IsEnabled="{Binding IsToggleEnabled}"
                                             IsChecked="{Binding ToggleBell, Mode=TwoWay}"
                                             helpers:ToggleSwitchButtonHelper.OffContent="{lex:Loc Key={x:Static loc:ResourceKeys.Off}}"
                                             helpers:ToggleSwitchButtonHelper.OnContent="{lex:Loc Key={x:Static loc:ResourceKeys.On}}" />
                <Button Content="{lex:Loc Key={x:Static loc:ResourceKeys.Ring}}"
                        Command="{Binding RingBellClicked}"
                        IsEnabled="{Binding RingBellEnabled}"
                        Margin="10,0,0,0"
                        AutomationProperties.AutomationId="Button11_7095ED6D" />
                <Button Name="WarningButton"
                        Style="{StaticResource MonacoWarningButton}"
                        Command="{Binding ShowInfoPopupCommand}"
                        Visibility="{Binding TestModeEnabled, Converter={StaticResource TrueHiddenFalseVisible}}"
                        Margin="10,0,0,0"
                        AutomationProperties.AutomationId="Button12_7095ED6D">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource MultiValueConverter}">
                            <Binding ElementName="WarningButton" />
                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Control}"
                                     Path="DataContext.TestWarningText" />
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
            </StackPanel>
        </GroupBox>
        <GroupBox Grid.Row="2"
                  Margin="0"
                  Header="{lex:Loc Key={x:Static loc:ResourceKeys.InitialBellRingLabel}}"
                  Visibility="{Binding ShowToggle, Converter={StaticResource TrueHiddenFalseVisible}}"
                  AutomationProperties.AutomationId="GroupBox13_7095ED6D">
            <helpers:CurrencyTextBox MinWidth="200"
                                     IsReadOnly="False"
                                     PreventNegatives="True"
                                     InputScope="Number"
                                     IsEnabled="{Binding InputEnabled}"
                                     Number="{Binding InitialBellValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />
        </GroupBox>
        <GroupBox Grid.Row="3"
                  Margin="0"
                  Header="{lex:Loc Key={x:Static loc:ResourceKeys.IntervalBellRingLabel}}"
                  Visibility="{Binding ShowToggle, Converter={StaticResource TrueHiddenFalseVisible}}"
                  AutomationProperties.AutomationId="GroupBox14_7095ED6D">
            <helpers:CurrencyTextBox MinWidth="200"
                                     IsReadOnly="False"
                                     PreventNegatives="True"
                                     InputScope="Number"
                                     IsEnabled="{Binding InputEnabled}"
                                     Number="{Binding IntervalBellValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />
        </GroupBox>
    </Grid>
</operatorMenu:OperatorMenuPage>