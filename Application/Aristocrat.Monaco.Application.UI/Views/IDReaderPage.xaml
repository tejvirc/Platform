<operatorMenu:OperatorMenuPage x:Class="Aristocrat.Monaco.Application.UI.Views.IdReaderPage"
                              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                              xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                              xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Application.UI.ViewModels"
                              xmlns:operatorMenu="clr-namespace:Aristocrat.Monaco.Application.UI.OperatorMenu"
                              xmlns:lex="http://wpflocalizeextension.codeplex.com"
                              xmlns:loc="http://monaco.aristocrat.com/localization"
                              lex:ResxLocalizationProvider.DefaultAssembly="Aristocrat.Monaco.Localization"
                              lex:ResxLocalizationProvider.DefaultDictionary="Resources" 
                              mc:Ignorable="d" 
                              d:DesignHeight="600" d:DesignWidth="900" 
                              d:DataContext="{d:DesignInstance viewModels:IdReaderPageViewModel}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/OperatorMenu.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="Label" BasedOn="{StaticResource MonacoLabel}">
                <Setter Property="Margin" Value="0 0 10 10" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style x:Key="TextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource MonacoTextBlock}">
                <Setter Property="Margin" Value="0 0 0 10" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style TargetType="Button" BasedOn="{StaticResource MonacoButton}">
                <Setter Property="Width" Value="200" />
            </Style>

            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MonacoCheckBoxGeneral}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Border Grid.Row="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="0" Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" Grid.Column="0" Content="{lex:Loc ManufacturerLabel}" />
                    <TextBlock Grid.Row="0" Grid.Column="1" Name="Manufacturer" VerticalAlignment="Center" Foreground="{Binding ManufacturerForeground}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ManufacturerText, Mode=OneWay, TargetNullValue=''}" Value="">
                                        <Setter Property="Text" Value="{lex:BLoc NotAvailable}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Text" Value="{Binding ManufacturerText, Mode=OneWay}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label Grid.Row="1" Grid.Column="0" Content="{lex:Loc ModelLabel}" />
                    <TextBlock Grid.Row="1" Grid.Column="1" Name="Model" VerticalAlignment="Center" Foreground="{Binding ModelForeground}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ModelText, Mode=OneWay, TargetNullValue=''}" Value="">
                                        <Setter Property="Text" Value="{lex:BLoc NotAvailable}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Text" Value="{Binding ModelText, Mode=OneWay}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label Grid.Row="2" Grid.Column="0" Content="{lex:Loc ProtocolLabel}" />
                    <TextBlock Grid.Row="2" Grid.Column="1" Name="Protocol" VerticalAlignment="Center" Foreground="{Binding ProtocolForeground}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ProtocolText, Mode=OneWay, TargetNullValue=''}" Value="">
                                        <Setter Property="Text" Value="{lex:BLoc NotAvailable}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Text" Value="{Binding ProtocolText, Mode=OneWay}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label Grid.Row="3" Grid.Column="0" Name="PortLabel" Content="{lex:Loc Port}" Visibility="{Binding PortVisible, Converter={StaticResource TrueVisibleFalseCollapsed}}" />
                    <TextBlock Grid.Row="3" Grid.Column="1" Name="Port" VerticalAlignment="Center" Foreground="{Binding PortForeground}" Visibility="{Binding PortVisible, Converter={StaticResource TrueVisibleFalseCollapsed}}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PortText, Mode=OneWay, TargetNullValue=''}" Value="">
                                        <Setter Property="Text" Value="{lex:BLoc NotAvailable}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Text" Value="{Binding PortText, Mode=OneWay}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label Grid.Row="4" Grid.Column="0" Content="{lex:Loc SerialNumberLabel}" />
                    <TextBlock Grid.Row="4" Grid.Column="1" Name="SerialNumber" VerticalAlignment="Center" Foreground="{Binding SerialNumberForeground}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SerialNumberText, Mode=OneWay, TargetNullValue=''}" Value="">
                                        <Setter Property="Text" Value="{lex:BLoc NotAvailable}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Text" Value="{Binding SerialNumberText, Mode=OneWay}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label Grid.Row="5" Grid.Column="0" Content="{lex:Loc FirmwareVersionLabel}" />
                    <TextBlock Grid.Row="5" Grid.Column="1" Name="FirmwareVersion" VerticalAlignment="Center" Foreground="{Binding FirmwareVersionForeground}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding FirmwareVersionText, Mode=OneWay, TargetNullValue=''}" Value="">
                                        <Setter Property="Text" Value="{lex:BLoc NotAvailable}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Text" Value="{Binding FirmwareVersionText, Mode=OneWay}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label Grid.Row="6" Grid.Column="0" Content="{lex:Loc FirmwareRevisionLabel}" />
                    <TextBlock Grid.Row="6" Grid.Column="1" Name="FirmwareRevision" VerticalAlignment="Center" Foreground="{Binding FirmwareRevisionForeground}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding FirmwareRevisionText, Mode=OneWay, TargetNullValue=''}" Value="">
                                        <Setter Property="Text" Value="{lex:BLoc NotAvailable}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Text" Value="{Binding FirmwareRevisionText, Mode=OneWay}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label Grid.Row="7" Grid.Column="0" Content="{lex:Loc FirmwareCRCLabel}"/>
                    <TextBlock Grid.Row="7" Grid.Column="1" Name="FirmwareCrc" VerticalAlignment="Center" Foreground="{Binding FirmwareCrcForeground}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding FirmwareCrcText, Mode=OneWay, TargetNullValue=''}" Value="">
                                        <Setter Property="Text" Value="{lex:BLoc NotAvailable}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Text" Value="{Binding FirmwareCrcText, Mode=OneWay}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                </Grid>

                <Grid Grid.Row="0" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Label Grid.Row="3" Grid.Column="0" Name="IdCardReadLabel" Content="{lex:Loc DataFromIdCardLabel}" />
                    <TextBlock Grid.Row="3" Grid.Column="1" Name="IdCardReadData" 
                               Text="{Binding IdCardReadData}"  
                               Foreground="{Binding IdCardReadDataForeground}"/>

                    <Label Grid.Row="0" Grid.Column="0" Content="{lex:Loc StateLabel}" />
                    <TextBlock Grid.Row="0" Grid.Column="1" Name="State" 
                               Text="{Binding StateText}" 
                               Foreground="{Binding StateForeground}" />

                    <Label Grid.Row="1" Grid.Column="0" Content="{lex:Loc SelfTestLabel}" />
                    <TextBlock Grid.Row="1" Grid.Column="1" Name="SelfTestStatus" 
                               Text="{Binding SelfTestText}"
                               Foreground="{Binding SelfTestForeground}" />

                    <Label Grid.Row="2" Grid.Column="0" Content="{lex:Loc StatusLabel}" />
                    <TextBlock Grid.Row="2" Grid.Column="1" Name="Status" 
                               Text="{Binding StatusText}" 
                               Foreground="{Binding StatusForeground}" />
                </Grid>
            </Grid>
        </Border>

        <Border Grid.Row="1" Margin="0 10 0 0" VerticalAlignment="Bottom">
            <StackPanel Orientation="Horizontal">
                <Button Name="SelfTestButton" 
                        Margin="0 0 20 0" 
                        Content="{lex:Loc SelfTestLabel}" 
                        Command="{Binding SelfTestButtonCommand}" 
                        Visibility="{Binding PortVisible, Converter={StaticResource TrueVisibleFalseCollapsed}}" 
                        IsEnabled="{Binding SelfTestButtonEnabled}" />
                <Button Name="SelfTestClearNvmButton"
                        Content="{lex:Loc SelfTestClearNVM}" 
                        Command="{Binding SelfTestClearButtonCommand}" 
                        Visibility="{Binding PortVisible, Converter={StaticResource TrueVisibleFalseCollapsed}}" 
                        IsEnabled="{Binding SelfTestButtonEnabled}" />
            </StackPanel>
        </Border>
    </Grid>

</operatorMenu:OperatorMenuPage>

