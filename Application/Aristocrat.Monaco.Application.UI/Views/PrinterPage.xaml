<operatorMenu:OperatorMenuPage x:Class="Aristocrat.Monaco.Application.UI.Views.PrinterPage"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                               xmlns:operatorMenu="clr-namespace:Aristocrat.Monaco.Application.UI.OperatorMenu"
                               xmlns:printer="clr-namespace:Aristocrat.Monaco.Application.UI.ViewModels"
                               xmlns:lex="http://wpflocalizeextension.codeplex.com"
                               xmlns:loc="http://monaco.aristocrat.com/localization"
                               mc:Ignorable="d" 
                               Background="Transparent"
                               d:DataContext="{d:DesignInstance {x:Type printer:PrinterViewModel}}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/OperatorMenu.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="Label" BasedOn="{StaticResource MonacoLabel}">
                <Setter Property="Margin" Value="0 0 10 10" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style TargetType="TextBlock" BasedOn="{StaticResource MonacoTextBlock}">
                <Setter Property="Margin" Value="0 0 0 10" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style TargetType="Button" BasedOn="{StaticResource MonacoButton}">
                <Setter Property="Width" Value="200" />
            </Style>

            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MonacoCheckBoxGeneral}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="350"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="0" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.Column="0" Content="{lex:Loc Key={x:Static loc:ResourceKeys.ManufacturerLabel}}" />
                    <TextBlock Grid.Row="0" Grid.Column="1" Foreground="{Binding ManufacturerForeground}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ManufacturerText, Mode=OneWay, TargetNullValue=''}" Value="">
                                        <Setter Property="Text" Value="{lex:BLoc Key={x:Static loc:ResourceKeys.NotAvailable}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Text" Value="{Binding ManufacturerText, Mode=OneWay}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label Grid.Row="1" Grid.Column="0" Content="{lex:Loc Key={x:Static loc:ResourceKeys.ModelLabel}}" />
                    <TextBlock Grid.Row="1" Grid.Column="1" Foreground="{Binding ModelForeground}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ModelText, Mode=OneWay, TargetNullValue=''}" Value="">
                                        <Setter Property="Text" Value="{lex:BLoc Key={x:Static loc:ResourceKeys.NotAvailable}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Text" Value="{Binding ModelText, Mode=OneWay}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label Grid.Row="2" Grid.Column="0" Content="{lex:Loc Key={x:Static loc:ResourceKeys.ProtocolLabel}}" />
                    <TextBlock Grid.Row="2" Grid.Column="1" Foreground="{Binding ProtocolForeground}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ProtocolText, Mode=OneWay, TargetNullValue=''}" Value="">
                                        <Setter Property="Text" Value="{lex:BLoc Key={x:Static loc:ResourceKeys.NotAvailable}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Text" Value="{Binding ProtocolText, Mode=OneWay}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label Grid.Row="3" Grid.Column="0" Content="{lex:Loc Key={x:Static loc:ResourceKeys.Port}}"
                                   Visibility="{Binding PortVisible, Converter={StaticResource TrueVisibleFalseCollapsed}}"/>
                    <TextBlock Grid.Row="3" Grid.Column="1" Foreground="{Binding PortForeground}" 
                                       Visibility="{Binding PortVisible, Converter={StaticResource TrueVisibleFalseCollapsed}}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PortText, Mode=OneWay, TargetNullValue=''}" Value="">
                                        <Setter Property="Text" Value="{lex:BLoc Key={x:Static loc:ResourceKeys.NotAvailable}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Text" Value="{Binding PortText, Mode=OneWay}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label Grid.Row="4" Grid.Column="0" Content="{lex:Loc Key={x:Static loc:ResourceKeys.SerialNumberLabel}}" />
                    <TextBlock Grid.Row="4" Grid.Column="1" Foreground="{Binding SerialNumberForeground}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SerialNumberText, Mode=OneWay, TargetNullValue=''}" Value="">
                                        <Setter Property="Text" Value="{lex:BLoc Key={x:Static loc:ResourceKeys.NotAvailable}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Text" Value="{Binding SerialNumberText, Mode=OneWay}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label Grid.Row="5" Grid.Column="0" Content="{lex:Loc Key={x:Static loc:ResourceKeys.FirmwareVersionLabel}}" />
                    <TextBlock Grid.Row="5" Grid.Column="1" Foreground="{Binding FirmwareVersionForeground}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding FirmwareVersionText, Mode=OneWay, TargetNullValue=''}" Value="">
                                        <Setter Property="Text" Value="{lex:BLoc Key={x:Static loc:ResourceKeys.NotAvailable}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Text" Value="{Binding FirmwareVersionText, Mode=OneWay}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label Grid.Row="6" Grid.Column="0" Content="{lex:Loc Key={x:Static loc:ResourceKeys.FirmwareRevisionLabel}}" />
                    <TextBlock Grid.Row="6" Grid.Column="1" Foreground="{Binding FirmwareRevisionForeground}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding FirmwareRevisionText, Mode=OneWay, TargetNullValue=''}" Value="">
                                        <Setter Property="Text" Value="{lex:BLoc Key={x:Static loc:ResourceKeys.NotAvailable}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Text" Value="{Binding FirmwareRevisionText, Mode=OneWay}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label Grid.Row="7" Grid.Column="0" Content="{lex:Loc Key={x:Static loc:ResourceKeys.FirmwareCRCLabel}}"/>
                    <TextBlock Grid.Row="7" Grid.Column="1" Foreground="{Binding FirmwareCrcForeground}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding FirmwareCrcText, Mode=OneWay, TargetNullValue=''}" Value="">
                                        <Setter Property="Text" Value="{lex:BLoc Key={x:Static loc:ResourceKeys.NotAvailable}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Text" Value="{Binding FirmwareCrcText, Mode=OneWay}"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Label Grid.Row="8" Grid.Column="0" Content="{lex:Loc Key={x:Static loc:ResourceKeys.ActivationTimeLabel}}" 
                           Visibility="{Binding ActivationVisible, Converter={StaticResource TrueVisibleFalseCollapsed}}"/>
                    <TextBlock Grid.Row="8" Grid.Column="1" Text="{Binding ActivationTime}"
                                       Foreground="{Binding ActivationForeground}"
                                       Visibility="{Binding ActivationVisible, Converter={StaticResource TrueVisibleFalseCollapsed}}"/>
                </Grid>
                <Grid Grid.Row="0" Grid.Column="1" Grid.IsSharedSizeScope="True">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="B" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.Column="0" Content="{lex:Loc Key={x:Static loc:ResourceKeys.StateLabel}}" />
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding StateText}" Foreground="{Binding StateForeground}" />

                    <Label Grid.Row="1" Grid.Column="0" Content="{lex:Loc Key={x:Static loc:ResourceKeys.SelfTestLabel}}" />
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding SelfTestText}" Foreground="{Binding SelfTestForeground}" />

                    <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" MinHeight="60" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="B" MinWidth="150"/>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Content="{lex:Loc Key={x:Static loc:ResourceKeys.StatusLabel}}"  />
                        <TextBlock Grid.Column="1" Grid.RowSpan="6" Name="Status" Text="{Binding StatusText}" 
                                   Foreground="{Binding StatusForeground}" />
                    </Grid>

                    <StackPanel Grid.Row="3" Grid.Column ="0" Grid.ColumnSpan="3" Margin="0 20 0 0" Orientation="Horizontal" 
                                Visibility="{Binding ShowPrintLanguageSettings, Converter={StaticResource TrueVisibleFalseCollapsed}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Grid.Column ="0" Margin="0 5 0 0" Content="{lex:Loc Key={x:Static loc:ResourceKeys.PrintLanguage}}"/>
                            <CheckBox Name="PrintLanguageOverrideCheckbox" Grid.Row="0" Grid.Column ="1" Margin="27 5 0 5" Width="46"
                                      IsChecked="{Binding PrintLanguageOverrideIsChecked, Mode=TwoWay}"
                                      IsEnabled="{Binding PrintLanguageOverrideIsEnabled}"
                                      Visibility="{Binding ShowOperatorOverrideCheckBox, Converter={StaticResource TrueVisibleFalseCollapsed}}"/>
                            <ComboBox Grid.Row="0" Grid.Column="2" Width="300" HorizontalAlignment="Left" Margin="27 0 0 0" 
                                      IsEnabled="{Binding SelectedPrintLanguageIsEnabled}"
                                      ItemsSource="{Binding PrintLanguages}"
                                      DisplayMemberPath="Item2"
                                      SelectedValuePath="Item2"
                                      SelectedValue="{Binding SelectedPrintLanguage}"/>
                        </Grid>
                    </StackPanel>
                </Grid>
           </Grid>
        </Border>

        <Border Grid.Row="1" Margin="0 15 0 0" VerticalAlignment="Bottom">
            <StackPanel Orientation="Horizontal">
                <Button Content="{lex:Loc Key={x:Static loc:ResourceKeys.FormFeedButton}}" 
                        Command="{Binding FormFeedButtonCommand}"
                        IsEnabled="{Binding PrinterButtonsEnabled}" />
                <Button Content="{lex:Loc Key={x:Static loc:ResourceKeys.PrintDiagnosticButton}}" 
                        Command="{Binding PrintDiagnosticButtonCommand}"
                        IsEnabled="{Binding PrinterButtonsEnabled}" />
                <Button Content="{lex:Loc Key={x:Static loc:ResourceKeys.SelfTestLabel}}" 
                        Name="SelfTestButton"
                        Command="{Binding SelfTestButtonCommand}"
                        Visibility="{Binding IsSelfTestVisible, Converter={StaticResource TrueVisibleFalseCollapsed}}" 
                        IsEnabled="{Binding PrinterButtonsEnabled}" />
                <Button Content="{lex:Loc Key={x:Static loc:ResourceKeys.SelfTestClearNVM}}" 
                        Command="{Binding SelfTestClearButtonCommand}"
                        Visibility="{Binding IsSelfTestVisible, Converter={StaticResource TrueVisibleFalseCollapsed}}" 
                        IsEnabled="{Binding PrinterButtonsEnabled}" />
                <Button Content="{lex:Loc Key={x:Static loc:ResourceKeys.PrintTestTicket}}" 
                        Name="PrintTestTicketButton"
                        Command="{Binding PrintTestTicketCommand}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource BoolAndConverter}">
                            <Binding Path="TestModeEnabled"/>
                            <Binding Path="PrinterButtonsEnabled"/>
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
                <Button Name="WarningButton" Style="{StaticResource MonacoWarningButton}"
                        Command="{Binding ShowInfoPopupCommand}"
                        Visibility="{Binding TestModeEnabled, Converter={StaticResource TrueHiddenFalseVisible}}">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource MultiValueConverter}">
                            <Binding ElementName="WarningButton"/>
                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Control}" Path="DataContext.TestWarningText" />
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
            </StackPanel>
        </Border>
    </Grid>
</operatorMenu:OperatorMenuPage>