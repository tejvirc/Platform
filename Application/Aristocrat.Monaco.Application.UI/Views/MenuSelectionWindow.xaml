<common:BaseWindow x:Class="Aristocrat.Monaco.Application.UI.Views.MenuSelectionWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:common="http://monaco.aristocrat.com/common"
                   xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                   xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                   xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Application.UI.ViewModels"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   common:DialogParticipation.Register="{Binding}"
                   xmlns:views="clr-namespace:Aristocrat.Monaco.Application.UI.Views"
                   xmlns:loc="http://monaco.aristocrat.com/localization"
                   xmlns:lex="http://wpflocalizeextension.codeplex.com"
                   xmlns:behaviors="clr-namespace:Aristocrat.Monaco.UI.Common.Behaviors;assembly=Aristocrat.Monaco.UI.Common"
                   xmlns:events="clr-namespace:Aristocrat.Monaco.UI.Common.Events;assembly=Aristocrat.Monaco.UI.Common"
                   loc:Localizer.For="Operator"
                   mc:Ignorable="d" 
                   d:DataContext="{d:DesignInstance {x:Type viewModels:MenuSelectionViewModel}}"
                   Title="OperatorMenuWindow"
                   WindowStyle="None"
                   FocusManager.FocusedElement="{Binding ElementName=ExitButton}"
                   Initialized="Window_Initialized"
                   Background="{DynamicResource OperatorMenuDark}"
                   BorderBrush="Black"
                   BorderThickness="1"
                   x:Name="OperatorMenuWindow">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding HandleLoadedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding HandleClosingCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="ContentRendered">
            <i:InvokeCommandAction Command="{Binding HandleContentRenderedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <common:BaseWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/OperatorMenu.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <common:DateTimeFormatConverter x:Key="DateTimeFormatConverter"/>

            <Style x:Key="CalibrationTextStyle"
                   TargetType="TextBlock"
                   BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="Foreground"
                        Value="{DynamicResource OperatorMenuLabelText}" />
                <Setter Property="FontWeight"
                        Value="Bold" />
                <Setter Property="FontSize"
                        Value="16" />
                <Setter Property="FontFamily"
                        Value="Helvetica" />
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="(TextBlock.Opacity)"
                                                     From="1" To="0"
                                                     Duration="00:00:02"
                                                     AutoReverse="True"
                                                     RepeatBehavior="Forever" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="SinglePageTemplate" DataType="{x:Type ContentControl}">
                <GroupBox Header="{Binding DataContext.SelectedItem.PageName, ElementName=OperatorMenuWindow}"
                          Margin="20" loc:Localizer.LocalizationAware="True">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ContentControl Grid.Row="0" Content="{Binding DataContext.SelectedItem.Page, ElementName=OperatorMenuWindow}"/>

                        <TextBlock Grid.Row="1"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Bottom"
                                   TextWrapping="Wrap"
                                   Style="{StaticResource MonacoWarningTextBlock}"
                                   Text="{Binding DataContext.WarningMessageText, ElementName=OperatorMenuWindow, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                </GroupBox>
            </DataTemplate>

            <GridLength x:Key="GoldenRatioGridLength">1.618*</GridLength>

        </ResourceDictionary>
    </common:BaseWindow.Resources>

    <i:Interaction.Behaviors>
        <behaviors:TouchWindowBehavior />
        <behaviors:HighDpiWindowBehavior/>
    </i:Interaction.Behaviors>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>

        <i:Interaction.Triggers>
            <events:RoutedEventTrigger RoutedEvent="{x:Static FrameworkElement.SizeChangedEvent}" Target="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                <common:AdaptToOrientationGridAction FirstRowHeightWhenPortrait="{StaticResource GoldenRatioGridLength}" />
            </events:RoutedEventTrigger>
            <events:RoutedEventTrigger RoutedEvent="{x:Static FrameworkElement.LoadedEvent}">
                <common:AdaptToOrientationGridAction FirstRowHeightWhenPortrait="{StaticResource GoldenRatioGridLength}" />
            </events:RoutedEventTrigger>
        </i:Interaction.Triggers>

        <Viewbox Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="UniformToFill">
            <Image Source="../Resources/AristocratLogoPortrait.png"   />
        </Viewbox>

        <Border Grid.Row="1" BorderThickness="0,2,0,0" >
            <Border.BorderBrush>
                <SolidColorBrush Color="#FF234371"/>
            </Border.BorderBrush>
            <!-- Name is used to center dialogs within this element -->
            <Grid x:Name="AuditMenu">
                <Grid.Resources>
                    <Image x:Key="StripImage" Source="../Resources/Operator_Menu_Background_Strip.png">
                        <Image.OpacityMask>
                            <LinearGradientBrush StartPoint=".5,0" EndPoint=".5,1" >
                                <GradientStop Offset="0.0" Color="#001C3053" />
                                <GradientStop Offset="1" Color="#FF1C3053" />
                            </LinearGradientBrush>
                        </Image.OpacityMask>
                    </Image>
                    <VisualBrush x:Key="StripBrush"  Visual="{StaticResource StripImage}"/>
                </Grid.Resources>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="5" />
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Border Grid.Row="0" Grid.Column="0" Background="{DynamicResource OperatorMenuMedium}" BorderBrush="{DynamicResource OperatorMenuDark}" Height="100">
                    <Image Source="../Resources/Aristocrat_Logo_White_Large.png" Stretch="Uniform" VerticalAlignment="Center" Margin="12" />
                </Border>

                <Border Grid.Row="1" Grid.Column="0" Background="{DynamicResource OperatorMenuDropShadowBrush}"/>

                <Grid Grid.Row="2" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <common:TouchListBox Name="Views" ItemsSource="{Binding MenuItems}" 
                                         SelectedItem="{Binding SelectedItem, Mode=TwoWay}" Grid.Row="0" Width="320"
                                         Margin="0 10 0 0" BorderBrush="{StaticResource OperatorMenuDark}" 
                                         Background="{StaticResource OperatorMenuDark}" BorderThickness="0" 
                                         Style="{StaticResource MonacoListBox}">
                        <common:TouchListBox.ItemTemplate>
                            <DataTemplate>
                                <Border BorderThickness="0,0,0,0" BorderBrush="{StaticResource AccentColorBrush2}" Background="Transparent">
                                    <TextBlock Text="{Binding PageName}" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                               Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem, Mode=FindAncestor}, Path=Foreground}"
                                               FontSize="{StaticResource Heading4FontSize}" Margin="50 0 0 0" Padding="0 13 0 13"
                                               loc:Localizer.LocalizationAware="True" />
                                </Border>
                            </DataTemplate>
                        </common:TouchListBox.ItemTemplate>
                        <common:TouchListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MetroListBoxItem}">
                                <Style.Resources>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource HighlightColor}"/>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{StaticResource HighlightColor}"/>
                                </Style.Resources>
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="IsEnabled" Value="False"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                                                    <DataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True"/>
                                                    </DataTrigger.Setters>
                                                </DataTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="{x:Null}"/>
                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{x:Null}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource OperatorMenuLabelText}" />
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource MenuHighlightBrush}"/>
                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{x:Null}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource OperatorMenuDark}" />
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsEnabled" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="{x:Null}"/>
                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{x:Null}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource OperatorMenuDisabledText}" />
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </common:TouchListBox.ItemContainerStyle>
                    </common:TouchListBox>

                    <Button Name="ToggleLanguageButton" Margin="0,20,0,0" TabIndex="100" Grid.Row="1" Width="196" Height="45" 
                            Command="{Binding LanguageChangedCommand}" 
                            Content="{Binding ToggleLanguageButtonText}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Visibility="{Binding ShowToggleLanguageButton, Converter={StaticResource TrueVisibleFalseCollapsed}}"/>

                    <Grid Grid.Row="2" Margin="0,20,0,0">
                        <Grid Visibility="{Binding ShowExitButton, Converter={StaticResource TrueVisibleFalseCollapsed}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Button Name="ExitButton" TabIndex="100" Grid.Column="0" Width="65" Height="45" Style="{StaticResource MonacoButton1}"
                                    Command="{Binding ExitButtonCommand}" Margin="30,0,0,0" HorizontalAlignment="Center">
                                <Grid>
                                    <iconPacks:PackIconMaterial Kind="ExitToApp" Flip="Horizontal" Width="25" Height="25"/>
                                </Grid>
                            </Button>

                            <Button IsEnabled="{Binding PrintButtonEnabled}" Grid.Column="1" Width="65" Height="45" HorizontalAlignment="Center" Margin="0,0,30,0"
                                    Command="{Binding PrintButtonCommand}" Style="{StaticResource MonacoButton1}"
                                    Visibility="{Binding ShowCancelPrintButton, Converter={StaticResource TrueCollapsedFalseVisible}}">
                                <Grid>
                                    <iconPacks:PackIconFontAwesome Kind="Print" Width="25" Height="25"/>
                                </Grid>
                            </Button>
                            <Button Grid.Column="1" Width="65" Height="45" HorizontalAlignment="Center" Margin="0,0,30,0"
                                    IsEnabled="{Binding CancelButtonEnabled}"
                                    Command="{Binding PrintButtonCommand}" Style="{StaticResource MonacoButton1}" 
                                    Visibility="{Binding ShowCancelPrintButton, Converter={StaticResource TrueVisibleFalseCollapsed}}">
                                <Grid>
                                    <iconPacks:PackIconModern Kind="Cancel" Width="25" Height="25"/>
                                </Grid>
                            </Button>
                        </Grid>
                        <Grid Visibility="{Binding ShowExitButton, Converter={StaticResource TrueCollapsedFalseVisible}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Button IsEnabled="{Binding PrintButtonEnabled}" Width="90" Height="45" HorizontalAlignment="Center"
                                    Command="{Binding PrintButtonCommand}" Style="{StaticResource MonacoButton1}"
                                    Visibility="{Binding ShowCancelPrintButton, Converter={StaticResource TrueCollapsedFalseVisible}}">
                                <Grid>
                                    <iconPacks:PackIconFontAwesome Kind="Print" Width="25" Height="25"/>
                                </Grid>
                            </Button>
                            <Button Width="90" Height="45" HorizontalAlignment="Center"
                                    IsEnabled="{Binding CancelButtonEnabled}"
                                    Command="{Binding PrintButtonCommand}" Style="{StaticResource MonacoButton1}" 
                                    Visibility="{Binding ShowCancelPrintButton, Converter={StaticResource TrueVisibleFalseCollapsed}}">
                                <Grid>
                                    <iconPacks:PackIconModern Kind="Cancel" Width="25" Height="25"/>
                                </Grid>
                            </Button>
                        </Grid>
                    </Grid>

                    <Border Grid.Row="3" HorizontalAlignment="Center" Background="{StaticResource MenuHighlightBrush}" Margin="0,25,0,20" 
                            Visibility="{Binding CreditBalanceVisible, Converter={StaticResource TrueVisibleFalseCollapsed}, FallbackValue=Hidden}">
                        <Label Margin="10" VerticalAlignment="Center" Name="CreditBalance" Content="{Binding CreditBalanceContent}" Foreground="{StaticResource OperatorMenuDark}"/>
                    </Border>

                </Grid>

                <Border Background="{DynamicResource OperatorMenuDark}" Grid.Row="0" Grid.Column="1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="55"/>
                        </Grid.ColumnDefinitions>
                        <Image Source="../Resources/Audit.png" Stretch="None" Grid.Column="0" Margin="30 0 20 0"/>
                        <StackPanel Orientation="Horizontal" Grid.Column="1" Height="100" VerticalAlignment="Center" Visibility="{Binding IsPageTitleVisible, Converter={StaticResource TrueVisibleFalseCollapsed}}">
                            <Label Name="PageTitle" VerticalAlignment="Center" Content="{Binding PageTitleContent}" FontWeight="Bold" FontSize="{StaticResource Heading3FontSize}"/>
                            <Label HorizontalAlignment="Center" VerticalAlignment="Center" Content="/" FontSize="{StaticResource Heading3FontSize}" />
                            <Label Name="OperatorMenuLabel" VerticalAlignment="Center" Content="{Binding OperatorMenuLabelContent}" FontWeight="Bold" FontSize="{StaticResource Heading3FontSize}"/>
                        </StackPanel>
                        <ComboBox Grid.Column="2" Name="LanguageComboBox" ItemsSource="{Binding SupportedLanguages}" Visibility="Hidden" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,20,0">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding LanguageChangedCommand}" CommandParameter="{Binding SelectedItem, ElementName=LanguageComboBox}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                        <Label Grid.Column="3" Name="DateTime" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="{StaticResource Heading4FontSize}" Content="{Binding CurrentDateTime, Converter={StaticResource DateTimeFormatConverter}}"/>
                        <iconPacks:PackIconMaterial Grid.Column="4" Kind="Clock" Foreground="{DynamicResource OperatorMenuLabelText}" 
                                                    Margin="10 -5 10 0" Width="35" Height="35" VerticalAlignment="Center"/>
                    </Grid>
                </Border>

                <Border Grid.Row="1" Grid.Column="1" Background="{StaticResource StripBrush}"/>

                <Grid Grid.Row="2" Grid.Column="1" Margin="0,0,0,0">
                    <Grid.Background>
                        <LinearGradientBrush StartPoint="0,.3"
                                             EndPoint="1,.7">
                            <GradientStop Color="{StaticResource BlackColor}"
                                          Offset="0"/>
                            <GradientStop Color="{StaticResource DarkColor1}"
                                          Offset=".1"/>
                            <GradientStop Color="{StaticResource DarkColor2}"
                                          Offset=".4"/>
                            <GradientStop Color="{StaticResource Color1}"
                                          Offset=".9"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <ContentControl x:Name="MenuContentControl" Content="{Binding SelectedItem.Page}" Margin="5">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Setter Property="ContentTemplate" Value="{x:Null}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedItem.IsMultiPage}" Value="False">
                                        <Setter Property="ContentTemplate" Value="{StaticResource SinglePageTemplate}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                    <controls:ProgressRing Height="100" Width="100" IsLarge="True" IsActive="True" 
                                           VerticalAlignment="Center" HorizontalAlignment="Center"
                                           Visibility="{Binding IsLoadingData, Converter={StaticResource TrueVisibleFalseCollapsed}}" />
                    <views:OperatorMenuPopup/>
                </Grid>

                <Border Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Background="{StaticResource OperatorMenuMedium}" Height="30" BorderBrush="Black" BorderThickness="0,1,0,0">
                    <Grid>
                        <Label Name="PrintStatus"  Content="{Binding PrintStatusText}" Margin="20 0 0 0" FontSize="{StaticResource Heading5FontSize}" FontWeight="Bold"
                               HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{StaticResource HighlightBrush1}" />

                        <TextBlock Margin="0 0 20 0" Visibility="{Binding CanCalibrateTouchScreens,Mode=OneWay, Converter={StaticResource TrueVisibleFalseCollapsed}}"
                                   Text="{lex:Loc Key={x:Static loc:ResourceKeys.CalibrationText}}"
                                   Style="{StaticResource CalibrationTextStyle}" 
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right"
                                   Foreground="{StaticResource HighlightBrush1}"/>

                        <TextBlock Margin="0 0 20 0" Visibility="{Binding ShowMainDoorText,Mode=OneWay, Converter={StaticResource TrueVisibleFalseCollapsed}}"
                                   Text="{lex:Loc Key={x:Static loc:ResourceKeys.CalibrationAccess}}"
                                   Style="{StaticResource CalibrationTextStyle}" 
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right"
                                   Foreground="{StaticResource HighlightBrush1}"/>

                    </Grid>
                </Border>
            </Grid>
        </Border>
    </Grid>
</common:BaseWindow>
