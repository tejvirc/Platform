<operatorMenu:OperatorMenuPage x:Class="Aristocrat.Monaco.Application.UI.Views.SoundConfigPage"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                               xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Application.UI.ViewModels"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                               xmlns:common="http://monaco.aristocrat.com/common"
                               xmlns:operatorMenu="clr-namespace:Aristocrat.Monaco.Application.UI.OperatorMenu"
                               xmlns:lex="http://wpflocalizeextension.codeplex.com"
                               xmlns:loc="http://monaco.aristocrat.com/localization"
                               xmlns:audio="clr-namespace:Aristocrat.Monaco.Hardware.Contracts.Audio;assembly=Aristocrat.Monaco.Hardware.Contracts"
                               mc:Ignorable="d"
                               common:DialogParticipation.Register="{Binding}"
                               d:DataContext="{d:DesignInstance viewModels:SoundConfigPageViewModel, IsDesignTimeCreatable=False}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/OperatorMenu.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="OptionComboStyle"
                   TargetType="ComboBox"
                   BasedOn="{StaticResource {x:Type ComboBox}}">
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="Margin"
                        Value="10 0 0 0" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Margin="0 10" VerticalAlignment="Top" HorizontalAlignment="Left">
            <Label VerticalAlignment="Center"
                       Content="{lex:Loc Key={x:Static loc:ResourceKeys.MasterSoundVolumeLabel}}"/>
            <ComboBox MinWidth="250"
                          Margin="0 10 0 0"
                          ItemsSource="{common:Enumeration {x:Type audio:VolumeLevel}}"
                          SelectedIndex="0"
                          DisplayMemberPath="Description"
                          SelectedValuePath="Value"
                          SelectedValue="{Binding SoundLevel}"
                          Style="{StaticResource OptionComboStyle}"
                          IsEnabled="{Binding Path=CanEditVolume}"/>
        </StackPanel>
        <StackPanel  Grid.Row="1" Margin="0 10"
                     VerticalAlignment="Top" 
                     HorizontalAlignment="Left"
                     Visibility="{Binding IsAlertConfigurable, Converter={StaticResource BoolToVisConverter}}">
            <Label Content="{lex:Loc Key={x:Static loc:ResourceKeys.AlertVolumeLabel}}" 
                   VerticalAlignment="Center" HorizontalAlignment="Left" />
            <Slider x:Name="AlertSlider" 
                        Style="{StaticResource MonacoSlider}"  
                        Value="{Binding AlertVolume}" 
                        MinWidth="400" 
                        HorizontalAlignment="Left" Minimum="{Binding AlertMinimumVolume}" Maximum="100" TickFrequency="10" IsSnapToTickEnabled="True" 
                        IsEnabled="{Binding Path=CanEditVolume}"/>
        </StackPanel>
        <StackPanel Grid.Row="2" Margin="0 10"
                    VerticalAlignment="Bottom" 
                    Orientation="Horizontal"
                    HorizontalAlignment="Left">
            <Button Content="{lex:Loc Key={x:Static loc:ResourceKeys.SoundTest}}"
                        Command="{Binding SoundTestCommand}"
                        IsEnabled="{Binding TestModeEnabled, UpdateSourceTrigger=PropertyChanged}"/>
            <Button Name="WarningButton"
                        Style="{StaticResource MonacoWarningButton}"
                        Command="{Binding ShowInfoPopupCommand}"
                        Visibility="{Binding TestModeEnabled,UpdateSourceTrigger=PropertyChanged , Converter={StaticResource BoolToCollapsedConverter}}">
                <Button.CommandParameter>
                    <MultiBinding Converter="{StaticResource MultiValueConverter}">
                        <Binding ElementName="WarningButton"/>
                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Control}"
                                 Path="DataContext.TestWarningText"/>
                    </MultiBinding>
                </Button.CommandParameter>
            </Button>
        </StackPanel>
    </Grid>
</operatorMenu:OperatorMenuPage>