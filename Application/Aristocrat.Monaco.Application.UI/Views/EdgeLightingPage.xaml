<operatorMenu:OperatorMenuPage x:Class="Aristocrat.Monaco.Application.UI.Views.EdgeLightingPage"
                              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                              xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                              xmlns:operatorMenu="clr-namespace:Aristocrat.Monaco.Application.UI.OperatorMenu"
                              xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Application.UI.ViewModels"
                              xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                              xmlns:local="clr-namespace:Aristocrat.Monaco.Application.UI.Views"
                              xmlns:helpers="http://monaco.aristocrat.com/common"
                              xmlns:lex="http://wpflocalizeextension.codeplex.com"
                              lex:ResxLocalizationProvider.DefaultAssembly="Aristocrat.Monaco.Localization"
                              lex:ResxLocalizationProvider.DefaultDictionary="Resources" 
                              xmlns:loc="http://monaco.aristocrat.com/localization"
                              mc:Ignorable="d" 
                              d:DesignWidth="1080" d:DesignHeight="720" 
                              d:DataContext="{d:DesignInstance {x:Type viewModels:EdgeLightingPageViewModel}}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/OperatorMenu.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel>
            <StackPanel Name="SettingsPanel" Visibility="{Binding Visibility, ElementName=EnterTestModeButton}">
                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top"
                            Visibility="{Binding ShowOverrideSetting, Converter={StaticResource BoolToVisConverter}}">
                    <Label  Content="{lex:Loc LightingOverrideOnIdleAndZeroCreditsLabel}" HorizontalAlignment="Left"/>
                    <ComboBox HorizontalAlignment="Left" ItemsSource="{Binding LightingOverrideChoices}" 
                              SelectedValue="{Binding EdgeLightingAttractModeOverrideSelection}" SelectedValuePath="Key" DisplayMemberPath="Value" Margin="10" 
                              MinWidth="250"
                              IsEnabled="{Binding EdgeLightingEnabled, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0 20 0 0" 
                            Visibility="{Binding IsCabinetThatAllowsEdgeLightBrightnessSetting, Converter={StaticResource BoolToVisConverter}}" >
                    <Label Content="{lex:Loc LightingBrightnessLabel}" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                    <StackPanel  Orientation="Horizontal" Margin="10 0 0 0" HorizontalAlignment="Left">
                        <Slider Name="BrightnessSlider" Style="{StaticResource MonacoSlider}" Value="{Binding MaximumAllowedBrightnessValue}" MinWidth="400"
                                HorizontalAlignment="Left" Minimum="{Binding MinimumBrightnessSetting, Mode=OneWay}"  Maximum="{Binding MaximumBrightnessSetting, Mode=OneWay}"
                                TickFrequency="10" IsSnapToTickEnabled="True" 
                                IsEnabled="{Binding EdgeLightingEnabled, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <StackPanel Visibility="{Binding IsCabinetThatAllowsBottomStripToggle, Converter={StaticResource BoolToVisConverter}}">
                        <Label  Content="{lex:Loc MainDisplayBottomLightingLabel}" HorizontalAlignment="Left"  Margin="0 15 0 0"/>
                            <controls:ToggleSwitch controls:ControlsHelper.ContentCharacterCasing="Upper"
                                                   controls:ControlsHelper.CornerRadius="0"
                                                   helpers:ToggleSwitchButtonHelper.OffContent="{lex:Loc Off}"
                                                   helpers:ToggleSwitchButtonHelper.OnContent="{lex:Loc On}" Margin="10 10 0 0"
                                                   IsEnabled="{Binding EdgeLightingEnabled, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
            <StackPanel Name="TestPanel" Visibility="{Binding Visibility, ElementName=ExitTestModeButton}">
                <local:EdgeLightingTestControl x:Name="TestControl" DataContext="{Binding TestViewModel}"/>
            </StackPanel>
        </StackPanel>
        <StackPanel Grid.Row="1" VerticalAlignment="Bottom" Orientation="Vertical">
            <StackPanel Orientation="Horizontal" Margin="0 10 0 0" HorizontalAlignment="Left">
                <Button Name="EnterTestModeButton" Content="{lex:Loc TestEdgeLightingLabel}"
                        IsEnabled="{Binding TestButtonEnabled, UpdateSourceTrigger=PropertyChanged}" 
                        Visibility="{Binding InTestMode, Converter={StaticResource BoolToCollapsedConverter}}"
                        Command="{Binding ToggleTestModeCommand}"/>
                <Button Name="ExitTestModeButton" Visibility="{Binding InTestMode, Converter={StaticResource BoolToVisConverter}}"
                        Command="{Binding ToggleTestModeCommand}"
                        Content="{lex:Loc ExitEdgeLightingTestLabel}"/>
                <Button x:Name="WarningButton" 
                        Style="{StaticResource MonacoWarningButton}"
                        VerticalAlignment="Center"
                        Command="{Binding ShowInfoPopupCommand}"
                        Visibility="{Binding TestModeEnabled, Converter={StaticResource BoolToHiddenConverter}}">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource MultiValueConverter}">
                                <Binding ElementName="WarningButton"/>
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type Control}, Mode=FindAncestor}" Path="DataContext.TestWarningText" />
                            </MultiBinding>
                        </Button.CommandParameter>
                </Button>
            </StackPanel>
        </StackPanel>
    </Grid>
</operatorMenu:OperatorMenuPage>

