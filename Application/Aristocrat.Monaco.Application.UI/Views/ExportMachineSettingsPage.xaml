<operatorMenu:OperatorMenuPage x:Class="Aristocrat.Monaco.Application.UI.Views.ExportMachineSettingsPage"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                               xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                               xmlns:operatorMenu="clr-namespace:Aristocrat.Monaco.Application.UI.OperatorMenu"
                               xmlns:lex="http://wpflocalizeextension.codeplex.com"
                               xmlns:loc="http://monaco.aristocrat.com/localization"
                               xmlns:common="http://monaco.aristocrat.com/common"
                               xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                               xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Application.UI.ViewModels"
                               xmlns:models="clr-namespace:Aristocrat.Monaco.Application.UI.Models"
                               mc:Ignorable="d" 
                               d:DataContext="{d:DesignInstance viewModels:ExportMachineSettingsViewModel}"
                               common:DialogParticipation.Register="{Binding}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/OperatorMenu.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <common:TextCaseConverter x:Key="TextCase" />

            <Style x:Key="SettingNameStyle" 
                   TargetType="TextBlock" 
                   BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="Margin" Value="0 0 20 10" />
                <Setter Property="FontSize" Value="{DynamicResource Heading4FontSize}" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Width" Value="600" />
            </Style>

            <Style x:Key="SettingValueStyle" 
                   TargetType="TextBlock" 
                   BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="Foreground" Value="{StaticResource WhiteColorBrush}" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>

            <DataTemplate x:Key="SettingsViewer" DataType="models:ConfigurationSetting">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Border Grid.Row="0" Padding="0 5 0 5">
                        <Label Content="{Binding Name}" Foreground="{DynamicResource WhiteColorBrush}" />
                    </Border>

                    <Border Grid.Row="1" Padding="0 14 0 5">
                        <ContentControl Content="{Binding Settings}"/>
                    </Border>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Border Grid.Row="0">
            <TextBlock DockPanel.Dock="Top" TextWrapping="Wrap" Text="{lex:Loc {x:Static loc:ResourceKeys.ExportSettingsText}}" />
        </Border>
        
        <Border Grid.Row="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <ListBox Grid.Row="0"
                         Grid.Column="0"
                         Visibility="Visible" 
                         IsEnabled="True"
                         HorizontalAlignment="Stretch"
                         Style="{StaticResource MonacoScrollButtonsListBox}"
                         BorderBrush="{StaticResource Brush3}"
                         ItemsSource="{Binding ConfigurationSettings}" 
                         ItemTemplate="{StaticResource SettingsViewer}"/>
            </Grid>
        </Border>

        <Border Grid.Row="2">
            <DockPanel LastChildFill="False">
                <StackPanel  DockPanel.Dock="Top" Orientation="Horizontal" Margin="0 20 0 0" HorizontalAlignment="Left">
                    <Button Width="Auto"
                            Content="{lex:Loc Key={x:Static loc:ResourceKeys.ExportMachineSettings}}"
                            Command="{Binding ExportCommand}" />
                    <Button Margin="0 15 0 0" HorizontalAlignment="Left"
                            Name="WarningButton" Style="{StaticResource MonacoWarningButton}"
                            Command="{Binding ShowInfoPopupCommand}">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource MultiValueConverter}">
                                <Binding ElementName="WarningButton"/>
                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Control}" Path="DataContext.ExportSettingsNoteText" />
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                    <controls:ProgressRing Margin="20 0 0 0" 
                                           Foreground="{DynamicResource AccentColorBrush}" 
                                           Height="40" 
                                           Width="40" 
                                           IsActive="{Binding IsInProgress}" 
                                           VerticalAlignment="Center" />
                </StackPanel>
                <Label  DockPanel.Dock="Top"
                        Content="{lex:Loc {x:Static loc:ResourceKeys.ExportSettingsErrorText}}"  
                        Style="{StaticResource MonacoLabel}" 
                        Margin="0 20 0 0"
                        Foreground="{StaticResource RedBrush}"  
                        FontSize="{StaticResource NormalFontSize}" 
                        Visibility="{Binding IsError, Converter={StaticResource BoolToVisConverter}}" />
            </DockPanel>
        </Border>
    </Grid>

</operatorMenu:OperatorMenuPage>
