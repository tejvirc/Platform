<operatorMenu:OperatorMenuPage x:Class="Aristocrat.Monaco.Accounting.UI.Views.VoucherOutLog"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                               xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                               xmlns:lex="http://wpflocalizeextension.codeplex.com"
                               xmlns:loc="http://monaco.aristocrat.com/localization"
                               xmlns:operatorMenu="clr-namespace:Aristocrat.Monaco.Application.UI.OperatorMenu;assembly=Aristocrat.Monaco.Application.UI"                               
                               mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/OperatorMenu.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <DataGrid Name="VoucherOutViewer" RowHeight="26" Width="{Binding ElementName=MainGrid, Path=ActualWidth}" 
                  ItemsSource="{Binding Path=VoucherOutData, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedItem="{Binding SelectedRow}"
                  ScrollViewer.CanContentScroll="True" SelectionMode="Single" >
            <DataGrid.Columns>
                <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.SequenceNumberHeader}}"
                                    IsReadOnly="True" Visibility="Collapsed"
                                    Binding="{Binding SequenceNumber}" Width="200"/>
                <DataGridTextColumn Header="#"
                                    IsReadOnly="True"
                                    Binding="{Binding VoucherSequence}"/>
                <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.DateAndTimeHeader}}"
                                    IsReadOnly="True"
                                    Binding="{Binding TimeStamp}"
                                    MinWidth="200"/>
                <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.AmountHeader}}"
                                    IsReadOnly="True"
                                    Binding="{Binding Amount}"
                                    MinWidth="160"/>
                <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.TypeOfAccountHeader}}"
                                    IsReadOnly="True"
                                    Binding="{Binding TypeOfAccount}"
                                    MinWidth="240"/>
                <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.ValidationNumber}}"
                                    IsReadOnly="True"
                                    Binding="{Binding ValidationId}"
                                    MinWidth="280"/>
                <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.StatusHeader}}"
                                    IsReadOnly="True"
                                    Binding="{Binding Status}"/>
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel Orientation="Horizontal" Margin="0 10 0 0"
                    Grid.Row="2"
                    HorizontalAlignment="Left"
                    Visibility="{Binding IsReprintButtonVisible, Converter={StaticResource BoolToVisConverter}}">
            <Button Content="{lex:Loc Key={x:Static loc:ResourceKeys.ReprintButtonText}}"
                    Command="{Binding ReprintButtonCommand}" 
                    IsEnabled="{Binding CanReprint}"/>
            <Label Content="{Binding DoorStatusText}"
                   Style="{StaticResource MonacoWarningLabel}"
                   Visibility="{Binding ReprintDisabledDueToDoor, Converter={StaticResource BoolToVisConverter}}"/>
        </StackPanel>
    </Grid>
</operatorMenu:OperatorMenuPage>
