<operatorMenu:OperatorMenuPage
    x:Class="Aristocrat.Monaco.Accounting.UI.Views.HopperPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="clr-namespace:Aristocrat.Monaco.UI.Common;assembly=Aristocrat.Monaco.UI.Common"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="http://monaco.aristocrat.com/common"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:loc="http://monaco.aristocrat.com/localization"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:operatorMenu="clr-namespace:Aristocrat.Monaco.Application.UI.OperatorMenu;assembly=Aristocrat.Monaco.Application.UI"
    xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Accounting.UI.ViewModels"
    common:DialogParticipation.Register="{Binding}"
    d:DataContext="{d:DesignInstance viewModels:HopperPageViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/OperatorMenu.xaml" />
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style BasedOn="{StaticResource MonacoLabel}" TargetType="Label">
                <Setter Property="Margin" Value="0,0,10,10" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style BasedOn="{StaticResource MonacoTextBlock}" TargetType="TextBlock">
                <Setter Property="Margin" Value="0,0,0,10" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style BasedOn="{StaticResource MonacoButton}" TargetType="Button">
                <Setter Property="Margin" Value="0,15,15,0" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Width" Value="200" />
            </Style>
            <Style BasedOn="{StaticResource MonacoTextBox}" TargetType="TextBox">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="MinWidth" Value="300" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <AdornerDecorator AutomationProperties.AutomationId="AdornerDecorator0_5D3CE66D">
        <Grid AutomationProperties.AutomationId="Grid1_5D3CE66D">
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="Auto"
                    MinHeight="350"
                    AutomationProperties.AutomationId="RowDefinition2_5D3CE66D" />
                <RowDefinition Height="Auto" AutomationProperties.AutomationId="RowDefinition3_5D3CE66D" />
                <RowDefinition Height="*" AutomationProperties.AutomationId="RowDefinition4_5D3CE66D" />
                <RowDefinition Height="Auto" AutomationProperties.AutomationId="RowDefinition5_5D3CE66D" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" AutomationProperties.AutomationId="ColumnDefinition6_5D3CE66D" />
                <ColumnDefinition Width="*" AutomationProperties.AutomationId="ColumnDefinition7_5D3CE66D" />
            </Grid.ColumnDefinitions>
            <Grid
                Name="HopperInfo"
                Grid.Row="0"
                AutomationProperties.AutomationId="Grid8_5D3CE66D">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" AutomationProperties.AutomationId="RowDefinition9_5D3CE66D" />
                    <RowDefinition Height="Auto" AutomationProperties.AutomationId="RowDefinition10_5D3CE66D" />
                    <RowDefinition Height="Auto" AutomationProperties.AutomationId="RowDefinition11_5D3CE66D" />
                    <RowDefinition Height="Auto" AutomationProperties.AutomationId="RowDefinition12_5D3CE66D" />
                    <RowDefinition Height="Auto" AutomationProperties.AutomationId="RowDefinition13_5D3CE66D" />
                    <RowDefinition Height="Auto" AutomationProperties.AutomationId="RowDefinition14_5D3CE66D" />
                    <RowDefinition Height="Auto" AutomationProperties.AutomationId="RowDefinition15_5D3CE66D" />
                    <RowDefinition Height="Auto" AutomationProperties.AutomationId="RowDefinition16_5D3CE66D" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" AutomationProperties.AutomationId="ColumnDefinition17_5D3CE66D" />
                    <ColumnDefinition Width="*" AutomationProperties.AutomationId="ColumnDefinition18_5D3CE66D" />
                </Grid.ColumnDefinitions>
                <Label
                    Grid.Row="0"
                    Grid.Column="0"
                    AutomationProperties.AutomationId="Label19_5D3CE66D"
                    Content="{lex:Loc Key={x:Static loc:ResourceKeys.TimeOfLastRefill}}" />
                <TextBlock
                    Grid.Row="0"
                    Grid.Column="1"
                    AutomationProperties.AutomationId="TextBlock20_5D3CE66D"
                    Foreground="Gray">
                    <TextBlock.Style>
                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger
                                    AutomationProperties.AutomationId="DataTrigger21_5D3CE66D"
                                    Binding="{Binding TimeOfLastRefill, Mode=OneWay, TargetNullValue=''}"
                                    Value="">
                                    <Setter Property="Text" Value="{lex:BLoc Key={x:Static loc:ResourceKeys.NoRecordedRefill}}" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Text" Value="{Binding TimeOfLastRefill, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <Label
                    Grid.Row="1"
                    Grid.Column="0"
                    AutomationProperties.AutomationId="Label22_5D3CE66D"
                    Content="{lex:Loc Key={x:Static loc:ResourceKeys.ValueOfLastRefill}}" />
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="1"
                    AutomationProperties.AutomationId="TextBlock23_5D3CE66D"
                    Foreground="White">
                    <TextBlock.Style>
                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger
                                    AutomationProperties.AutomationId="DataTrigger24_5D3CE66D"
                                    Binding="{Binding TimeOfLastRefill, Mode=OneWay, TargetNullValue=''}"
                                    Value="">
                                    <Setter Property="Text" Value="{lex:BLoc Key={x:Static loc:ResourceKeys.NoRecordedRefill}}" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Text" Value="{Binding ValueOfLastRefill, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <Label
                    Grid.Row="2"
                    Grid.Column="0"
                    AutomationProperties.AutomationId="Label25_5D3CE66D"
                    Content="{lex:Loc Key={x:Static loc:ResourceKeys.RefillCount}}" />
                <TextBlock
                    Grid.Row="2"
                    Grid.Column="1"
                    AutomationProperties.AutomationId="TextBlock26_5D3CE66D"
                    Foreground="White"
                    Text="{Binding RefillCount}" />
                <Label
                    Grid.Row="3"
                    Grid.Column="0"
                    AutomationProperties.AutomationId="Label27_5D3CE66D"
                    Content="{lex:Loc Key={x:Static loc:ResourceKeys.HopperRefill}}" />
                <TextBlock
                    Grid.Row="3"
                    Grid.Column="1"
                    AutomationProperties.AutomationId="TextBlock28_5D3CE66D"
                    Foreground="White"
                    Text="{Binding HopperRefill}" />
                <Label
                    Grid.Row="4"
                    Grid.Column="0"
                    AutomationProperties.AutomationId="Label29_5D3CE66D"
                    Content="{lex:Loc Key={x:Static loc:ResourceKeys.HopperLevel}}" />
                <TextBlock
                    Grid.Row="4"
                    Grid.Column="1"
                    AutomationProperties.AutomationId="TextBlock30_5D3CE66D"
                    Foreground="White"
                    Text="{Binding HopperLevel}" />
                <Label
                    Grid.Row="5"
                    Grid.Column="0"
                    AutomationProperties.AutomationId="Label31_5D3CE66D"
                    Content="{lex:Loc Key={x:Static loc:ResourceKeys.CurrentRefillValue}}" />
                <TextBlock
                    Grid.Row="5"
                    Grid.Column="1"
                    AutomationProperties.AutomationId="TextBlock32_5D3CE66D"
                    Foreground="White"
                    Text="{Binding CurrentRefillValue}" />
                <StackPanel
                    Grid.Row="6"
                    Grid.Column="0"
                    AutomationProperties.AutomationId="StackPanel33_5D3CE66D"
                    Orientation="Horizontal">
                    <Button
                        x:Name="HopperRefillButton"
                        AutomationProperties.AutomationId="Button34_5D3CE66D"
                        Command="{Binding PerformHopperRefillCommand}"
                        Content="{lex:Loc Key={x:Static loc:ResourceKeys.PerformHopperRefill}}"
                        IsEnabled="{Binding HopperRefillEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Button
                        Margin="0,15,0,0"
                        HorizontalAlignment="Left"
                        AutomationProperties.AutomationId="Button35_5D3CE66D"
                        Command="{Binding ShowInfoPopupCommand}"
                        Style="{StaticResource MonacoWarningButton}"
                        Visibility="{Binding HopperRefillWarningEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,                          Converter={StaticResource TrueVisibleFalseCollapsed}}">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource MultiValueConverter}">
                                <Binding ElementName="HopperRefillButton" />
                                <Binding Path="DataContext.HopperRefillWarningText" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Control}" />
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                </StackPanel>
                <Button
                    x:Name="HopperTestButton"
                    Grid.Row="7"
                    Grid.Column="0"
                    AutomationProperties.AutomationId="Button36_5D3CE66D"
                    Command="{Binding HopperTestCommand}"
                    Content="{lex:Loc Key={x:Static loc:ResourceKeys.HopperTest}}"
                    IsEnabled="{Binding InputEnabled, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
            <Grid
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="1"
                AutomationProperties.AutomationId="Grid37_5D3CE66D">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" AutomationProperties.AutomationId="RowDefinition38_5D3CE66D" />
                    <RowDefinition Height="5" AutomationProperties.AutomationId="RowDefinition39_5D3CE66D" />
                    <RowDefinition Height="45" AutomationProperties.AutomationId="RowDefinition40_5D3CE66D" />
                    <RowDefinition Height="5" AutomationProperties.AutomationId="RowDefinition41_5D3CE66D" />
                    <RowDefinition Height="45" AutomationProperties.AutomationId="RowDefinition42_5D3CE66D" />
                    <RowDefinition Height="5" AutomationProperties.AutomationId="RowDefinition43_5D3CE66D" />
                    <RowDefinition Height="45" AutomationProperties.AutomationId="RowDefinition44_5D3CE66D" />
                    <RowDefinition Height="5" AutomationProperties.AutomationId="RowDefinition45_5D3CE66D" />
                    <RowDefinition Height="Auto" AutomationProperties.AutomationId="RowDefinition46_5D3CE66D" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" AutomationProperties.AutomationId="ColumnDefinition47_5D3CE66D" />
                    <ColumnDefinition Width="*" AutomationProperties.AutomationId="ColumnDefinition48_5D3CE66D" />
                </Grid.ColumnDefinitions>
                <Label
                    Grid.Row="0"
                    Grid.Column="0"
                    AutomationProperties.AutomationId="Label49_5D3CE66D"
                    Content="{lex:Loc Key={x:Static loc:ResourceKeys.HopperTicketSplit}}"
                    Visibility="{Binding HopperTicketSplitSupported, Converter={StaticResource TrueVisibleFalseCollapsed}}" />
                <Grid
                    Grid.Row="0"
                    Grid.Column="1"
                    AutomationProperties.AutomationId="Grid50_5D3CE66D"
                    IsEnabled="{Binding HopperTicketSplitConfigurable}"
                    Visibility="{Binding HopperTicketSplitSupported, Converter={StaticResource TrueVisibleFalseCollapsed}}">
                    <controls:ToggleSwitchButton
                        controls:ControlsHelper.ContentCharacterCasing="Upper"
                        controls:ControlsHelper.CornerRadius="0"
                        helpers:ToggleSwitchButtonHelper.OffContent="{lex:Loc Key={x:Static loc:ResourceKeys.OffText}}"
                        helpers:ToggleSwitchButtonHelper.OnContent="{lex:Loc Key={x:Static loc:ResourceKeys.OnText}}"
                        IsChecked="{Binding HopperTicketSplitEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        IsEnabled="{Binding InputEnabledByRuleOverride}"
                        Visibility="{Binding ShowHopperTicketSplit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TrueVisibleFalseCollapsed}}" />
                    <TextBlock
                        AutomationProperties.AutomationId="TextBlock51_5D3CE66D"
                        Text="N/A"
                        Visibility="{Binding ShowHopperTicketSplit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TrueCollapsedFalseVisible}}" />
                </Grid>
                <Label
                    Grid.Row="2"
                    Grid.Column="0"
                    AutomationProperties.AutomationId="Label52_5D3CE66D"
                    Content="{lex:Loc Key={x:Static loc:ResourceKeys.HopperCollectLimit}}"
                    Visibility="{Binding HopperCollectVisibility, Converter={StaticResource TrueVisibleFalseCollapsed}}" />
                <Grid
                    Grid.Row="2"
                    Grid.Column="1"
                    AutomationProperties.AutomationId="Grid53_5D3CE66D"
                    IsEnabled="{Binding HopperTicketSplitConfigurable}"
                    Visibility="{Binding HopperCollectVisibility, Converter={StaticResource TrueVisibleFalseCollapsed}}">
                    <helpers:CurrencyTextBox
                        Width="250"
                        HorizontalAlignment="Left"
                        IsEnabled="{Binding InputEnabledByRuleOverride}"
                        IsReadOnly="False"
                        Number="{Binding HopperCollectLimit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,                                                         ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                        Visibility="{Binding ShowHopperCollectLimit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TrueVisibleFalseCollapsed}}" />
                    <TextBlock
                        AutomationProperties.AutomationId="TextBlock54_5D3CE66D"
                        Text="N/A"
                        Visibility="{Binding ShowHopperCollectLimit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TrueCollapsedFalseVisible}}" />
                </Grid>
                <Label
                    Grid.Row="4"
                    Grid.Column="0"
                    AutomationProperties.AutomationId="Label55_5D3CE66D"
                    Content="{lex:Loc Key={x:Static loc:ResourceKeys.HopperTicketThreshold}}"
                    Visibility="{Binding HopperThresholdVisibility, Converter={StaticResource TrueVisibleFalseCollapsed}}" />
                <Grid
                    Grid.Row="4"
                    Grid.Column="1"
                    AutomationProperties.AutomationId="Grid56_5D3CE66D"
                    IsEnabled="{Binding HopperTicketSplitConfigurable}"
                    Visibility="{Binding HopperThresholdVisibility, Converter={StaticResource TrueVisibleFalseCollapsed}}">
                    <helpers:CurrencyTextBox
                        Width="250"
                        HorizontalAlignment="Left"
                        IsEnabled="{Binding InputEnabledByRuleOverride}"
                        Number="{Binding HopperTicketThreshold, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,                                                     ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                        Visibility="{Binding ShowHopperTicketThreshold, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TrueVisibleFalseCollapsed}}" />
                    <TextBlock
                        AutomationProperties.AutomationId="TextBlock57_5D3CE66D"
                        Text="N/A"
                        Visibility="{Binding ShowHopperTicketThreshold, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TrueCollapsedFalseVisible}}" />
                </Grid>
                <Label
                    Grid.Row="6"
                    Grid.Column="0"
                    AutomationProperties.AutomationId="Label58_5D3CE66D"
                    Content="{lex:Loc Key={x:Static loc:ResourceKeys.HopperRefillValue}}" />
                <helpers:CurrencyTextBox
                    Grid.Row="6"
                    Grid.Column="1"
                    Width="250"
                    HorizontalAlignment="Left"
                    IsEnabled="{Binding InputEnabledByRuleOverride}"
                    Number="{Binding Path=HopperRefillValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />
                <Button
                    Grid.Row="8"
                    Grid.Column="0"
                    Width="60"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    AutomationProperties.AutomationId="Button59_5D3CE66D"
                    Command="{Binding ApplyCollectOptionsCommand}"
                    Content="{lex:Loc Key={x:Static loc:ResourceKeys.ApplyLabel}}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource BoolAndConverter}">
                            <Binding Path="InputEnabledByRuleOverride" />
                            <Binding Path="ApplyCommandEnabled" />
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
            </Grid>
        </Grid>
    </AdornerDecorator>
</operatorMenu:OperatorMenuPage>