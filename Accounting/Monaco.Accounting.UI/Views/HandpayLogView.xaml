<operatorMenu:OperatorMenuPage x:Class="Aristocrat.Monaco.Accounting.UI.Views.HandpayLogView"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                               xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                               xmlns:lex="http://wpflocalizeextension.codeplex.com"
                               xmlns:loc="http://monaco.aristocrat.com/localization"
                               lex:ResxLocalizationProvider.DefaultAssembly="Aristocrat.Monaco.Localization"
                               lex:ResxLocalizationProvider.DefaultDictionary="Resources" 
                               xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                               xmlns:events="clr-namespace:Aristocrat.Monaco.UI.Common.Events;assembly=Aristocrat.Monaco.UI.Common"
                               xmlns:operatorMenu="clr-namespace:Aristocrat.Monaco.Application.UI.OperatorMenu;assembly=Aristocrat.Monaco.Application.UI"
                               xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                               mc:Ignorable="d" >

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/OperatorMenu.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="10" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <DataGrid RowHeight="45"
                  Width="{Binding ElementName=MainGrid, Path=ActualWidth}" 
                  ItemsSource="{Binding Path=HandpayData, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedItem="{Binding SelectedRow}"
                  ScrollViewer.CanContentScroll="True" SelectionMode="Single" >
            <b:Interaction.Triggers>
                <events:RoutedEventTrigger RoutedEvent="ScrollViewer.ScrollChanged">
                    <events:EventToCommandAction Command="{Binding EventViewerScrolledCommand}"/>
                </events:RoutedEventTrigger>
            </b:Interaction.Triggers>
            <DataGrid.Columns>
                <DataGridTextColumn Header="{lex:Loc SequenceNumberHeader}"
                                        IsReadOnly="True" Visibility="Collapsed"
                                        Binding="{Binding SequenceNumber}" Width="200"/>
                <DataGridTextColumn Header="{lex:Loc DateAndTimeHeader}"
                                        IsReadOnly="True"
                                        Binding="{Binding TimeStamp}"
                                        Width="220"/>
                <DataGridTextColumn Header="{lex:Loc TransactionType}"
                                        IsReadOnly="True"
                                        Binding="{Binding HandpayType}"
                                        Width="220"/>
                <DataGridTextColumn Header="{lex:Loc CashableHeader}"
                                        IsReadOnly="True"
                                        Binding="{Binding CashableAmount}"
                                        Width="190"/>
                <DataGridTextColumn Header="{lex:Loc PromoHeader}"
                                        IsReadOnly="True"
                                        Binding="{Binding PromoAmount}"
                                        Width="190"/>
                <DataGridTextColumn Header="{lex:Loc NonCashableHeader}"
                                        IsReadOnly="True"
                                        Binding="{Binding NonCashAmount}"
                                        Width="190"/>
                <DataGridTextColumn Header="{lex:Loc State}"
                                        IsReadOnly="True"
                                        Binding="{Binding State}"
                                        Width="140"/>
                <!--<DataGridCheckBoxColumn Header="{x:Static loc:Resources.Printed}"
                                        IsReadOnly="True"
                                        Binding="{Binding Printed}"
                                        Width="100"
                                        ElementStyle="{StaticResource MonacoDataGridCheckBox}"/>-->
                <!--<DataGridTextColumn Header="{x:Static loc:Resources.ValidationNumber}"
                                        IsReadOnly="True"
                                        Binding="{Binding ValidationId}"
                                        Width="220"/>-->

            </DataGrid.Columns>
        </DataGrid>

        <StackPanel Orientation="Horizontal" Margin="0,10,0,0"
                    Grid.Row="2"
                    HorizontalAlignment="Left">
            <!--<Button Content="{x:Static loc:Resources.PrintSelectedButtonText}"
                    IsEnabled="{Binding EnablePrintSelectedButton}" Width="200"
                    Command="{Binding PrintSelectedCommand}"-->
            <Button Content="{lex:Loc ReprintButtonText}"
                    Command="{Binding ReprintButtonCommand}" 
                    IsEnabled="{Binding CanReprint}"
                    Visibility="{Binding IsReprintButtonVisible, Converter={StaticResource BoolToVisConverter}}"/>
            <Button Content="{lex:Loc PrintLast15RecordsButtonText}"
                    IsEnabled="{Binding PrinterButtonsEnabled}" Width="200"
                    Command="{Binding PrintLast15ButtonCommand}"
                    Visibility="{Binding PrintLast15ButtonVisible, Converter={StaticResource BoolToVisConverter}}"/>
            <Button Content="{lex:Loc PrintCurrentPageButtonText}"
                    IsEnabled="{Binding PrinterButtonsEnabled}" Width="200"
                    Command="{Binding PrintCurrentPageButtonCommand}"
                    Visibility="{Binding PrintCurrentPageButtonVisible, Converter={StaticResource BoolToVisConverter}}"/>
            <Label Content="{Binding DoorStatusText}"
                   Style="{StaticResource MonacoWarningLabel}"
                   Visibility="{Binding ReprintDisabledDueToDoor, Converter={StaticResource BoolToVisConverter}}"/>
        </StackPanel>
    </Grid>
</operatorMenu:OperatorMenuPage>


