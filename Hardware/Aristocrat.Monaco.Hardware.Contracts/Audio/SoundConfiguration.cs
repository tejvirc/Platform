//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.8.3928.0.
// 
namespace Aristocrat.Monaco.Hardware.Contracts.Audio {
    using System.Xml.Serialization;
#pragma warning disable CS1591

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class SoundConfiguration {
        
        private SoundConfigurationAudioFiles audioFilesField;
        
        private SoundConfigurationAlert alertField;
        
        private SoundConfigurationVolumeControl volumeControlField;
        
        private bool useGameTypeVolumeField;
        
        private int lobbyVolumeScalarField;
        
        private int playerVolumeScalarField;
        
        private int soundLengthMsField;
        
        private int doorAlarmLoopCountField;
        
        private byte defaultVolumeLevelField;
        
        private bool defaultVolumeLevelFieldSpecified;
        
        public SoundConfiguration() {
            this.useGameTypeVolumeField = true;
            this.lobbyVolumeScalarField = 5;
            this.playerVolumeScalarField = 5;
            this.soundLengthMsField = 500;
            this.doorAlarmLoopCountField = 24;
        }
        
        /// <remarks/>
        public SoundConfigurationAudioFiles AudioFiles {
            get {
                return this.audioFilesField;
            }
            set {
                this.audioFilesField = value;
            }
        }
        
        /// <remarks/>
        public SoundConfigurationAlert Alert {
            get {
                return this.alertField;
            }
            set {
                this.alertField = value;
            }
        }
        
        /// <remarks/>
        public SoundConfigurationVolumeControl VolumeControl {
            get {
                return this.volumeControlField;
            }
            set {
                this.volumeControlField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool UseGameTypeVolume {
            get {
                return this.useGameTypeVolumeField;
            }
            set {
                this.useGameTypeVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(5)]
        public int LobbyVolumeScalar {
            get {
                return this.lobbyVolumeScalarField;
            }
            set {
                this.lobbyVolumeScalarField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(5)]
        public int PlayerVolumeScalar {
            get {
                return this.playerVolumeScalarField;
            }
            set {
                this.playerVolumeScalarField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(500)]
        public int SoundLengthMs {
            get {
                return this.soundLengthMsField;
            }
            set {
                this.soundLengthMsField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(24)]
        public int DoorAlarmLoopCount {
            get {
                return this.doorAlarmLoopCountField;
            }
            set {
                this.doorAlarmLoopCountField = value;
            }
        }
        
        /// <remarks/>
        public byte DefaultVolumeLevel {
            get {
                return this.defaultVolumeLevelField;
            }
            set {
                this.defaultVolumeLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultVolumeLevelSpecified {
            get {
                return this.defaultVolumeLevelFieldSpecified;
            }
            set {
                this.defaultVolumeLevelFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class SoundConfigurationAudioFiles {
        
        private SoundConfigurationAudioFilesAudioFile[] audioFileField;
        
        private string pathField;
        
        public SoundConfigurationAudioFiles() {
            this.pathField = "..\\jurisdiction\\DefaultAssets\\";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AudioFile")]
        public SoundConfigurationAudioFilesAudioFile[] AudioFile {
            get {
                return this.audioFileField;
            }
            set {
                this.audioFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("..\\jurisdiction\\DefaultAssets\\")]
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class SoundConfigurationAudioFilesAudioFile {
        
        private SoundName nameField;
        
        private bool nameFieldSpecified;
        
        private string fileField;
        
        public SoundConfigurationAudioFilesAudioFile() {
            this.fileField = "";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public SoundName Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NameSpecified {
            get {
                return this.nameFieldSpecified;
            }
            set {
                this.nameFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum SoundName {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Alert,
        
        /// <remarks/>
        BallDrop,
        
        /// <remarks/>
        CardFlip,
        
        /// <remarks/>
        Center,
        
        /// <remarks/>
        CoinIn,
        
        /// <remarks/>
        CoinOut,
        
        /// <remarks/>
        Collect,
        
        /// <remarks/>
        CriticalMemoryIntegrityCheck,
        
        /// <remarks/>
        Ding,
        
        /// <remarks/>
        DoorOpenAlarm,
        
        /// <remarks/>
        DiskSpaceMonitorError,
        
        /// <remarks/>
        ExcessiveDocumentReject,
        
        /// <remarks/>
        ExcessiveMeterIncrement,
        
        /// <remarks/>
        FeatureBell,
        
        /// <remarks/>
        PaperInChute,
        
        /// <remarks/>
        FirmwareCrcError,
        
        /// <remarks/>
        FrontLeft,
        
        /// <remarks/>
        FrontRight,
        
        /// <remarks/>
        HostOffline,
        
        /// <remarks/>
        LowFrequency,
        
        /// <remarks/>
        LiveAuthenticationFailed,
        
        /// <remarks/>
        NoteAcceptorError,
        
        /// <remarks/>
        MoneyLaunderingMonitor,
        
        /// <remarks/>
        PrinterError,
        
        /// <remarks/>
        PrinterWarning,
        
        /// <remarks/>
        RearLeft,
        
        /// <remarks/>
        RearRight,
        
        /// <remarks/>
        ReelClick,
        
        /// <remarks/>
        SideLeft,
        
        /// <remarks/>
        SideRight,
        
        /// <remarks/>
        Silence,
        
        /// <remarks/>
        Touch,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class SoundConfigurationAlert {
        
        private int volumeField;
        
        private int minimumField;
        
        private bool logicDoorFullVolumeAlertField;
        
        private bool configurableField;
        
        private bool playTestSoundField;
        
        private int alertDurationMsField;
        
        public SoundConfigurationAlert() {
            this.volumeField = 100;
            this.minimumField = 50;
            this.logicDoorFullVolumeAlertField = false;
            this.configurableField = false;
            this.playTestSoundField = false;
            this.alertDurationMsField = 5000;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(100)]
        public int Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(50)]
        public int Minimum {
            get {
                return this.minimumField;
            }
            set {
                this.minimumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool LogicDoorFullVolumeAlert {
            get {
                return this.logicDoorFullVolumeAlertField;
            }
            set {
                this.logicDoorFullVolumeAlertField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool Configurable {
            get {
                return this.configurableField;
            }
            set {
                this.configurableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool PlayTestSound {
            get {
                return this.playTestSoundField;
            }
            set {
                this.playTestSoundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(5000)]
        public int AlertDurationMs {
            get {
                return this.alertDurationMsField;
            }
            set {
                this.alertDurationMsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class SoundConfigurationVolumeControl {
        
        private VolumeControlLocation locationField;
        
        public SoundConfigurationVolumeControl() {
            this.locationField = VolumeControlLocation.LobbyAndGame;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(VolumeControlLocation.LobbyAndGame)]
        public VolumeControlLocation Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    public enum VolumeControlLocation {
        
        /// <remarks/>
        Lobby,
        
        /// <remarks/>
        Game,
        
        /// <remarks/>
        LobbyAndGame,
    }
}
