namespace Aristocrat.Monaco.Gaming.UI.Settings
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using Contracts.Models;
    using Contracts.Progressives.SharedSap;

    /// <summary>
    /// 
    /// </summary>
    internal class ProgressiveSharedLevelSettings
    {
        /// <summary>
        ///     Creates an instance of <see cref="ProgressiveSharedLevelSettings"/>.
        /// </summary>
        /// <param name="level">The level to pass in.</param>
        public ProgressiveSharedLevelSettings(IViewableSharedSapLevel level)
        {
            if (level is null)
            {
                throw new ArgumentNullException(nameof(level));
            }

            Id = level.Id;
            Name = level.Name;
            SupportedGameTypes = level.SupportedGameTypes?.ToArray() ?? Enumerable.Empty<GameType>();
            InitialValue = level.InitialValue;
            ResetValue = level.ResetValue;
            IncrementRate = level.IncrementRate;
            MaximumValue = level.MaximumValue;
            AutoGenerated = level.AutoGenerated;
            HiddenIncrementRate = level.HiddenIncrementRate;
        }

        /// <summary>
        ///     Creates an instance of <see cref="ProgressiveSharedLevelSettings"/>.
        /// </summary>
        public ProgressiveSharedLevelSettings()
        {
        }

        /// <summary>
        ///     Gets or sets the id.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        ///     Gets or sets the name.
        /// </summary>
        public string Name { get; set; }

        /// <summary>
        ///     Gets or sets the supported game types.
        /// </summary>
        public IEnumerable<GameType> SupportedGameTypes { get; set; }

        /// <summary>
        ///     Gets or sets the initial value.
        /// </summary>
        public long InitialValue { get; set; }

        /// <summary>
        ///     Gets or sets the reset value.
        /// </summary>
        public long ResetValue { get; set; }

        /// <summary>
        ///     Gets or sets the increment rate.
        /// </summary>
        public long IncrementRate { get; set; }

        /// <summary>
        ///     Gets or sets the maximum value.
        /// </summary>
        public long MaximumValue { get; set; }

        /// <summary>
        ///     Gets or sets the auto generated.
        /// </summary>
        public bool AutoGenerated { get; set; }

        /// <summary>
        ///     Gets or sets the hidden increment rate
        /// </summary>
        public long HiddenIncrementRate { get; set; }
    }
}
