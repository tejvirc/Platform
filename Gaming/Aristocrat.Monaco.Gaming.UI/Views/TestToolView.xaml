<controls:MetroWindow x:Class="Aristocrat.Monaco.Gaming.UI.Views.TestToolView" 
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Gaming.UI.ViewModels"
                      mc:Ignorable="d"
                      d:DataContext="{d:DesignInstance {x:Type viewModels:TestToolViewModel}}"
                      Background="{Binding BellColor}"
                      Title="TestToolView" Height="535" Width="700">
    <controls:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                 <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />-->
                <!-- Accent and AppTheme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                 <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />-->

                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/Converters.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </controls:MetroWindow.Resources>

    <TabControl x:Name="TabControl">
        <TabControl.LayoutTransform>
            <ScaleTransform ScaleX="1.25" ScaleY="1.25"/>
        </TabControl.LayoutTransform>
        <TabItem Header="Lobby">
            <GroupBox Header="RG Overrides">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="15" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="15" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="10" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="1:" VerticalAlignment="Center" Margin="0,0,5,0" />
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding TimeLimit1,UpdateSourceTrigger=PropertyChanged}" Width="40" HorizontalAlignment="Left" />
                                <TextBlock Grid.Row="1" Grid.Column="1" Foreground="Red" HorizontalAlignment="Left" Text="{Binding TimeLimit1Set}" Margin="10,0,0,0" />
                            </Grid>
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="2:" VerticalAlignment="Center" Margin="0,0,5,0" />
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding TimeLimit2,UpdateSourceTrigger=PropertyChanged}" Width="40" HorizontalAlignment="Left" />
                                <TextBlock Grid.Row="1" Grid.Column="1" Foreground="Red" HorizontalAlignment="Left" Text="{Binding TimeLimit2Set}" Margin="10,0,0,0"/>
                            </Grid>
                            <Grid Grid.Column="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="3:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding TimeLimit3,UpdateSourceTrigger=PropertyChanged}" Width="40" HorizontalAlignment="Left" />
                                <TextBlock Grid.Row="1" Grid.Column="1" Foreground="Red" HorizontalAlignment="Left" Text="{Binding TimeLimit3Set}" Margin="10,0,0,0"/>
                            </Grid>
                            <Grid Grid.Column="3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="4:" VerticalAlignment="Center" Margin="0,0,5,0" />
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding TimeLimit4,UpdateSourceTrigger=PropertyChanged}" Width="40" HorizontalAlignment="Left" />
                                <TextBlock Grid.Row="1" Grid.Column="1" Foreground="Red" HorizontalAlignment="Left" Text="{Binding TimeLimit4Set}" Margin="10,0,0,0"/>
                            </Grid>
                            <Grid Grid.Column="4" Visibility="{Binding TimeLimit5Visible, Converter={StaticResource TrueVisibleFalseHidden}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="5:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding TimeLimit5,UpdateSourceTrigger=PropertyChanged}" Width="40" HorizontalAlignment="Left" />
                                <TextBlock Grid.Row="1" Grid.Column="1" Foreground="Red" HorizontalAlignment="Left" Text="{Binding TimeLimit5Set}" Margin="10,0,0,0" />
                            </Grid>
                        </Grid>
                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="8*" />
                                <ColumnDefinition Width="12*" />
                                <ColumnDefinition Width="5*" />
                            </Grid.ColumnDefinitions>
                            <Button Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Grid.Column="0" Width="125"
                                Content="Override Time Limits"
                                Command="{Binding SetTimeLimitsCommand}">
                                <Button.ToolTip>
                                    <ToolTip>
                                        <StackPanel>
                                            <TextBlock FontWeight="Bold">Set Time Limits</TextBlock>
                                            <TextBlock TextWrapping="Wrap" Width="300">
                                            Overrides the time limits for responsible gaming. These values will 
                                            not be applied until the next time the time limit dialog is shown (Standard Mode),
                                            or until the next Responsible Gaming Timer tick (up to 1 minute).
                                            </TextBlock>
                                        </StackPanel>
                                    </ToolTip>
                                </Button.ToolTip>
                            </Button>
                            <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="20,0,0,0">
                                <TextBox Text="{Binding TimeLimitInterval,UpdateSourceTrigger=PropertyChanged}" Width="40" />
                                <Button Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Margin="7,0,0,0" Width="125"
                                Content="Create Interval"
                                Command="{Binding CreateTimeIntervalCommand}">
                                    <Button.ToolTip>
                                        <ToolTip>
                                            <StackPanel>
                                                <TextBlock FontWeight="Bold">Create Interval</TextBlock>
                                                <TextBlock TextWrapping="Wrap" Width="300">
                                            Fills in all boxes based on the interval value.
                                            You will still need to hit Override Time Limits to apply the changes.
                                                </TextBlock>
                                            </StackPanel>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                            </StackPanel>
                            <Button Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Grid.Column="2"
                                Content="Reset Defaults"
                                Command="{Binding ResetDefaultsCommand}">
                                <Button.ToolTip>
                                    <ToolTip>
                                        <StackPanel>
                                            <TextBlock FontWeight="Bold">Set Time Limits</TextBlock>
                                            <TextBlock TextWrapping="Wrap" Width="300">
                                            Resets the Time Limits to the default values.
                                            </TextBlock>
                                        </StackPanel>
                                    </ToolTip>
                                </Button.ToolTip>
                            </Button>
                        </Grid>
                        <Grid Grid.Row="4" Visibility="{Binding PlayBreaksVisible, Converter={StaticResource TrueVisibleFalseHidden}}">
                            <StackPanel>
                                <TextBlock Foreground="#41B1E1" FontWeight="Bold">Play Breaks</TextBlock>
                                <Grid Margin="0,5,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="27*" />
                                        <ColumnDefinition Width="85*"/>
                                        <ColumnDefinition Width="111*" />
                                        <ColumnDefinition Width="112*" />
                                        <ColumnDefinition Width="111*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0" Grid.ColumnSpan="2">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="1:" VerticalAlignment="Center" Margin="0,0,5,0" />
                                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding PlayBreak1,UpdateSourceTrigger=PropertyChanged}" Width="40" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="1" Grid.Column="1" Foreground="Red" HorizontalAlignment="Left" Text="{Binding PlayBreak1Set}" Margin="10,0,0,0" />
                                    </Grid>
                                    <Grid Grid.Column="2">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="2:" VerticalAlignment="Center" Margin="0,0,5,0" />
                                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding PlayBreak2,UpdateSourceTrigger=PropertyChanged}" Width="40" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="1" Grid.Column="1" Foreground="Red" HorizontalAlignment="Left" Text="{Binding PlayBreak2Set}" Margin="10,0,0,0"/>
                                    </Grid>
                                    <Grid Grid.Column="3">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="3:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding PlayBreak3,UpdateSourceTrigger=PropertyChanged}" Width="40" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="1" Grid.Column="1" Foreground="Red" HorizontalAlignment="Left" Text="{Binding PlayBreak3Set}" Margin="10,0,0,0"/>
                                    </Grid>
                                    <Grid Grid.Column="4">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="4:" VerticalAlignment="Center" Margin="0,0,5,0" />
                                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding PlayBreak4,UpdateSourceTrigger=PropertyChanged}" Width="40" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="1" Grid.Column="1" Foreground="Red" HorizontalAlignment="Left" Text="{Binding PlayBreak4Set}" Margin="10,0,0,0"/>
                                    </Grid>

                                </Grid>
                            </StackPanel>
                        </Grid>
                        <StackPanel Grid.Row="6" Orientation="Horizontal" HorizontalAlignment="Left" Margin="75,0,0,0">
                            <TextBlock Text="Elapsed Time:" Margin="0,0,5,0" VerticalAlignment="Center"/>
                            <TextBox Text="{Binding ElapsedTime, UpdateSourceTrigger=PropertyChanged}" Width="60" />

                            <Button Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Margin="20,0,0,0" Width="150"
                                Content="Set Elapsed Time"
                                Command="{Binding SetElapsedTimeCommand}">
                                <Button.ToolTip>
                                    <ToolTip>
                                        <StackPanel>
                                            <TextBlock FontWeight="Bold">Set Elapsed Time</TextBlock>
                                            <TextBlock TextWrapping="Wrap" Width="300">
                                            Sets the Elapsed Time of the current Responsible Gaming Session
                                            Will not take effect until the next Responsible Gaming Timer tick
                                            (up to 1 minute).  If you set this value before starting a Responsible
                                            Gaming Session, the session will start with this elapsed time setting
                                            instead of 0.
                                            </TextBlock>
                                        </StackPanel>
                                    </ToolTip>
                                </Button.ToolTip>
                            </Button>
                            <TextBlock Foreground="Red" HorizontalAlignment="Center" Text="{Binding ElapsedTimeSet}" Margin="10,5,0,0" />
                        </StackPanel>
                        <StackPanel Grid.Row="8" Orientation="Horizontal" HorizontalAlignment="Left" Margin="63,0,0,0">
                            <TextBlock Text="Dialog Timeout:" Margin="0,0,5,0" VerticalAlignment="Center"/>
                            <TextBox Text="{Binding ResponsibleGamingDialogTimeout, UpdateSourceTrigger=PropertyChanged}" Width="60" />

                            <Button Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Margin="20,0,0,0" Width="150"
                                Content="Set Dialog Timeout"
                                Command="{Binding SetResponsibleGamingDialogTimeoutCommand}">
                                <Button.ToolTip>
                                    <ToolTip>
                                        <StackPanel>
                                            <TextBlock FontWeight="Bold">Set Dialog Timeout</TextBlock>
                                            <TextBlock TextWrapping="Wrap" Width="300">
                                            Sets the Timeout Value for the Responible Gaming Dialog.
                                            </TextBlock>
                                        </StackPanel>
                                    </ToolTip>
                                </Button.ToolTip>
                            </Button>
                            <TextBlock Foreground="Red" HorizontalAlignment="Center" Text="{Binding ResponsibleGamingDialogTimeoutSet}" Margin="10,5,0,0" />
                        </StackPanel>
                        <StackPanel Grid.Row="10" Orientation="Horizontal" HorizontalAlignment="Left" Margin="69,0,0,0" Visibility="{Binding SessionCountVisible, Converter={StaticResource TrueVisibleFalseHidden}}">
                            <TextBlock Text="Session Count:" Margin="0,0,5,0" VerticalAlignment="Center"/>
                            <TextBox Text="{Binding SessionCount, UpdateSourceTrigger=PropertyChanged}" Width="60" />

                            <Button Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Margin="20,0,0,0" Width="150"
                                    Content="Set Session Count"
                                    Command="{Binding SetSessionCountCommand}">
                                <Button.ToolTip>
                                    <ToolTip>
                                        <StackPanel>
                                            <TextBlock FontWeight="Bold">Set Dialog Timeout</TextBlock>
                                            <TextBlock TextWrapping="Wrap" Width="300">
                                                Sets the Session Count Value for the Responsible Gaming Dialog.
                                            </TextBlock>
                                        </StackPanel>
                                    </ToolTip>
                                </Button.ToolTip>
                            </Button>
                            <TextBlock Foreground="Red" HorizontalAlignment="Center" Text="{Binding SessionCountSet}" Margin="10,5,0,0" />
                        </StackPanel>
                        <StackPanel Grid.Row="12" Orientation="Horizontal" HorizontalAlignment="Center">
                            <RadioButton IsChecked="{Binding IsTimeInSeconds}" GroupName="TimeGroup" Content="Seconds" />
                            <RadioButton GroupName="TimeGroup" Content="Minutes" Margin="20,0,0,0"/>
                        </StackPanel>
                    </Grid>
                </Grid>
            </GroupBox>
        </TabItem>
        <TabItem Header="Account">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Orientation="Horizontal" 
                            IsEnabled="{Binding NoteAcceptorEnabled, UpdateSourceTrigger=PropertyChanged}">
                    <Label VerticalAlignment="Center" Content="Insert: "/>
                    <Button MinWidth="40" Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Margin="5" Content="$1" 
                            Command="{Binding InsertBillCommand}" CommandParameter="1"/>
                    <Button MinWidth="40" Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Margin="5" Content="$5" 
                            Command="{Binding InsertBillCommand}" CommandParameter="5"/>
                    <Button MinWidth="40" Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Margin="5" Content="$20" 
                            Command="{Binding InsertBillCommand}" CommandParameter="20"/>
                    <Button MinWidth="40" Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Margin="5" Content="$100" 
                            Command="{Binding InsertBillCommand}" CommandParameter="100"/>
                </StackPanel>

                <StackPanel Grid.Row="1" Orientation="Horizontal">
                    <TextBox MinWidth="250" Margin="5" Text="{Binding VoucherBarcode}"/>
                    <Button MinWidth="40" Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Margin="5" Content="Insert Voucher" 
                            Command="{Binding InsertVoucherCommand}"/>
                </StackPanel>

                <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal">
                    <Button MinWidth="80" Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Margin="5" Content="Cash Out"
                            Command="{Binding CashOutCommand}"/>
                </StackPanel>
                <StackPanel Grid.Row="3" Grid.Column="0" Orientation="Horizontal">
                    <Button MinWidth="80" Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Margin="5" Content="Override Large Win Limit"
                            Command="{Binding SetLargeWinLimitCommand}">
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock FontWeight="Bold">Set Large Win Limit</TextBlock>
                                    <TextBlock TextWrapping="Wrap" Width="300">
                                        Overrides what the platform considers a large win.  Uses Millicents.
                                    </TextBlock>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <TextBox Text="{Binding LargeWinLimit, UpdateSourceTrigger=PropertyChanged}" Margin="4,8,4,8"/>
                </StackPanel>

            </Grid>
        </TabItem>
        <!--<TabItem Header="G2S" />-->
        <TabItem Header="Storage" >
            <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                <Button Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Margin="5" Content="Full RAM Clear" Command="{Binding FullClearCommand}" />
                <Button Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Margin="5" Content="Partial RAM Clear" Command="{Binding PartialClearCommand}" />
            </StackPanel>
        </TabItem>
        <TabItem Header="Media" >
            <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                <Button Style="{StaticResource MahApps.Styles.Button.Square.Accent}" 
                        Margin="5" Content="Toggle Media Player 1 &amp; 2" 
                        Command="{Binding TogglePlayerCommand}" CommandParameter="0"/>
                <Button Style="{StaticResource MahApps.Styles.Button.Square.Accent}" 
                        Margin="5" Content="Toggle Media Player 1" 
                        Command="{Binding TogglePlayerCommand}" CommandParameter="1"/>
                <Button Style="{StaticResource MahApps.Styles.Button.Square.Accent}" 
                        Margin="5" Content="Toggle Media Player 2" 
                        Command="{Binding TogglePlayerCommand}" CommandParameter="2"/>
                <Button Style="{StaticResource MahApps.Styles.Button.Square.Accent}" 
                        Margin="5" Content="Toggle Media Player 3" 
                        Command="{Binding TogglePlayerCommand}" CommandParameter="3"/>
                <Button Style="{StaticResource MahApps.Styles.Button.Square.Accent}" 
                        Margin="5" Content="Toggle Media Player 4" 
                        Command="{Binding TogglePlayerCommand}" CommandParameter="4"/>
            </StackPanel>
        </TabItem>
        <TabItem Header="PlatMsg" >
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Button Grid.Row="0" Grid.Column="0" 
                        Style="{StaticResource MahApps.Styles.Button.Square.Accent}" 
                        Width="160"
                        Margin="4,8,4,8"
                        HorizontalAlignment="Center" 
                        Content="Add Platform Message"
                        Command="{Binding AddPlatformMessageCommand}">
                    <Button.ToolTip>
                        <ToolTip>
                            <StackPanel>
                                <TextBlock FontWeight="Bold">Add Platform Message</TextBlock>
                                <TextBlock TextWrapping="Wrap" Width="300">
                                    Add the platform message to be displayed by the game
                                </TextBlock>
                            </StackPanel>
                        </ToolTip>
                    </Button.ToolTip>
                </Button>
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding AddPlatformMessageText, UpdateSourceTrigger=PropertyChanged}" Margin="4,8,4,8"/>

                <Button Grid.Row="1" Grid.Column="0" 
                        Style="{StaticResource MahApps.Styles.Button.Square.Accent}" 
                        Width="160"
                        Margin="4,8,4,8"
                        HorizontalAlignment="Center" 
                        Content="Remove Platform Message"
                        Command="{Binding RemovePlatformMessageCommand}">
                    <Button.ToolTip>
                        <ToolTip>
                            <StackPanel>
                                <TextBlock FontWeight="Bold">Remove Platform Message</TextBlock>
                                <TextBlock TextWrapping="Wrap" Width="300">
                                    Remove the platform message which was previously added
                                </TextBlock>
                            </StackPanel>
                        </ToolTip>
                    </Button.ToolTip>
                </Button>
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding RemovePlatformMessageText, UpdateSourceTrigger=PropertyChanged}" Margin="4,8,4,8"/>

                <Button Grid.Row="2" Grid.Column="0" 
                        Style="{StaticResource MahApps.Styles.Button.Square.Accent}" 
                        Width="160"
                        Margin="4,8,4,8"
                        HorizontalAlignment="Center" 
                        Content="Clear All"
                        Command="{Binding ClearAllPlatformMessagesCommand}">
                    <Button.ToolTip>
                        <ToolTip>
                            <StackPanel>
                                <TextBlock FontWeight="Bold">Remove Platform Message</TextBlock>
                                <TextBlock TextWrapping="Wrap" Width="300">
                                    Clear all the platform messages
                                </TextBlock>
                            </StackPanel>
                        </ToolTip>
                    </Button.ToolTip>
                </Button>
            </Grid>
        </TabItem>
        <TabItem Header="TowerLight">
            <Grid Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <GroupBox Grid.Row="0" Grid.Column="0" Header="Tower Light Flash Status">
                    <Grid Margin="4">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Tier #1" Margin="4,4,4,4"/>
                        <RadioButton Grid.Row="0" Grid.Column="1" GroupName="Tier#1" IsChecked="{Binding IsTowerLightOn1}" Content="{Binding TowerLightFlashStatus1}" IsEnabled="False" Margin="12,0,0,0"/>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Tier #2" Margin="4,4,4,4"/>
                        <RadioButton Grid.Row="1" Grid.Column="1" GroupName="Tier#2" IsChecked="{Binding IsTowerLightOn2}" Content="{Binding TowerLightFlashStatus2}" IsEnabled="False" Margin="12,0,0,0"/>
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Tier #3" Margin="4,4,4,4"/>
                        <RadioButton Grid.Row="2" Grid.Column="1" GroupName="Tier#3" IsChecked="{Binding IsTowerLightOn3}" Content="{Binding TowerLightFlashStatus3}" IsEnabled="False" Margin="12,0,0,0"/>
                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Tier #4" Margin="4,4,4,4"/>
                        <RadioButton Grid.Row="3" Grid.Column="1" GroupName="Tier#4" IsChecked="{Binding IsTowerLightOn4}" Content="{Binding TowerLightFlashStatus4}" IsEnabled="False" Margin="12,0,0,0"/>
                    </Grid>
                </GroupBox>
                <GroupBox Grid.Row="1" Grid.Column="0" Header="Override Tower Light Flash Status">
                    <Grid Margin="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ComboBox Grid.Column="0" 
                                  ItemsSource="{Binding TowerLightTierList}" 
                                  SelectedIndex="{Binding TowerLightTierSelectedIndex}"
                                  Width="80"
                                  Margin="4,4,4,4"/>
                        <ComboBox Grid.Column="1" 
                                  ItemsSource="{Binding TowerLightFlashStatusList}" 
                                  SelectedIndex="{Binding TowerLightFlashStatusSelectedIndex}"
                                  Width="160"
                                  Margin="4,4,4,4"/>
                        <Button Grid.Column="2"
                                Style="{StaticResource MahApps.Styles.Button.Square.Accent}" 
                                HorizontalAlignment="Center" 
                                Content="SET"
                                Width="60"
                                Margin="4,4,4,4"
                                Command="{Binding SetTowerLightFlashStateCommand}"/>
                    </Grid>
                </GroupBox>
            </Grid>
        </TabItem>
        <TabItem Header="InfoBar">
            <GroupBox Header="InfoBar Commands">
                <Grid Margin="8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="10*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid.Resources>
                        <Style TargetType="{x:Type Button}">
                            <Style.Setters>
                                <Setter Property="Height" Value="40" />
                            </Style.Setters>
                        </Style>
                    </Grid.Resources>

                    <StackPanel Grid.RowSpan="6" >
                        <Button Content="Display 1 Message" 
                                Command="{Binding DisplayInfoBarMessageCommand}" FontSize="10"/>
                        <Button Content="Display 2 Messages" 
                                Command="{Binding DisplayInfoBarDoubleMessageCommand}" FontSize="10"/>
                        <Button Content="Display Static Message" 
                                Command="{Binding DisplayInfoBarStaticMessageCommand}" FontSize="10"/>
                        <Button Content="Send CloseInfoBarEvent" 
                                Command="{Binding CloseInfoBarCommand}" FontSize="10"/>
                    </StackPanel>
                    <TextBox x:Name="InfoBarMessageTextBox" 
                             Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"
                             Text="{Binding InfoBarMessage}"
                             Margin="8,0,0,0"/>

                    <Label Content="Font Color" 
                           Grid.Row="1" Grid.Column="1"
                           HorizontalAlignment="Right" Width="66"/>
                    <ComboBox Grid.Row="1" Grid.Column="2" 
                              ItemsSource="{Binding InfoBarColors}"
                              SelectedValue="{Binding SelectedInfoBarFontColor}"
                              Margin="8,0,0,0"/>

                    <Label Content="Background Color" 
                           Grid.Row="2" Grid.Column="1"
                           HorizontalAlignment="Right" Width="105"/>
                    <ComboBox Grid.Row="2" Grid.Column="2" 
                              ItemsSource="{Binding InfoBarColors}"
                              SelectedValue="{Binding SelectedInfoBarBackgroundColor}"
                              Margin="8,0,0,0"/>

                    <Label Content="Region" 
                           Grid.Row="3" Grid.Column="1"
                           HorizontalAlignment="Right" Width="47"/>
                    <ComboBox Grid.Row="3" Grid.Column="2" 
                              ItemsSource="{Binding InfoBarRegions}"
                              SelectedValue="{Binding SelectedInfoBarRegion}"
                              Margin="8,0,0,0"/>

                    <Label Content="DisplayTarget" 
                           Grid.Row="4" Grid.Column="1"
                           HorizontalAlignment="Right" Width="47"/>
                    <ComboBox Grid.Row="4" Grid.Column="2" 
                              ItemsSource="{Binding InfoBarLocations}"
                              SelectedValue="{Binding SelectedInfoBarLocation}"
                              Margin="8,0,0,0"/>
                </Grid>

            </GroupBox>
        </TabItem>
        <TabItem Header="CardReader">
            <GroupBox Header="Card Reader Commands">
                <Grid Margin="8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1000*"/>
                        <ColumnDefinition Width="1618*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Label Content="Card Templates" 
                           Grid.Row="0" Grid.Column="0"
                           HorizontalAlignment="Right"/>
                    <ComboBox Grid.Row="0" Grid.Column="1" 
                              ItemsSource="{Binding MagneticCards}"
                              DisplayMemberPath="Key"
                              SelectedValuePath="Value"
                              SelectedValue="{Binding SelectedMagneticCard}"
                              Margin="8,0,0,0"/>

                    <Label Content="Track 1 Data" 
                           Grid.Row="1" Grid.Column="0"
                           HorizontalAlignment="Right"/>
                    <TextBox x:Name="CardReaderTrack1Data" 
                             Grid.Row="1" Grid.Column="1" 
                             Text="{Binding Track1Data}"
                             Margin="8,0,0,0"/>

                    <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button Content="Insert Card" Command="{Binding InsertCardCommand}" Margin="0,10,5,0"/>
                        <Button Content="Remove Card" Command="{Binding RemoveCardCommand}" Margin="5,10,0,0"/>
                    </StackPanel>

                    <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="10" HorizontalAlignment="Center" FontWeight="Bold">
                        <Run Text="Current Status: "/>
                        <Run Text="{Binding CardStatusText}"/>
                    </TextBlock>
                </Grid>
            </GroupBox>
        </TabItem>
        <TabItem Header="Currency">
            <GroupBox Header="Currency Hot Switch (Unregulated Class III jurisdiction only)">
                <Grid Margin="8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="350"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Label Content="Country" 
                           Grid.Row="0" Grid.Column="0"
                           HorizontalAlignment="Right"/>
                    <ComboBox Grid.Row="0" Grid.Column="1" 
                              ItemsSource="{Binding CountryNames}"
                              SelectedValue="{Binding SelectedCountry}"
                              Margin="8,0,0,0"/>
                    <Button Content="Use Country" 
                            Grid.Row="0" Grid.Column="2" 
                            Command="{Binding CurrencySwitchUsingCountryCommand}"/>

                    <Label Content="eNum" 
                           Grid.Row="1" Grid.Column="0"
                           HorizontalAlignment="Right"/>
                    <TextBox x:Name="EnumTextBox" 
                             Grid.Row="1" Grid.Column="1" 
                             Text="{Binding EnumValue}"
                             Margin="8,0,0,0"/>
                    <Button Content="Use eNum" 
                            Grid.Row="1" Grid.Column="2" 
                            Command="{Binding CurrencySwitchUsingEnumCommand}"/>

                    <GroupBox Grid.Row="2" Grid.Column="1" Header="Currency Switch Status" Margin="0,50,0,0">
                        <Grid Margin="4">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock x:Name="CurrencySwitchMessage" 
                                       Grid.Row="0" Grid.Column="0" 
                                       Text="{Binding CurrencySwitchStatusText}"/>
                        </Grid>
                    </GroupBox>
                </Grid>
            </GroupBox>
        </TabItem>
    </TabControl>
</controls:MetroWindow>
