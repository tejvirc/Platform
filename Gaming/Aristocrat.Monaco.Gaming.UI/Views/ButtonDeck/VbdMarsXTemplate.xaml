<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:contracts="clr-namespace:Aristocrat.Monaco.Gaming.Contracts.Models;assembly=Aristocrat.Monaco.Gaming.Contracts"
                    xmlns:buttonDeck1="clr-namespace:Aristocrat.Monaco.Gaming.UI.Views.ButtonDeck"
                    xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Gaming.UI.ViewModels"
                    xmlns:infoBar="clr-namespace:Aristocrat.Monaco.Gaming.UI.Views.InfoBar"
                    xmlns:managedBink="clr-namespace:ManagedBink;assembly=BinkViewerControl"
                    mc:Ignorable="d">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../Skins/Styles.xaml" />
        <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/Converters.xaml"/>
        <ResourceDictionary Source="VirtualButtonDeckButtonTemplate.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <buttonDeck1:VirtualButtonDeckButtonTemplateSelector x:Key="VbdButtonSelector" />

    <Storyboard x:Key="DisabledFadeInStoryboard" x:Shared="false">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="0.5"
                         Duration="0:0:0.1" BeginTime="0:0:0" AutoReverse="False">
        </DoubleAnimation>
    </Storyboard>

    <Storyboard x:Key="DisabledFadeOutStoryboard" x:Shared="false">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.5" To="0.0"
                         Duration="0:0:0.75" BeginTime="0:0:0" AutoReverse="False">
        </DoubleAnimation>
    </Storyboard>

    <Storyboard x:Key="VbdFadeInStoryboard" x:Shared="false">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0"
                         Duration="0:0:0.35" BeginTime="0:0:0" AutoReverse="False">
        </DoubleAnimation>
    </Storyboard>

    <Storyboard x:Key="VbdFadeOutStoryboard" x:Shared="false">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0.0"
                         Duration="0:0:0.35" BeginTime="0:0:0" AutoReverse="False">
        </DoubleAnimation>
    </Storyboard>

    <DataTemplate x:Key="VbdMarsXTemplate">
        <Grid x:Name="VbdMarsXRootContainer"
              Background="Black" 
              Width="1920" 
              Height="540" 
              VerticalAlignment="Top" 
              HorizontalAlignment="Left"
              d:DataContext="{d:DesignInstance Type=viewModels:LobbyViewModel, IsDesignTimeCreatable=False}"
              Visibility="{Binding IsLobbyVbdVisible, Converter={StaticResource BoolToVisHiddenConverter}}">
            <!--Lobby Background Image Animation-->
            <managedBink:BinkGpuControl
                x:Name="BinkControl"
                LoopVideo="True"
                Cache="True"
                Width="1390" 
                Height="540" 
                VerticalAlignment="Top" 
                HorizontalAlignment="Left"
                ShowFirstFrameOnLoad="True">
                <managedBink:BinkGpuControl.RenderTransform>
                    <TranslateTransform X="158" Y="0" />
                </managedBink:BinkGpuControl.RenderTransform>
                <managedBink:BinkGpuControl.Style>
                    <Style TargetType="managedBink:BinkGpuControl">
                        <Setter Property="VideoState" Value="Playing" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding VbdVideoState}"
                                         Value="{x:Static contracts:LobbyVbdVideoState.InsertMoney}">
                                <Setter Property="Filename" Value="{DynamicResource VBD_Marsx_InsertMoney}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding VbdVideoState}"
                                         Value="{x:Static contracts:LobbyVbdVideoState.ChooseGame}">
                                <Setter Property="Filename" Value="{DynamicResource VBD_Marsx_ChooseGame}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding VbdVideoState}"
                                         Value="{x:Static contracts:LobbyVbdVideoState.ChooseTime}">
                                <Setter Property="Filename" Value="{DynamicResource VBD_ChooseTime}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsLobbyVbdVisible}" Value="False">
                                <Setter Property="VideoState" Value="Stopped" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </managedBink:BinkGpuControl.Style>
            </managedBink:BinkGpuControl>
            <!--Blank background if vbd is blank-->
            <Viewbox Stretch="Fill"
                     VerticalAlignment="Top"
                     HorizontalAlignment="Left"
                     Width="1390" 
                     Height="540">
                <Viewbox.RenderTransform>
                    <TranslateTransform X="158" Y="0" />
                </Viewbox.RenderTransform>
                <Image x:Name="ImageBlankBackground" Stretch="Fill" Source="{DynamicResource VBD_Marsx_Blank}"
                   IsHitTestVisible="{Binding IsLobbyVbdBackgroundBlank}">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Opacity" Value="0" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLobbyVbdBackgroundBlank}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource VbdFadeInStoryboard}" />
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource VbdFadeOutStoryboard}" />
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Image.Opacity)}"
                                             Value="0">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Viewbox>

            <Viewbox Stretch="Fill"
                     VerticalAlignment="Top"
                     HorizontalAlignment="Left"
                     Width="1390" 
                     Height="540">
                <Viewbox.RenderTransform>
                    <TranslateTransform X="158" Y="0" />
                </Viewbox.RenderTransform>
                <Image x:Name="ImageGameLoadFlickerFix" Stretch="Fill" Source="{DynamicResource VBD_Marsx_Blank}"
                   Visibility="{Binding IsGameLoading, Converter={StaticResource BoolToVisible}}" />
            </Viewbox>

            <!--ContentControl selects the buttons template.-->
            <Viewbox x:Name="VbdMarsXButtonContainer" 
                     Stretch="Uniform"
                     VerticalAlignment="Top"
                     HorizontalAlignment="Left"
                     Width="1390" 
                     Height="540">
                <Viewbox.RenderTransform>
                    <TranslateTransform X="162" Y="-50" />
                </Viewbox.RenderTransform>
                <Grid x:Name="ButtonContentContainer"
                      Width="1780" 
                      Height="Auto">
                    <ContentControl x:Name="ButtonContentControl"
                                    Visibility="{Binding IsGameLoading, Converter={StaticResource BoolToHiddenConverter}}"
                                    Content="{Binding}"
                                    ContentTemplateSelector="{StaticResource VbdButtonSelector}" />
                </Grid>
            </Viewbox>

            <!--<ContentControl x:Name="InfoBarContentControl" Content="{StaticResource InfoBar}" VerticalAlignment="Bottom" HorizontalAlignment="Stretch">
                <ContentControl.RenderTransform>
                    <TranslateTransform X="158" Y="0" />
                </ContentControl.RenderTransform>
            </ContentControl>-->

            <!--Displays the confirmation dialog for cash out. Confirmation for service occurs in VirtualButtonDeckOverlayView-->
            <Viewbox VerticalAlignment="Top"
                     HorizontalAlignment="Left"
                     Width="1390"
                     Height="540"
                     Stretch="Fill">
                <Viewbox.RenderTransform>
                    <TranslateTransform X="162" Y="0" />
                </Viewbox.RenderTransform>
                <buttonDeck1:VbdCashOutDlg Visibility="{Binding IsVbdCashOutDialogVisible, Converter={StaticResource BoolToVisible}}" />
            </Viewbox>

            <!-- Rectangle to give screen a disabled look if message overlay is visible -->
            <Rectangle Fill="Black">
                <Rectangle.Style>
                    <Style TargetType="Rectangle">
                        <Setter Property="Opacity" Value="0" />
                        <Style.Triggers>
                            <DataTrigger Value="True" Binding="{Binding IsVirtualButtonDeckDisabled}">
                                <Setter Property="Visibility" Value="Visible" />
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource DisabledFadeInStoryboard}" />
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource DisabledFadeOutStoryboard}" />
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Rectangle.Opacity)}"
                                         Value="0">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>
        </Grid>
    </DataTemplate>

    <!--overlay disable graphic-->
    <DataTemplate x:Key="VbdMarsXDisableTemplate">
        <Grid>
            <Image
                VerticalAlignment="Top"
                HorizontalAlignment="Left"
                Width="1390"
                Height="540"
                Stretch="Fill"
                Source="{DynamicResource VBD_Marsx_Disabled}">
                <Image.RenderTransform>
                    <TranslateTransform X="158" Y="0" />
                </Image.RenderTransform>
            </Image>
        </Grid>
    </DataTemplate>

    <!--Overlay for service dlg and malfunction message-->
    <DataTemplate x:Key="VbdMarsXOverlayTemplate">
        <Border>
            <Border.Background>
                <SolidColorBrush Color="Transparent" />
            </Border.Background>

            <Grid x:Name="VbdOverlayRoot" d:DataContext="{d:DesignInstance Type=viewModels:LobbyViewModel, IsDesignTimeCreatable=False}">

                <Viewbox VerticalAlignment="Top"
                         HorizontalAlignment="Left"
                         Width="1390"
                         Height="540"
                         Stretch="Fill">
                    <Viewbox.RenderTransform>
                        <TranslateTransform X="162" Y="5" />
                    </Viewbox.RenderTransform>
                    <buttonDeck1:VbdServiceDlg
                        Visibility="{Binding IsVbdServiceDialogVisible, Converter={StaticResource BoolToVisible}}" />
                </Viewbox>

                <Viewbox VerticalAlignment="Top"
                         HorizontalAlignment="Left"
                         Stretch="Fill"
                         Width="1364"
                         Height="530">
                    <Viewbox.RenderTransform>
                        <TranslateTransform X="164" Y="4" />
                    </Viewbox.RenderTransform>

                    <Grid>
                        <buttonDeck1:VbdMalfunctionOverlay
                            Width="1364"
                            Height="530"
                            Visibility="{Binding IsVbdMalfunctionOverlayVisible, Converter={StaticResource BoolToVisible}}" />

                        <infoBar:InfoBarView Location="VBD" VerticalAlignment="Bottom" Visibility="{Binding IsVbdInfoBarVisible, Converter={StaticResource BoolToVisible}}" />
                    </Grid>
                </Viewbox>
            </Grid>
        </Border>
    </DataTemplate>
</ResourceDictionary>