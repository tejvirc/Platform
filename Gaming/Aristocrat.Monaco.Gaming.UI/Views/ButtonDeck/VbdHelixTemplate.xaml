<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:contracts="clr-namespace:Aristocrat.Monaco.Gaming.Contracts.Models;assembly=Aristocrat.Monaco.Gaming.Contracts"
                    xmlns:bink="clr-namespace:ManagedBink;assembly=BinkViewerControl"
                    xmlns:buttonDeck1="clr-namespace:Aristocrat.Monaco.Gaming.UI.Views.ButtonDeck"
                    xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Gaming.UI.ViewModels"
                    xmlns:infoBar="clr-namespace:Aristocrat.Monaco.Gaming.UI.Views.InfoBar"
                    mc:Ignorable="d">


	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../../Skins/Styles.xaml" />
        <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/Converters.xaml"/>
		<ResourceDictionary Source="VirtualButtonDeckButtonTemplate.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<buttonDeck1:VirtualButtonDeckButtonTemplateSelector x:Key="VbdButtonSelector" />

    <Storyboard x:Key="DisabledFadeInStoryboard" x:Shared="false">
		<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="0.5"
		                 Duration="0:0:0.1" BeginTime="0:0:0" AutoReverse="False">
		</DoubleAnimation>
	</Storyboard>

	<Storyboard x:Key="DisabledFadeOutStoryboard" x:Shared="false">
		<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.5" To="0.0"
		                 Duration="0:0:0.75" BeginTime="0:0:0" AutoReverse="False">
		</DoubleAnimation>
	</Storyboard>

	<Storyboard x:Key="VbdFadeInStoryboard" x:Shared="false">
		<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0"
		                 Duration="0:0:0.35" BeginTime="0:0:0" AutoReverse="False">
		</DoubleAnimation>
	</Storyboard>

	<Storyboard x:Key="VbdFadeOutStoryboard" x:Shared="false">
		<DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0.0"
		                 Duration="0:0:0.35" BeginTime="0:0:0" AutoReverse="False">
		</DoubleAnimation>
	</Storyboard>

	<DataTemplate x:Key="VbdHelixTemplate">
        <Viewbox x:Name="VbdHelixRootContainer"
                 VerticalAlignment="Top"
                 HorizontalAlignment="Left"
                 Stretch = "Uniform"
                 Width ="1920"
                 Height ="720" 
                 d:DataContext="{d:DesignInstance Type=viewModels:LobbyViewModel, IsDesignTimeCreatable=False}">
            <Viewbox.RenderTransform>
                <TranslateTransform X="0" Y="0" />
            </Viewbox.RenderTransform>

            <Grid x:Name="ButtonContentContainer" 
                  Background="Black" 
                  Visibility="{Binding IsLobbyVbdVisible, Converter={StaticResource BoolToVisHiddenConverter}}">
				<!--Lobby Background Image Animation-->
				<bink:BinkGpuControl
						x:Name="BinkControl"
						LoopVideo="True"
						Cache="True"
						ShowFirstFrameOnLoad="True">
					<bink:BinkGpuControl.Style>
					<Style TargetType="bink:BinkGpuControl">
						<Setter Property="VideoState" Value="Playing" />
						<Style.Triggers>
						<DataTrigger Binding="{Binding VbdVideoState}" Value="{x:Static contracts:LobbyVbdVideoState.InsertMoney}">
							<Setter Property="Filename" Value="{DynamicResource VBD_Helix_InsertMoney}"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding VbdVideoState}" Value="{x:Static contracts:LobbyVbdVideoState.ChooseGame}">
							<Setter Property="Filename" Value="{DynamicResource VBD_Helix_ChooseGame}"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding VbdVideoState}" Value="{x:Static contracts:LobbyVbdVideoState.ChooseTime}">
							<Setter Property="Filename" Value="{DynamicResource VBD_ChooseTime}"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding IsLobbyVbdVisible}" Value="False">
							<Setter Property="VideoState" Value="Stopped"/>
						</DataTrigger>
						</Style.Triggers>
					</Style>
					</bink:BinkGpuControl.Style>
				</bink:BinkGpuControl>

				<!--Blank background if vbd is blank-->
				<Image x:Name="ImageBlankBackground" Stretch="Fill" Source="{DynamicResource VBD_Helix_Blank}"
				IsHitTestVisible="{Binding IsLobbyVbdBackgroundBlank}">
					<Image.Style>
					<Style TargetType="Image">
						<Setter Property="Opacity" Value="0" />
						<Style.Triggers>
						<DataTrigger Binding="{Binding IsLobbyVbdBackgroundBlank}" Value="True">
							<Setter Property="Visibility" Value="Visible" />
							<DataTrigger.EnterActions>
							<BeginStoryboard Storyboard="{StaticResource VbdFadeInStoryboard}"/>
							</DataTrigger.EnterActions>
							<DataTrigger.ExitActions>
							<BeginStoryboard Storyboard="{StaticResource VbdFadeOutStoryboard}"/>
							</DataTrigger.ExitActions>
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Image.Opacity)}" Value="0">
							<Setter Property="Visibility" Value="Hidden" />
						</DataTrigger>
						</Style.Triggers>
					</Style>
					</Image.Style>
				</Image>

				<Image x:Name="ImageGameLoadFlickerFix" Stretch="Fill" Source="{DynamicResource VBD_Helix_Blank}"
				Visibility="{Binding IsGameLoading, Converter={StaticResource BoolToVisible}}" />
				<!--ContentControl selects the buttons template.-->
				<ContentControl
							x:Name="ButtonContentControl"
							Content="{Binding}"
							Visibility="{Binding IsGameLoading, Converter={StaticResource BoolToHiddenConverter}}"
							ContentTemplateSelector="{StaticResource VbdButtonSelector}"/>
				<!--Displays the confirmation dialog for cash out. Confirmation for service occurs in VirtualButtonDeckOverlayView-->
				<Viewbox VerticalAlignment="Top"
						HorizontalAlignment="Left"
						Stretch = "Fill"
						Width ="1920"
						Height ="650">
					<Viewbox.RenderTransform>
						<TranslateTransform X="4" Y="95" />
					</Viewbox.RenderTransform>
					<buttonDeck1:VbdCashOutDlg Visibility="{Binding IsVbdCashOutDialogVisible, Converter={StaticResource BoolToVisible}}" />
				</Viewbox>
				<!-- Rectangle to give screen a disabled look if message overlay is visible -->
				<Rectangle Fill="Black">
					<Rectangle.Style>
					<Style TargetType="Rectangle">
						<Setter Property="Opacity" Value="0" />
						<Style.Triggers>
						<DataTrigger Value="True" Binding="{Binding IsVirtualButtonDeckDisabled}">
							<Setter Property="Visibility" Value="Visible" />
							<DataTrigger.EnterActions>
							<BeginStoryboard Storyboard="{StaticResource DisabledFadeInStoryboard}"/>
							</DataTrigger.EnterActions>
							<DataTrigger.ExitActions>
							<BeginStoryboard Storyboard="{StaticResource DisabledFadeOutStoryboard}"/>
							</DataTrigger.ExitActions>
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Image.Opacity)}" Value="0">
							<Setter Property="Visibility" Value="Hidden" />
						</DataTrigger>
						</Style.Triggers>
					</Style>
					</Rectangle.Style>
				</Rectangle>
			</Grid>
	    </Viewbox>
	</DataTemplate>

	<!--overlay disable graphic-->
	<DataTemplate x:Key="VbdHelixDisableTemplate">
		<Viewbox VerticalAlignment="Top"
		         HorizontalAlignment="Left"
		         Stretch = "Uniform"
		         Width ="1920"
		         Height ="720">
			<Image Stretch="Fill" Source="{DynamicResource VBD_Helix_Disabled}"/>
		</Viewbox>
	</DataTemplate>

	<!--Overlay for service dlg and malfunction message and infobar-->
	<DataTemplate x:Key="VbdHelixOverlayTemplate">
		<Border>
			<Border.Background>
				<SolidColorBrush Color="Transparent"/>
			</Border.Background>

            <Grid x:Name="VbdOverlayRoot" d:DataContext="{d:DesignInstance Type=viewModels:LobbyViewModel, IsDesignTimeCreatable=False}">
                <Grid.RowDefinitions>
					<RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Viewbox Grid.Row="0" 
                         VerticalAlignment="Top"
                         HorizontalAlignment="Left"
                         Stretch = "Fill"
                         Width ="1920"
                         Height ="650">
                    <Viewbox.RenderTransform>
                        <TranslateTransform X="4" Y="95" />
                    </Viewbox.RenderTransform>
                    <buttonDeck1:VbdServiceDlg Visibility="{Binding IsVbdServiceDialogVisible, Converter={StaticResource BoolToVisible}}" />
				</Viewbox>

				<Viewbox Grid.Row="0" 
                         VerticalAlignment="Top"
				         HorizontalAlignment="Left"
				         Stretch = "Fill"
				         Width ="1920"
				         Height ="720">
					<Viewbox.RenderTransform>
						<TranslateTransform X="0" Y="25" />
					</Viewbox.RenderTransform>
                    <Grid>
                        <buttonDeck1:VbdMalfunctionOverlay
                            Width ="1920"
                            Height ="720"
                            Visibility="{Binding IsVbdMalfunctionOverlayVisible, Converter={StaticResource BoolToVisible}}"/>

                        <infoBar:InfoBarView Location="VBD" VerticalAlignment="Bottom" Visibility="{Binding IsVbdInfoBarVisible, Converter={StaticResource BoolToVisible}}" />
                    </Grid>
				</Viewbox>
            </Grid>
		</Border>
	</DataTemplate>

</ResourceDictionary>