<UserControl x:Class="Aristocrat.Monaco.Gaming.UI.Views.Overlay.RGInfo"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:events="clr-namespace:Aristocrat.Monaco.UI.Common.Events;assembly=Aristocrat.Monaco.UI.Common"
             xmlns:converters="clr-namespace:Aristocrat.Monaco.Gaming.UI.Converters"
             xmlns:common="http://monaco.aristocrat.com/common"
             xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Gaming.UI.ViewModels"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance {x:Type viewModels:LobbyViewModel}}"
             Background="Transparent"
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <ResourceDictionary>

            <!-- Apply MahApps.Metro styles to all controls -->
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <!-- Accent and AppTheme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />

                <ResourceDictionary Source="../../Skins/Styles.xaml" />
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/Converters.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:EqualityVisibilityConverter x:Key="EqualToVisible"></converters:EqualityVisibilityConverter>
        </ResourceDictionary>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <events:RoutedEventTrigger RoutedEvent="Control.MouseLeftButtonDown">
            <events:EventToCommandAction Command="{Binding TouchResponsibleGamingInfoCommand}"/>
        </events:RoutedEventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <ItemsControl ItemsSource="{Binding Path=ResponsibleGaming.Pages}" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="3">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
                <Style>
                    <Setter Property="Canvas.Left" Value="0" />
                    <Setter Property="Canvas.Top" Value="0" />
                </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Image Stretch="None" IsHitTestVisible="False" 
                           common:ImageHelper.SourceResourceKey="{Binding BackgroundKey}">
                        <Image.Visibility>
                            <MultiBinding Converter="{StaticResource EqualToVisible}">
                                <Binding Path="DataContext.ResponsibleGaming.InfoPageIndex"
                                         RelativeSource="{RelativeSource AncestorType=UserControl}" />
                                <Binding Path="Index" />
                            </MultiBinding>
                        </Image.Visibility>
                    </Image>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <Image Stretch="None" Grid.Row="1" Grid.Column="1" Margin="4" Visibility="{Binding IsResponsibleGamingInfoFullScreen, Converter={StaticResource TrueCollapsedFalseVisible}}">
            <Image.Style>
                <Style TargetType="Image">
                    <Setter Property="Source" Value="{DynamicResource RGInfoPressToReturn}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HasZeroCredits}" Value="True">
                            <Setter Property="Source" Value="{DynamicResource RGInfoPressToReturnZeroCredits}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>

        <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" Margin="10,0,0,30" VerticalAlignment="Center" 
                    Visibility="{Binding IsResponsibleGamingInfoFullScreen, Converter={StaticResource TrueVisibleFalseCollapsed}}">
            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ResponsibleGaming.IsExitButtonVisible}" 
                                         Value="true">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                
                <Image Stretch="None"
                       Margin="0 0 0 0"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Source="{DynamicResource ButtonBorder}" />

                <Button x:Name="btnExit"
                        Margin="5 9 0 0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Command="{Binding Path=ExitResponsibleGamingInfoCommand}"
                        Style="{StaticResource stlFlatButton}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Image Name="leftArrowImage" Stretch="None" Source="{DynamicResource ExitNormal}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="leftArrowImage" Property="Source" Value="{DynamicResource ExitSelected}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Grid>

            <Grid Margin="15 0 0 0">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ResponsibleGaming.IsPrintHelplineButtonVisible}" 
                                         Value="true">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                
                <Image Stretch="None" 
                       Margin="0 0 0 0"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Source="{DynamicResource ButtonBorder}" />
                
                <Button x:Name="btnPrintHelpline"
                    Margin="5,9,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Command="{Binding Path=PrintHelplineMessageCommand}"
                    Style="{StaticResource stlFlatButton}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Image Name="helplineImage" Stretch="None" Source="{DynamicResource PrintHelplineNormal}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="helplineImage" Property="Source" Value="{DynamicResource PrintHelplineSelected}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="helplineImage" Property="Source" Value="{DynamicResource PrintHelplineDisabled}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Grid>
        </StackPanel>

        <Button x:Name="btnRGLeft"
                Margin="10"
                Grid.Column="0" 
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Visibility="{Binding ResponsibleGaming.IsBackButtonVisible, Converter={StaticResource TrueVisibleFalseCollapsed}}"
                IsEnabled="{Binding ResponsibleGaming.IsBackButtonEnabled}"
                Command="{Binding Path=ResponsibleGaming.LeftInfoPageNavigationCommand}"
                Style="{StaticResource stlFlatButton}">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Image Name="leftArrowImage" Stretch="None" Source="{DynamicResource LeftArrowNormal}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="leftArrowImage" Property="Source" Value="{DynamicResource LeftArrowPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="btnRGRight"
                Margin="10"
                Grid.Column="2" 
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Visibility="{Binding ResponsibleGaming.IsForwardButtonVisible, Converter={StaticResource TrueVisibleFalseCollapsed}}"
                Command="{Binding Path=ResponsibleGaming.RightInfoPageNavigationCommand}"
                Style="{StaticResource stlFlatButton}">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Image Name="rightArrowImage" Stretch="None" Source="{DynamicResource RightArrowNormal}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="rightArrowImage" Property="Source" Value="{DynamicResource RightArrowPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
    </Grid>
</UserControl>
