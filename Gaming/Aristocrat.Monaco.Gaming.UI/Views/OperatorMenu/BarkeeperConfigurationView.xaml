<operatorMenu:OperatorMenuPage x:Class="Aristocrat.Monaco.Gaming.UI.Views.OperatorMenu.BarkeeperConfigurationView"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                               xmlns:operatorMenu="clr-namespace:Aristocrat.Monaco.Application.UI.OperatorMenu;assembly=Aristocrat.Monaco.Application.UI"
                               xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Gaming.UI.ViewModels.OperatorMenu"
                               xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                               xmlns:helpers="http://monaco.aristocrat.com/common"
                               xmlns:lex="http://wpflocalizeextension.codeplex.com"
                               xmlns:loc="http://monaco.aristocrat.com/localization"
                               xmlns:local="clr-namespace:Aristocrat.Monaco.Gaming.UI.Views.OperatorMenu"
                               mc:Ignorable="d"
                               d:DataContext="{d:DesignInstance viewModels:BarkeeperConfigurationViewModel}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/OperatorMenu.xaml" />
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/Converters.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="TextBlock" BasedOn="{StaticResource MonacoTextBlock}">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="MinWidth" Value="300" />
            </Style>

            <Style TargetType="TextBox" BasedOn="{StaticResource MonacoTextBox}">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="MinWidth" Value="300" />
            </Style>

            <Style TargetType="ComboBox" BasedOn="{StaticResource MonacoComboBox}">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="MinWidth" Value="300" />
            </Style>

            <Style TargetType="helpers:ExpirationTextBox" BasedOn="{StaticResource MonacoTextBox}">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="MinWidth" Value="300" />
            </Style>
            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource MonacoTabItem}">
                <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Label
                Content="{lex:Loc Key={x:Static loc:ResourceKeys.EnableBarkeeperButton}}" />
                <Button Name="EnabledBarkeeperInfoButton" Margin="2 0 0 0"
                        Style="{StaticResource MonacoInfoButton}"
                        Command="{Binding ShowInfoPopupCommand}">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource MultiValueConverter}">
                            <Binding ElementName="EnabledBarkeeperInfoButton" />
                            <Binding ElementName="EnabledBarkeeperInfoButtonProxy" Path="Result" />
                        </MultiBinding>
                    </Button.CommandParameter>
                    <lex:LocProxy Name="EnabledBarkeeperInfoButtonProxy"
                                  Source="{x:Static loc:ResourceKeys.EnableBarkeeperButtonToolTip}" />
                </Button>
        </StackPanel>
        <controls:ToggleSwitchButton Grid.Row="1"
                                     IsEnabled="{Binding InputEnabledByRuleOverride}"
                                     IsChecked="{Binding RewardLevelsEnabled}"
                                     controls:ControlsHelper.ContentCharacterCasing="Upper"
                                     controls:ControlsHelper.CornerRadius="0"
                                     helpers:ToggleSwitchButtonHelper.OffContent="{lex:Loc Key={x:Static loc:ResourceKeys.Off}}"
                                     helpers:ToggleSwitchButtonHelper.OnContent="{lex:Loc Key={x:Static loc:ResourceKeys.On}}" Grid.ColumnSpan="2" />

        <TabControl Grid.Row="2" Margin="0 20" Background="Transparent" TabStripPlacement="Top" Visibility="{Binding RewardLevelsEnabled, Converter={StaticResource TrueVisibleFalseCollapsed}}">
            <TabItem Header="Cash-In Reward">
                <local:BarkeeperCashInReward/>
            </TabItem>
            <TabItem Header="Coin-In Reward">
                <local:BarkeeperCoinInReward/>
            </TabItem>
        </TabControl>
    </Grid>

</operatorMenu:OperatorMenuPage>