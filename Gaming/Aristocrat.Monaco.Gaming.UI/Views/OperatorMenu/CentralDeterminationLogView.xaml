<operatorMenu:OperatorMenuPage x:Class="Aristocrat.Monaco.Gaming.UI.Views.OperatorMenu.CentralDeterminationLogView"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                               xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                               xmlns:lex="http://wpflocalizeextension.codeplex.com"
                               xmlns:loc="http://monaco.aristocrat.com/localization"
                               xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Gaming.UI.ViewModels.OperatorMenu"
                               xmlns:operatorMenu="clr-namespace:Aristocrat.Monaco.Application.UI.OperatorMenu;assembly=Aristocrat.Monaco.Application.UI"
                               xmlns:converters="clr-namespace:Aristocrat.Monaco.UI.Common.Converters;assembly=Aristocrat.Monaco.UI.Common"
                               xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                               xmlns:events="clr-namespace:Aristocrat.Monaco.UI.Common.Events;assembly=Aristocrat.Monaco.UI.Common"
                               xmlns:common="http://monaco.aristocrat.com/common"
                               mc:Ignorable="d" 
                               d:DataContext="{d:DesignInstance viewModels:CentralDeterminationLogViewModel, IsDesignTimeCreatable=False}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/OperatorMenu.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="Centered" TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="OutcomeCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource MonacoDataGridCell}">
                <Setter Property="Margin" Value="5 2"/>
            </Style>

            <converters:DateTimeFormatConverter x:Key="DateTimeConverter"/>

            <!-- Based on MonacoScrollButtonDataGrid, has custom margins and uses DataGridUpDownScrollButtons for vertical scroll -->
            <Style x:Key="OutcomeViewDataGrid" TargetType="{x:Type DataGrid}" BasedOn="{StaticResource MonacoScrollButtonDataGrid}">
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGrid}">
                            <Border Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ScrollViewer x:Name="DG_ScrollViewer" 
                                                  Margin="0 -30 0 0" 
                                                  Focusable="False" 
                                                  Tag="{Binding ElementName=GridScrollButtons}">
                                        <ScrollViewer.Template>
                                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="*" />
                                                    </Grid.RowDefinitions>
                                                    <Button Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                                      Command="{x:Static DataGrid.SelectAllCommand}"
                                                                      Focusable="False"
                                                                      Style="{StaticResource MonacoDataGridSelectAllButton}"
                                                                      Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={StaticResource HeadersVisConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                                    Grid.Row="0" Grid.Column="1"
                                                                                    VerticalContentAlignment="Bottom" VerticalAlignment="Bottom"
                                                                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={StaticResource HeadersVisConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Margin="0 0 0 30"
                                                                            Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                                                                            CanContentScroll="{TemplateBinding CanContentScroll}" />

                                                </Grid>
                                            </ControlTemplate>
                                        </ScrollViewer.Template>
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                    <DockPanel Grid.Column="1" Grid.Row="0" LastChildFill="False">
                                        <common:DataGridUpDownScrollButtons DockPanel.Dock="Right"
                                                                            x:Name="GridScrollButtons"
                                                                            HorizontalAlignment="Right"
                                                                            VerticalAlignment="Top"
                                                                            ScrollGrid="{Binding ElementName=DG_ScrollViewer}"
                                                                            Visibility="{Binding ElementName=DG_ScrollViewer, Path=ScrollableHeight, Converter={StaticResource NumToVisConverter}}"
                                                                            Margin="5 0 0 0"/>
                                    </DockPanel>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <DataGrid Name="CentralLogViewer"
                            ItemsSource="{Binding Path=TransactionData, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedItem="{Binding SelectedRow}"
                            ScrollViewer.CanContentScroll="True" SelectionMode="Single" IsReadOnly="True">
            <i:Interaction.Triggers>
                <events:RoutedEventTrigger RoutedEvent="ScrollViewer.ScrollChanged">
                    <events:EventToCommandAction Command="{Binding EventViewerScrolledCommand}"/>
                </events:RoutedEventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Columns>
                <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.DateAndTimeHeader}}"
                                    Binding="{Binding TransactionDateTime, Converter={StaticResource DateTimeConverter}, ConverterParameter=MinDateBlank}"
                                    MinWidth="150"/>
                <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.GameIdHeader}}"
                                    Binding="{Binding GameId}" ElementStyle="{StaticResource Centered}"/>
                <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.DenominationShortHeader}}"
                                    Binding="{Binding Denomination}" ElementStyle="{StaticResource Centered}"/>
                <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.WagerCategoryHeader}}"
                                    Binding="{Binding WagerCategory}" ElementStyle="{StaticResource Centered}"/>
                <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.Wager}}"
                                    Binding="{Binding WagerAmount}" ElementStyle="{StaticResource Centered}"/>
                <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.OutcomesRequestedHeader}}"
                                    Binding="{Binding OutcomesRequested}" ElementStyle="{StaticResource Centered}"/>
                <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.OutcomeStateHeader}}"
                                    Binding="{Binding OutcomeState}" />
                <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.OutcomeExceptionHeader}}"
                                    Binding="{Binding OutcomeException}" />
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel Grid.Row="1" Orientation ="Vertical" >
            <TextBlock x:Name="TextBlockGameRoundInfo" 
                       Margin="0,0,0,5"
                       Text="{lex:Loc Key={x:Static loc:ResourceKeys.OutcomesHeader}}" 
                       FontSize="{StaticResource NormalFontSize}" 
                       FontWeight="Bold"/>
            <Border BorderBrush="{DynamicResource Brush3}" 
                    BorderThickness="2" 
                    Padding="5" 
                    Height="140">
                <DataGrid Name="OutcomesViewer"
                          ItemsSource="{Binding Path=SelectedRow.Outcomes, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                          Style="{StaticResource OutcomeViewDataGrid}"
                          ScrollViewer.CanContentScroll="True"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled" CellStyle="{StaticResource OutcomeCellStyle}">
                    <i:Interaction.Triggers>
                        <events:RoutedEventTrigger RoutedEvent="ScrollViewer.ScrollChanged">
                            <events:EventToCommandAction Command="{Binding EventViewerScrolledCommand}"/>
                        </events:RoutedEventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Foreground" Value="{StaticResource Brush3}"/>
                            <Setter Property="Background" Value="Transparent" />
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.GameSetIdHeader}}"
                                            Binding="{Binding GameSetId}"/>
                        <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.ReferenceHeader}}"
                                            Binding="{Binding Reference}"/>
                        <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.TypeHeader}}"
                                            Binding="{Binding Type}" MinWidth="150"/>
                        <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.ValueHeader}}"
                                            Binding="{Binding Value}" MinWidth="100"/>
                        <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.WinLevelHeader}}"
                                            Binding="{Binding WinLevelIndex}"/>
                        <DataGridTextColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.LookupDataHeader}}"
                                            Binding="{Binding LookupData}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Border>
        </StackPanel>
    </Grid>
</operatorMenu:OperatorMenuPage>