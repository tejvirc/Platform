<operatorMenu:OperatorMenuPage
    x:Class="Aristocrat.Monaco.Gaming.UI.Views.OperatorMenu.AdvancedGameSetupView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:Aristocrat.Monaco.Gaming.UI.Behaviors"
    xmlns:common="clr-namespace:Aristocrat.Monaco.UI.Common;assembly=Aristocrat.Monaco.UI.Common"
    xmlns:converters="clr-namespace:Aristocrat.Monaco.Gaming.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="http://monaco.aristocrat.com/common"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:loc="http://monaco.aristocrat.com/localization"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:Aristocrat.Monaco.Gaming.UI.Models"
    xmlns:operatorMenu="clr-namespace:Aristocrat.Monaco.Application.UI.OperatorMenu;assembly=Aristocrat.Monaco.Application.UI"
    xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Gaming.UI.ViewModels.OperatorMenu"
    common:DialogParticipation.Register="{Binding}"
    d:DataContext="{d:DesignInstance viewModels:AdvancedGameSetupViewModel}"
    Background="Transparent"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/OperatorMenu.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style BasedOn="{StaticResource MonacoButton}" TargetType="Button">
                <Setter Property="Width" Value="120" />
                <Setter Property="Margin" Value="10" />
            </Style>

            <Style BasedOn="{StaticResource MonacoLabel}" TargetType="Label">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="{StaticResource DarkBrush1}" />
            </Style>

            <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{DynamicResource LightBrush4}" />
                <Setter Property="FontWeight" Value="DemiBold" />
                <Setter Property="FontSize" Value="{DynamicResource LabelFontSize}" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>

            <converters:FormattedCurrencyConverter x:Key="CurrencyConverter" />
            <converters:PaytableDisplayTextConverter x:Key="PaytableDisplayTextConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Name="View">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel
            Grid.Row="0"
            Margin="5"
            HorizontalAlignment="Left"
            Orientation="Horizontal">
            <StackPanel
                Margin="0,0,20,0"
                VerticalAlignment="Center"
                Orientation="Horizontal"
                Visibility="{Binding HasMultipleGames, Converter={StaticResource BoolToVisConverter}}">
                <TextBlock
                    Margin="0,0,5,0"
                    VerticalAlignment="Center"
                    FontSize="16"
                    Text="{lex:Loc Key={x:Static loc:ResourceKeys.GameType}}" />
                <ComboBox
                    MinWidth="150"
                    MinHeight="40"
                    VerticalAlignment="Center"
                    ItemsSource="{Binding GameTypes}"
                    SelectedItem="{Binding SelectedGameType}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock><lex:EnumRun EnumValue="{Binding}" PrependType="False" /></TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsVirtualizing="True" />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>

                <TextBlock
                    Margin="20,0,5,0"
                    VerticalAlignment="Center"
                    FontSize="16"
                    Text="{lex:Loc Key={x:Static loc:ResourceKeys.GameText}}" />
                <ComboBox
                    MinWidth="250"
                    MinHeight="40"
                    ItemsSource="{Binding Games}"
                    SelectedItem="{Binding SelectedGame}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock
                                Padding="0,0,10,0"
                                VerticalAlignment="Center"
                                Text="{Binding ThemeName, Mode=OneWay}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsVirtualizing="True" />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>
            </StackPanel>

            <StackPanel
                Margin="0,0,20,0"
                VerticalAlignment="Center"
                Orientation="Horizontal"
                Visibility="{Binding HasTopAward, Converter={StaticResource BoolToVisConverter}}">
                <TextBlock
                    Margin="0,0,5,0"
                    FontSize="16"
                    Text="{lex:Loc Key={x:Static loc:ResourceKeys.MachineTopAward}}" />
                <TextBlock MinWidth="200" Text="{Binding TopAwardValue, Converter={StaticResource CurrencyConverter}, ConverterParameter=ZeroNotAvailable, Mode=OneWay}" />
            </StackPanel>
        </StackPanel>

        <Border
            x:Name="ConfigsBorder"
            Grid.Row="1"
            Margin="5"
            Style="{StaticResource MonacoBorder}">
            <Grid x:Name="GridGameConfigs">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Style="{StaticResource TextBlockStyle}">
                    <Run Text="{Binding SelectedGame.ThemeName, Mode=OneWay}" />
                    <Run Text="{lex:Loc Key={x:Static loc:ResourceKeys.GameOptions}}" />
                    <Run Text="{Binding ReadOnlyStatus, Mode=OneWay}" />
                </TextBlock>

                <StackPanel
                    Grid.Row="1"
                    Orientation="Horizontal"
                    Visibility="{Binding ShowRestrictionChooser, Converter={StaticResource BoolToVisConverter}}">
                    <TextBlock
                        Margin="0,0,5,0"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Text="{lex:Loc Key={x:Static loc:ResourceKeys.PackageLabel}}" />
                    <ComboBox
                        MinWidth="250"
                        MinHeight="40"
                        DisplayMemberPath="Name"
                        IsEnabled="{Binding GameOptionsEnabled}"
                        ItemsSource="{Binding Restrictions, Mode=OneWay}"
                        SelectedItem="{Binding SelectedRestriction, Mode=TwoWay}" />
                </StackPanel>

                <TextBlock
                    Grid.Row="1"
                    HorizontalAlignment="Left"
                    Visibility="{Binding DenomSelectionLimitExists, Converter={StaticResource BoolToVisConverter}}">
                    <Run Text="{lex:Loc Key={x:Static loc:ResourceKeys.DenomsSelected}}" />
                    <Run Text="{Binding SelectedGame.EnabledGameConfigurationsCount, Mode=OneWay, FallbackValue=0}" />
                    <Run Text="of" />
                    <Run Text="{Binding DenomSelectionLimit, Mode=OneWay}" />
                </TextBlock>

                <DataGrid
                    Grid.Row="2"
                    Width="{Binding ElementName=GridGameConfigs, Path=ActualWidth}"
                    Height="{Binding ElementName=GridGameConfigs, Path=ActualHeight}"
                    Margin="0,-15,0,0"
                    VerticalAlignment="Top"
                    behaviors:DataGridScrollFirstBehavior.ScrollIntoView="{Binding ResetScrollIntoView}"
                    AutoGenerateColumns="False"
                    CanUserAddRows="False"
                    CanUserDeleteRows="False"
                    CanUserReorderColumns="False"
                    CanUserResizeColumns="False"
                    CanUserResizeRows="False"
                    CanUserSortColumns="False"
                    CellStyle="{StaticResource MonacoExtraCompactDataGridCell}"
                    EnableColumnVirtualization="True"
                    EnableRowVirtualization="True"
                    IsReadOnly="True"
                    ItemsSource="{Binding GameConfigurations, UpdateSourceTrigger=PropertyChanged}"
                    RowHeight="75"
                    RowStyle="{StaticResource MonacoUnselectableDataGridRow}"
                    ScrollViewer.HorizontalScrollBarVisibility="Auto"
                    ScrollViewer.PanningMode="VerticalOnly"
                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                    SelectedItem="{Binding SelectedConfig}"
                    VirtualizingPanel.CacheLengthUnit="Item"
                    VirtualizingPanel.IsContainerVirtualizable="True"
                    VirtualizingPanel.IsVirtualizing="True"
                    VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                    VirtualizingPanel.ScrollUnit="Item"
                    VirtualizingPanel.VirtualizationMode="Standard">
                    <DataGrid.Resources>
                        <common:BindingProxy x:Key="PageModel" Data="{Binding}" />
                        <Style BasedOn="{StaticResource MonacoComboBox}" TargetType="ComboBox">
                            <Setter Property="FontSize" Value="14" />
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="Margin" Value="5,0,0,0" />
                        </Style>
                    </DataGrid.Resources>

                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.Denom}}" HeaderStyle="{StaticResource MonacoDataGridColumnHeaderSmallCentered}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type models:EditableGameConfiguration}">
                                    <StackPanel Margin="10,-20,0,0">
                                        <Label
                                            Margin="0"
                                            HorizontalAlignment="Center"
                                            HorizontalContentAlignment="Center"
                                            Content="{Binding DenomString}"
                                            FontSize="16" />
                                        <CheckBox
                                            Margin="0"
                                            HorizontalAlignment="Center"
                                            HorizontalContentAlignment="Center"
                                            IsChecked="{Binding Path=DataContext.(models:EditableGameConfiguration.Enabled), RelativeSource={RelativeSource AncestorType=DataGridCell}, Mode=TwoWay}"
                                            IsEnabled="{Binding CanToggleEnabled}" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="{lex:Loc Key={x:Static loc:ResourceKeys.PaytableRTP}}" HeaderStyle="{StaticResource MonacoDataGridColumnHeaderSmallCentered}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type models:EditableGameConfiguration}">
                                    <ComboBox
                                        Width="Auto"
                                        MinWidth="150"
                                        IsEnabled="{Binding CanEditAndEnabled}"
                                        ItemsSource="{Binding AvailablePaytables, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedItem="{Binding SelectedPaytable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock>
                                                    <TextBlock.Text>
                                                        <MultiBinding Converter="{StaticResource PaytableDisplayTextConverter}">
                                                            <Binding Path="Rtp" />
                                                            <Binding Path="GameDetail.VariationId" />
                                                            <Binding
                                                                Mode="OneWay"
                                                                Path="Data.(viewModels:AdvancedGameSetupViewModel.ShowGameRtpAsRange)"
                                                                Source="{StaticResource PageModel}" />
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel IsVirtualizing="True" />
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn
                            Header="{lex:Loc Key={x:Static loc:ResourceKeys.BetOption}}"
                            HeaderStyle="{StaticResource MonacoDataGridColumnHeaderSmallCentered}"
                            Visibility="{Binding Path=Data.(viewModels:AdvancedGameSetupViewModel.OptionColumnVisible), Source={StaticResource PageModel}, Converter={StaticResource BoolToVisConverter}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type models:EditableGameConfiguration}">
                                    <ComboBox
                                        Width="100"
                                        DisplayMemberPath="Name"
                                        IsEnabled="{Binding BetOptionEnabled}"
                                        IsSynchronizedWithCurrentItem="False"
                                        ItemsSource="{Binding BetOptions}"
                                        SelectedItem="{Binding SelectedBetOption, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel IsVirtualizing="True" />
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn
                            Header="{lex:Loc Key={x:Static loc:ResourceKeys.LineOption}}"
                            HeaderStyle="{StaticResource MonacoDataGridColumnHeaderSmallCentered}"
                            Visibility="{Binding Path=Data.(viewModels:AdvancedGameSetupViewModel.OptionColumnVisible), Source={StaticResource PageModel}, Converter={StaticResource BoolToVisConverter}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type models:EditableGameConfiguration}">
                                    <ComboBox
                                        Width="100"
                                        DisplayMemberPath="Name"
                                        IsEnabled="{Binding LineOptionEnabled}"
                                        ItemsSource="{Binding LineOptions}"
                                        SelectedItem="{Binding SelectedLineOption, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel IsVirtualizing="True" />
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn
                            Header="{lex:Loc Key={x:Static loc:ResourceKeys.BonusBet}}"
                            HeaderStyle="{StaticResource MonacoDataGridColumnHeaderSmallCentered}"
                            Visibility="{Binding Path=Data.(viewModels:AdvancedGameSetupViewModel.IsPokerGameSelected), Source={StaticResource PageModel}, Converter={StaticResource BoolToVisConverter}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type models:EditableGameConfiguration}">
                                    <StackPanel HorizontalAlignment="Center" Orientation="Vertical">
                                        <ComboBox
                                            Width="80"
                                            IsEnabled="{Binding BonusBetEnabled}"
                                            ItemsSource="{Binding BonusBets}"
                                            SelectedValue="{Binding SelectedBonusBet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Visibility="{Binding BonusBetAvailable, Converter={StaticResource BoolToVisConverter}}">
                                            <ComboBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <VirtualizingStackPanel IsVirtualizing="True" />
                                                </ItemsPanelTemplate>
                                            </ComboBox.ItemsPanel>
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock FontSize="14" Text="{Binding}" />
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <TextBlock
                                            Width="80"
                                            VerticalAlignment="Center"
                                            Text="{lex:Loc Key={x:Static loc:ResourceKeys.NotAvailable}}"
                                            Visibility="{Binding BonusBetAvailable, Converter={StaticResource BoolToCollapsedConverter}}" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn
                            MaxWidth="120"
                            Binding="{Binding MaxBet, Mode=OneWay}"
                            Header="{lex:Loc Key={x:Static loc:ResourceKeys.MaxBet}}"
                            HeaderStyle="{StaticResource MonacoDataGridColumnHeaderSmall}"
                            Visibility="{Binding Path=Data.(viewModels:AdvancedGameSetupViewModel.GlobalOptionsVisible), Source={StaticResource PageModel}, Converter={StaticResource BoolToVisConverter}}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Margin" Value="5,0,0,0" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn
                            MaxWidth="120"
                            Binding="{Binding TopAwardValue, Converter={StaticResource CurrencyConverter}, ConverterParameter=ZeroNotAvailable, Mode=OneWay}"
                            Header="{lex:Loc Key={x:Static loc:ResourceKeys.TopAward}}"
                            HeaderStyle="{StaticResource MonacoDataGridColumnHeaderSmall}"
                            Visibility="{Binding Path=Data.(viewModels:AdvancedGameSetupViewModel.GlobalOptionsVisible), Source={StaticResource PageModel}, Converter={StaticResource BoolToVisConverter}}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Margin" Value="5,0,0,0" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTemplateColumn
                            Header="{Binding Path=Data.(viewModels:AdvancedGameSetupViewModel.GambleHeaderText), Source={StaticResource PageModel}}"
                            HeaderStyle="{StaticResource MonacoDataGridColumnHeaderSmallCentered}"
                            Visibility="{Binding Path=Data.(viewModels:AdvancedGameSetupViewModel.GambleOptionVisible), Source={StaticResource PageModel}, Converter={StaticResource BoolToVisConverter}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type models:EditableGameConfiguration}">
                                    <CheckBox
                                        HorizontalAlignment="Center"
                                        IsChecked="{Binding Gamble, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        IsEnabled="{Binding CanEditAndEnableGamble}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn
                            Header="{Binding Path=Data.(viewModels:AdvancedGameSetupViewModel.LetItRideHeaderText), Source={StaticResource PageModel}}"
                            HeaderStyle="{StaticResource MonacoDataGridColumnHeaderSmallCentered}"
                            Visibility="{Binding Path=Data.(viewModels:AdvancedGameSetupViewModel.LetItRideOptionVisible), Source={StaticResource PageModel}, Converter={StaticResource BoolToVisConverter}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type models:EditableGameConfiguration}">
                                    <CheckBox
                                        HorizontalAlignment="Center"
                                        IsChecked="{Binding LetItRide, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        IsEnabled="{Binding CanEditAndEnableLetItRide}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>


                        <DataGridTemplateColumn
                            Header="{lex:Loc Key={x:Static loc:ResourceKeys.ForcedMinBet}}"
                            HeaderStyle="{StaticResource MonacoDataGridColumnHeaderSmallCentered}"
                            Visibility="{Binding Path=Data.(viewModels:AdvancedGameSetupViewModel.OptionColumnVisible), Source={StaticResource PageModel}, Converter={StaticResource BoolToVisConverter}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type models:EditableGameConfiguration}">
                                    <helpers:SelectableCurrencyDecimalUpDown
                                        Width="160"
                                        AllowTextInput="True"
                                        FontSize="14"
                                        IsEnabled="{Binding CanEditAndEnabled}"
                                        Maximum="{Binding BetMaximum, Mode=OneWay}"
                                        Minimum="{Binding BetMinimum, Mode=OneWay}"
                                        SelectableValues="{Binding MinBetOptions, Mode=OneWay}"
                                        Style="{StaticResource MonacoDecimalUpDown}"
                                        Value="{Binding ForcedMinBet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn
                            Header="{lex:Loc Key={x:Static loc:ResourceKeys.ForcedMinBet}}"
                            HeaderStyle="{StaticResource MonacoDataGridColumnHeaderSmallCentered}"
                            Visibility="{Binding Path=Data.(viewModels:AdvancedGameSetupViewModel.IsRouletteGameSelected), Source={StaticResource PageModel}, Converter={StaticResource BoolToVisConverter}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type models:EditableGameConfiguration}">
                                    <helpers:CurrencyDecimalUpDown
                                        Width="160"
                                        AllowTextInput="True"
                                        FontSize="14"
                                        Increment="{Binding Denom}"
                                        IsEnabled="{Binding CanEditAndEnabled}"
                                        Maximum="{Binding BetMaximum, Mode=OneWay}"
                                        Minimum="{Binding BetMinimum, Mode=OneWay}"
                                        Style="{StaticResource MonacoDecimalUpDown}"
                                        Value="{Binding ForcedMinBet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn
                            Header="{lex:Loc Key={x:Static loc:ResourceKeys.ForcedMaxBetInside}}"
                            HeaderStyle="{StaticResource MonacoDataGridColumnHeaderSmallCentered}"
                            Visibility="{Binding Path=Data.(viewModels:AdvancedGameSetupViewModel.IsRouletteGameSelected), Source={StaticResource PageModel}, Converter={StaticResource BoolToVisConverter}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type models:EditableGameConfiguration}">
                                    <helpers:CurrencyDecimalUpDown
                                        Width="160"
                                        AllowTextInput="True"
                                        FontSize="14"
                                        Increment="{Binding Denom}"
                                        IsEnabled="{Binding CanEditAndEnabled}"
                                        Maximum="{Binding BetMaximum, Mode=OneWay}"
                                        Minimum="{Binding BetMinimum, Mode=OneWay}"
                                        Style="{StaticResource MonacoDecimalUpDown}"
                                        Value="{Binding ForcedMaxBet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn
                            Header="{lex:Loc Key={x:Static loc:ResourceKeys.ForcedMaxBetOutside}}"
                            HeaderStyle="{StaticResource MonacoDataGridColumnHeaderSmallCentered}"
                            Visibility="{Binding Path=Data.(viewModels:AdvancedGameSetupViewModel.IsRouletteGameSelected), Source={StaticResource PageModel}, Converter={StaticResource BoolToVisConverter}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type models:EditableGameConfiguration}">
                                    <helpers:CurrencyDecimalUpDown
                                        Width="160"
                                        AllowTextInput="True"
                                        FontSize="14"
                                        Increment="{Binding Denom}"
                                        IsEnabled="{Binding CanEditAndEnabled}"
                                        Maximum="{Binding BetMaximum, Mode=OneWay}"
                                        Minimum="{Binding BetMinimum, Mode=OneWay}"
                                        Style="{StaticResource MonacoDecimalUpDown}"
                                        Value="{Binding ForcedMaxBetOutside, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn MaxWidth="43">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type models:EditableGameConfiguration}">
                                    <Button
                                        Name="WarningButton"
                                        Command="{Binding DataContext.ShowInfoPopupCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                        Style="{StaticResource MonacoWarningButton}"
                                        Visibility="{Binding WarningTextHidden, Converter={StaticResource BoolToHiddenConverter}, UpdateSourceTrigger=PropertyChanged}">
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource MultiValueConverter}">
                                                <Binding ElementName="WarningButton" />
                                                <Binding Path="WarningText" />
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn
                            Header="{lex:Loc Key={x:Static loc:ResourceKeys.ProgressiveColumnHeader}}"
                            HeaderStyle="{StaticResource MonacoDataGridColumnHeaderSmall}"
                            Visibility="{Binding Path=Data.(viewModels:AdvancedGameSetupViewModel.OptionColumnVisible), Source={StaticResource PageModel}, Converter={StaticResource BoolToVisConverter}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type models:EditableGameConfiguration}">
                                    <StackPanel Orientation="Horizontal">
                                        <Button
                                            Name="ProgressiveSetupButton"
                                            Width="55"
                                            Margin="2,0,0,0"
                                            Command="{Binding Path=Data.(viewModels:AdvancedGameSetupViewModel.ProgressiveSetupCommand), Source={StaticResource PageModel}}"
                                            CommandParameter="{Binding}"
                                            Content="{Binding ProgressiveSetupText, UpdateSourceTrigger=PropertyChanged}"
                                            FontSize="14"
                                            IsEnabled="{Binding ProgressiveSetupEnabled}"
                                            Visibility="{Binding ProgressiveSetupVisibility, Converter={StaticResource BoolToVisConverter}, UpdateSourceTrigger=PropertyChanged}" />
                                        <Button
                                            Name="ProgressiveViewButton"
                                            Width="55"
                                            Margin="2,0,0,0"
                                            Command="{Binding Path=Data.(viewModels:AdvancedGameSetupViewModel.ProgressiveViewCommand), Source={StaticResource PageModel}}"
                                            CommandParameter="{Binding}"
                                            Content="{lex:Loc Key={x:Static loc:ResourceKeys.ProgressiveViewButtonText}}"
                                            FontSize="14"
                                            Visibility="{Binding ProgressiveViewVisibility, Converter={StaticResource BoolToVisConverter}, UpdateSourceTrigger=PropertyChanged}" />
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            Text="{lex:Loc Key={x:Static loc:ResourceKeys.NotAvailable}}"
                                            Visibility="{Binding ProgressivesEnabled, Converter={StaticResource BoolToCollapsedConverter}, UpdateSourceTrigger=PropertyChanged}" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Border>

        <StackPanel
            Grid.Row="2"
            Margin="0"
            Orientation="Horizontal">
            <StackPanel Orientation="Horizontal">
                <Button
                    Width="Auto"
                    Command="{Binding SaveCommand, Mode=OneWay}"
                    Content="{Binding SaveButtonText, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding CanSave, UpdateSourceTrigger=PropertyChanged}"
                    Visibility="{Binding ShowSaveButtonOverride, Converter={StaticResource BoolToVisConverter}}" />
                <Button
                    Name="SaveWarningButton"
                    Margin="0,0,10,10"
                    Command="{Binding ShowInfoPopupCommand}"
                    Style="{StaticResource MonacoInfoButton}"
                    Visibility="{Binding Path=SaveWarningEnabled, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisConverter}}">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource MultiValueConverter}">
                            <Binding ElementName="SaveWarningButton" />
                            <Binding Path="SaveWarningText" />
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
            </StackPanel>
            <Button
                Width="Auto"
                Command="{Binding CancelCommand, Mode=OneWay}"
                Content="{Binding CancelButtonText, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding ShowCancelButtonOverride, Converter={StaticResource BoolToVisConverter}}" />
            <Button
                Width="Auto"
                Command="{Binding ConfigCommand, Mode=OneWay}"
                Content="{lex:Loc Key={x:Static loc:ResourceKeys.ReconfigureGames}}"
                IsEnabled="{Binding InputEnabled, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding ConfigureVisible, Converter={StaticResource BoolToVisConverter}}" />
            <StackPanel Orientation="Horizontal" Visibility="{Binding ImportVisibleOverride, Converter={StaticResource BoolToVisConverter}}">
                <Button
                    x:Name="ImportBtn"
                    Width="Auto"
                    Command="{Binding ImportCommand}"
                    Content="{lex:Loc Key={x:Static loc:ResourceKeys.ImportGameSettings}}" />
                <Button
                    Name="ImportInfoButton"
                    Margin="0,0,10,10"
                    Command="{Binding ShowInfoPopupCommand}"
                    Style="{StaticResource MonacoInfoButton}"
                    Visibility="{Binding Path=CanExecuteImportCommand, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToCollapsedConverter}}">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource MultiValueConverter}">
                            <Binding ElementName="ImportInfoButton" />
                            <Binding ElementName="GameSetupEKeyImportVerified" Path="Result" />
                        </MultiBinding>
                    </Button.CommandParameter>
                    <lex:LocProxy x:Name="GameSetupEKeyImportVerified" Source="{x:Static loc:ResourceKeys.GameSetupEKeyImportVerified}" />
                </Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Visibility="{Binding ExportVisibleOverride, Converter={StaticResource BoolToVisConverter}}">
                <Button
                    Width="Auto"
                    Command="{Binding ExportCommand}"
                    Content="{lex:Loc Key={x:Static loc:ResourceKeys.ExportGameSettings}}" />
                <Button
                    Name="ExportInfoButton"
                    Margin="0,0,10,10"
                    Command="{Binding ShowInfoPopupCommand}"
                    Style="{StaticResource MonacoInfoButton}"
                    Visibility="{Binding Path=CanExecuteExportCommand, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToCollapsedConverter}}">

                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource MultiValueConverter}">
                            <Binding ElementName="ExportInfoButton" />
                            <Binding ElementName="GameSetupEKeyExportVerified" Path="Result" />
                        </MultiBinding>
                    </Button.CommandParameter>
                    <lex:LocProxy x:Name="GameSetupEKeyExportVerified" Source="{x:Static loc:ResourceKeys.GameSetupEKeyExportVerified}" />
                </Button>
            </StackPanel>
            <Button
                Width="Auto"
                Command="{Binding ShowRtpSummaryCommand}"
                Content="{lex:Loc Key={x:Static loc:ResourceKeys.ViewRTPSummary}}"
                Visibility="{Binding ShowSummaryButtons, Converter={StaticResource BoolToVisConverter}, UpdateSourceTrigger=PropertyChanged}" />
            <Button
                Width="Auto"
                Command="{Binding ShowProgressiveSummaryCommand}"
                Content="{lex:Loc Key={x:Static loc:ResourceKeys.ViewProgressiveSummary}}"
                Visibility="{Binding ShowSummaryButtons, Converter={StaticResource BoolToVisConverter}, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
    </Grid>
</operatorMenu:OperatorMenuPage>
