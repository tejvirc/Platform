<operatorMenu:OperatorMenuPage x:Class="Aristocrat.Monaco.Gaming.UI.Views.OperatorMenu.GamePreferencesView"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                               xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                               xmlns:operatorMenu="clr-namespace:Aristocrat.Monaco.Application.UI.OperatorMenu;assembly=Aristocrat.Monaco.Application.UI"
                               xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Gaming.UI.ViewModels.OperatorMenu"
                               xmlns:helpers="http://monaco.aristocrat.com/common"
                               xmlns:common="clr-namespace:Aristocrat.Monaco.UI.Common;assembly=Aristocrat.Monaco.UI.Common"
                               xmlns:lex="http://wpflocalizeextension.codeplex.com"
                               xmlns:loc="http://monaco.aristocrat.com/localization"
                               xmlns:audio="clr-namespace:Aristocrat.Monaco.Hardware.Contracts.Audio;assembly=Aristocrat.Monaco.Hardware.Contracts"
                               xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                               mc:Ignorable="d" 
                               d:DataContext="{d:DesignInstance {x:Type viewModels:GamePreferencesViewModel}}"
                               common:DialogParticipation.Register="{Binding}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/OperatorMenu.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="TextBlock" BasedOn="{StaticResource MonacoTextBlock}">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Margin" Value="0 0 20 0"/>
            </Style>

            <Style TargetType="CheckBox" BasedOn="{StaticResource MonacoCheckBox}">
                <Setter Property="Margin" Value="5 10 0 0"/>
                <Setter Property="FontSize" Value="14" />
                <Setter Property="helpers:CheckBoxHelper.CheckBoxPartWidth" Value="30" />
                <Setter Property="helpers:CheckBoxHelper.CheckMarkPartWidth" Value="15" />
                <Setter Property="helpers:CheckBoxHelper.CheckMarkPartHeight" Value="13" />
            </Style>
            <Style TargetType="ComboBox" BasedOn="{StaticResource MonacoComboBox}">
                <Setter Property="Margin" Value="5 5 0 0"/>
                <Setter Property="Width" Value="160"/>
                <Setter Property="FontSize" Value="14" />
            </Style>

            <Style TargetType="Label" BasedOn="{StaticResource MonacoLabel}">
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="FontSize" Value="14" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
        <Grid x:Name="MainGrid" VerticalAlignment="Top" Margin="0, 0, 0, -50">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Left Side Section -->
            <StackPanel Orientation="Vertical"
              Grid.Column="0" 
              Grid.Row="0">

              <StackPanel x:Name="AttractModeStackPanel"
                          Orientation="Vertical"
                          IsEnabled="{Binding AttractOptionsEnabled}">
                  <TextBlock
                      Text="{lex:Loc Key={x:Static loc:ResourceKeys.AttractModeOptions}}"/>
                  <CheckBox
                      Content="{lex:Loc Key={x:Static loc:ResourceKeys.EnableAttractCheckBoxText}}"
                      IsChecked="{Binding AttractEnabled, Mode=TwoWay}"
                      IsEnabled="{Binding Path=InputEnabled}"/>
                  <StackPanel x:Name="AttractModeButtons"
                              Orientation="Horizontal"
                              Margin="10 10 0 0"
                              IsEnabled="{Binding AttractEnabled}">
                      <Button x:Name="AttractModeCustomizeButton"
                              Content="{lex:Loc Key={x:Static loc:ResourceKeys.AttractModeCustomizeButtonText}}"
                              Command="{Binding AttractModeCustomizeCommand}"
                              IsEnabled="{Binding Path=InputEnabled}"/>
                      <Button x:Name="AttractModePreviewButton"
                              Content="{lex:Loc Key={x:Static loc:ResourceKeys.AttractModePreviewButtonText}}"
                              Command="{Binding AttractModePreviewCommand}"
                              IsEnabled="{Binding Path=InputEnabled}"/>
                  </StackPanel>
                </StackPanel>

                <!-- Game Censorship Options Section -->
                <TextBlock x:Name="GameCensorshipOptionsTextBlock"
                       Margin="0 30 0 0"
                       Text="{lex:Loc Key={x:Static loc:ResourceKeys.GameCensorshipOptions}}"
                       Visibility="{Binding Path=CensorshipEnforced, Converter={StaticResource BoolToVisConverter}}"/>

                <!-- Censor Violent Content Section -->
                <CheckBox x:Name="CensorViolentContentCheckBox"
                      Content="{lex:Loc Key={x:Static loc:ResourceKeys.CensorViolentContent}}"
                      IsChecked="{Binding CensorViolentContent}"
                      Visibility="{Binding Path=CensorshipEnforced, Converter={StaticResource BoolToVisConverter}}">
                    <CheckBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource BoolAndConverter}">
                            <Binding Path="EditableCensorship"/>
                            <Binding Path="InputEnabled"/>
                        </MultiBinding>
                    </CheckBox.IsEnabled>
                </CheckBox>

                <!-- Censor Drug Use Content Section -->
                <CheckBox x:Name="CensorDrugUseContentCheckBox"
                      Content="{lex:Loc Key={x:Static loc:ResourceKeys.CensorDrugUseContent}}"
                      IsChecked="{Binding CensorDrugUseContent}"
                      Visibility="{Binding Path=CensorshipEnforced, Converter={StaticResource BoolToVisConverter}}">
                    <CheckBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource BoolAndConverter}">
                            <Binding Path="EditableCensorship"/>
                            <Binding Path="InputEnabled"/>
                        </MultiBinding>
                    </CheckBox.IsEnabled>
                </CheckBox>

                <!-- Censor Sexual Content Section -->
                <CheckBox x:Name="CensorSexualContentCheckBox"
                      Content="{lex:Loc Key={x:Static loc:ResourceKeys.CensorSexualContent}}"
                      IsChecked="{Binding CensorSexualContent}"
                      Visibility="{Binding Path=CensorshipEnforced, Converter={StaticResource BoolToVisConverter}}">
                    <CheckBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource BoolAndConverter}">
                            <Binding Path="EditableCensorship"/>
                            <Binding Path="InputEnabled"/>
                        </MultiBinding>
                    </CheckBox.IsEnabled>
                </CheckBox>

                <!-- Censor Offensive Language Section -->
                <CheckBox x:Name="CensorOffensiveLanguageCheckBox"
                      Content="{lex:Loc Key={x:Static loc:ResourceKeys.CensorOffensiveLanguage}}"
                      IsChecked="{Binding CensorOffensiveContent}"
                      Visibility="{Binding Path=CensorshipEnforced, Converter={StaticResource BoolToVisConverter}}">
                    <CheckBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource BoolAndConverter}">
                            <Binding Path="EditableCensorship"/>
                            <Binding Path="InputEnabled"/>
                        </MultiBinding>
                    </CheckBox.IsEnabled>
                </CheckBox>

                <!-- Button Behavior Options Section -->
                <TextBlock x:Name="ButtonBehaviorOptionsTextBlock"
                       Margin="0 30 0 0"
                       Text="{lex:Loc Key={x:Static loc:ResourceKeys.ButtonBehaviorOptions}}"/>

                <!-- Button Continuous Play Section -->
                <StackPanel x:Name="ContinuousPlaySectionStackPanel" 
                        Orientation="Horizontal"
                        Visibility="Collapsed">
                    <CheckBox x:Name="ContinuousPlayCheckBox"
                          Content="{lex:Loc Key={x:Static loc:ResourceKeys.ButtonContinuousPlay}}"
                          IsChecked="{Binding IsButtonContinuousPlayChecked, Mode=TwoWay}">
                        <CheckBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolAndConverter}">
                                <Binding Path="IsButtonContinuousPlayConfigurable"/>
                                <Binding Path="FieldAccessEnabled"/>
                            </MultiBinding>
                        </CheckBox.IsEnabled>
                    </CheckBox>
                    <Button x:Name="ContinuousPlayInfoButton" 
                        Style="{StaticResource MonacoInfoButton}"
                        Margin="10 10 0 0"
                        Command="{Binding DataContext.ShowInfoPopupCommand, RelativeSource={RelativeSource AncestorType=StackPanel}}">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource MultiValueConverter}">
                                <Binding ElementName="ContinuousPlayCheckBox"/>
                                <Binding ElementName="ContinuousPlayButtonInfoProxy" Path="Result"/>
                            </MultiBinding>
                        </Button.CommandParameter>
                        <lex:LocProxy x:Name="ContinuousPlayButtonInfoProxy"
                                  Source="{x:Static loc:ResourceKeys.ButtonContinuousPlayButtonInfo}"/>
                    </Button>
                </StackPanel>

                <!-- Game Round Time Settings Section -->
                <StackPanel x:Name="GameRoundTimeSettingStackPanel"
                            Orientation="Horizontal">
                    <Label x:Name="GameRoundTimeSettingLabel"
                           Margin="0 10 20 0"
                           Content="{lex:Loc Key={x:Static loc:ResourceKeys.GameRoundTimeSettingLabel}}"
                           VerticalAlignment="Center"/>
                    <xctk:IntegerUpDown Minimum="{Binding MinimumGameRoundDuration}"
                                        Maximum="{Binding MaximumGameRoundDuration}"
                                        Increment="100"
                                        FontSize="14"
                                        Width="130"
                                        Style="{StaticResource MonacoIntegerUpDown}"
                                        Value="{Binding GameRoundDurationMs, Mode=TwoWay}"
                                        IsEnabled="{Binding Path=InputEnabled}"/>
                </StackPanel>

                <!-- Double Tap Force Reel Stop Section -->
                <StackPanel x:Name="DoubleTapForceReelStopSectionStackPanel" 
                        Orientation="Horizontal">
                    <CheckBox x:Name="DoubleTapReelStopCheckBox"
                          Content="{lex:Loc Key={x:Static loc:ResourceKeys.DoubleTapForcesGameRoundStop}}"
                          IsChecked="{Binding IsDoubleTapForceReelStopChecked, Mode=TwoWay}">
                        <CheckBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolAndConverter}">
                                <Binding Path="SlotOptionsEnabled"/>
                                <Binding Path="FieldAccessEnabled"/>
                            </MultiBinding>
                        </CheckBox.IsEnabled>
                    </CheckBox>
                    <Button x:Name="DoubleTapForceInfoButton" 
                        Style="{StaticResource MonacoInfoButton}"
                        Margin="10 10 0 0"
                        Command="{Binding DataContext.ShowInfoPopupCommand, RelativeSource={RelativeSource AncestorType=StackPanel}}">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource MultiValueConverter}">
                                <Binding ElementName="DoubleTapReelStopCheckBox"/>
                                <Binding ElementName="DoubleTapForceReelStopProxy" Path="Result"/>
                            </MultiBinding>
                        </Button.CommandParameter>
                        <lex:LocProxy x:Name="DoubleTapForceReelStopProxy" 
                                  Source="{x:Static loc:ResourceKeys.DoubleTapForcesGameRoundStopButtonInfo}"/>
                    </Button>
                </StackPanel>

                <!--Game Start Method Section -->
                <StackPanel x:Name="GameStartMethodSectionStackPanel"
                        Visibility="{Binding IsGameStartMethodSettingVisible, Converter={StaticResource BoolToVisConverter}}"
                        Orientation="Vertical"
                        Margin="0 5 0 15">
                    <Label x:Name="GameStartMethodLabel"
                       Margin="0 10 0 0"
                       VerticalAlignment="Bottom"
                       Content="{lex:Loc Key={x:Static loc:ResourceKeys.GameStartMethod}}"/>
                    <ComboBox x:Name="GameStartMethodComboBox"
                          HorizontalAlignment="Left"
                          DisplayMemberPath="Description"
                          SelectedValuePath="Value"
                          Width="240"
                          ItemsSource="{Binding GameStartMethods}"
                          SelectedValue="{Binding GameStartMethod, Mode=TwoWay}">
                        <ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolAndConverter}">
                                <Binding Path="IsGameStartMethodConfigurable"/>
                                <Binding Path="FieldAccessEnabled"/>
                            </MultiBinding>
                        </ComboBox.IsEnabled>
                    </ComboBox>
                </StackPanel>

                <!-- Show Program Options Section -->
                <TextBlock x:Name="ShowProgramOptionsTextBlock"
                           Margin="0 30 0 0"
                           Text="{lex:Loc Key={x:Static loc:ResourceKeys.ShowProgramOptionsLabel}}"
                           Visibility="{Binding Path=DemoModeEnabled, Converter={StaticResource BoolToVisConverter}}"/> 

                <!-- Enable Show Program PIN Section -->
                <CheckBox x:Name="ShowProgramPinRequiredCheckBox"
                          Content="{lex:Loc Key={x:Static loc:ResourceKeys.ShowProgramEnableShowProgramPin}}" 
                          IsChecked="{Binding ShowProgramPinRequired}"
                          Visibility="{Binding Path=DemoModeEnabled, Converter={StaticResource BoolToVisConverter}}">
                    <CheckBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource BoolAndConverter}">
                            <Binding Path="FieldAccessEnabled"/>
                            <Binding Path="IsShowProgramPinConfigurable"/>
                        </MultiBinding>
                    </CheckBox.IsEnabled>
                </CheckBox>

                <!-- Show Program Pin Section -->
                <StackPanel x:Name="ShowProgramPinStackPanel"
                            Orientation="Horizontal"
                            Margin="5 15 0 0"
                            Visibility="{Binding Path=DemoModeEnabled, Converter={StaticResource BoolToVisConverter}}">
                    <TextBox x:Name="ShowProgramPinTextBox"
                              HorizontalAlignment="Left"
                              PreviewTextInput="PreviewShowProgramPinInput"
                              MaxLength="4"
                              Width="80"
                              Text="{Binding ShowProgramPin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}">
                        <TextBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolAndConverter}">
                                <Binding Path="ShowProgramPinRequired"/>
                                <Binding Path="FieldAccessEnabled"/>
                                <Binding Path="IsShowProgramPinConfigurable"/>
                            </MultiBinding>
                        </TextBox.IsEnabled>
                    </TextBox>
                    <Label x:Name="ShowProgramPinLabel"
                           Margin="5 5 0 0"
                           VerticalAlignment="Center"
                           Content="{lex:Loc Key={x:Static loc:ResourceKeys.ShowProgramPin}}"/>
                </StackPanel>

                <!-- Show Program Enable Reset Credits Section -->
                <CheckBox x:Name="ShowProgramEnableResetCreditsCheckBox"
                          Content="{lex:Loc Key={x:Static loc:ResourceKeys.ShowProgramEnableResetCredits}}"
                          IsChecked="{Binding ShowProgramEnableResetCredits}"
                          IsEnabled="{Binding FieldAccessEnabled}" 
                          Visibility="{Binding Path=DemoModeEnabled, Converter={StaticResource BoolToVisConverter}}"/>
            </StackPanel>

            <!-- Middle Grid Section -->
            <StackPanel Orientation="Vertical"
                        Grid.Column="2"
                        Grid.Row="0">

                <!-- Game UI / Lobby Options Section -->
                <TextBlock x:Name="LobbyOptionsTextBlock"
                       Text="{lex:Loc Key={x:Static loc:ResourceKeys.GameUILobbyOptions}}"/>

                <!-- Volume Control Location Section -->
                <StackPanel Orientation="Horizontal"
                            Margin="0 5 0 0">
                    <ComboBox HorizontalAlignment="Left"
                              ItemsSource="{Binding VolumeControlLocationOptions}"
                              SelectedValue="{Binding VolumeControlLocation, Mode=TwoWay}"
                              DisplayMemberPath="Description"
                              SelectedValuePath="Value"
                              IsEnabled="{Binding Path=InputEnabled}"/>
                    <Label Margin="5 5 0 0"
                           VerticalAlignment="Center"
                           Content="{lex:Loc Key={x:Static loc:ResourceKeys.VolumeControlLocationTitle}}"/>
                </StackPanel>

                <!-- Show Service Section -->
                <CheckBox x:Name="ShowServiceCheckBox"
                      Content="{lex:Loc Key={x:Static loc:ResourceKeys.ShowService}}" 
                      IsChecked="{Binding ShowServiceButton}"
                      IsEnabled="{Binding Path=InputEnabled}"/>

                <!-- Show Top Picks Banners -->
                <CheckBox x:Name="ShowTopPickBannersCheckBox"
                      Content="{lex:Loc Key={x:Static loc:ResourceKeys.ShowTopPickBanners}}" 
                      Visibility="{Binding ShowTopPickBannersVisible, Converter={StaticResource BoolToVisConverter}}"
                      IsChecked="{Binding ShowTopPickBanners}"
                      IsEnabled="{Binding Path=InputEnabled}"/>

                <!-- Lobby Volume Section -->
                <StackPanel x:Name="LobbyVolumeStackPanel"
                        Orientation="Horizontal"
                        Margin="0 5 0 0">
                    <ComboBox x:Name="LobbyVolumeComboBox"
                          HorizontalAlignment="Left"
                          DisplayMemberPath="Description"
                          SelectedValuePath="Value"
                          Width="80"
                          ItemsSource="{helpers:Enumeration {x:Type audio:VolumeScalar}}"
                          SelectedValue="{Binding LobbyVolumeScalar}"
                          IsEnabled="{Binding Path=InputEnabled}"/>
                    <Label x:Name="LobbyVolumeLevelLabel"
                       Margin="5 5 0 0"
                       VerticalAlignment="Center"
                       Content="{lex:Loc Key={x:Static loc:ResourceKeys.RelativeVolume}}"/>
                </StackPanel>

                <!-- Enable once lobby work is done -->
                <StackPanel Orientation="Horizontal"
                            Visibility="{Binding ProgressiveOptionsVisible, Converter={StaticResource BoolToVisConverter}}"
                            Margin="0 5 0 0">
                    <ComboBox HorizontalAlignment="Left"
                              DisplayMemberPath="Description"
                              SelectedValuePath="Value"
                              ItemsSource="{Binding ProgressLobbyIndicatorOptions}" 
                              SelectedValue="{Binding ProgressiveIndicator, Mode=TwoWay}">
                        <ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolAndConverter}">
                                <Binding Path="ProgressiveOptionsEnabled"/>
                                <Binding Path="InputEnabled"/>
                            </MultiBinding>
                        </ComboBox.IsEnabled>
                    </ComboBox>
                    <Label Margin="5 5 0 0"
                           VerticalAlignment="Center"
                           Content="{lex:Loc Key={x:Static loc:ResourceKeys.ProgressiveLobbyIndicatorSelection}}"/>
                </StackPanel>

                <!-- Slot Game Options Section -->
                <TextBlock x:Name="SlotGameOptionsTextBlock"
                           Margin="0 30 0 0"
                           Text="{lex:Loc Key={x:Static loc:ResourceKeys.SlotGamesOptions}}"/>

                <!-- Slot Enable Auto Play Section -->
                <CheckBox x:Name="SlotEnableAutoPlayCheckBox"
                      Content="{lex:Loc Key={x:Static loc:ResourceKeys.EnableAutoPlay}}" 
                      IsChecked="{Binding SlotEnableAutoPlay}">
                    <CheckBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource BoolAndConverter}">
                            <Binding Path="SlotAllowedAutoPlay"/>
                            <Binding Path="InputEnabled"/>
                        </MultiBinding>
                    </CheckBox.IsEnabled>
                </CheckBox>

                <!-- Slot Volume Level Section -->
                <StackPanel x:Name="SlotVolumeLevelStackPanel"
                        Orientation="Horizontal"
                        Margin="0 5 0 0">
                    <ComboBox x:Name="SlotVolumeLevelComboBox"
                          HorizontalAlignment="Left"
                          DisplayMemberPath="Description"
                          SelectedValuePath="Value"
                          Width="80"
                          SelectedValue="{Binding SlotVolumeScalar}"
                          ItemsSource="{helpers:Enumeration {x:Type audio:VolumeScalar}}">
                        <ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolAndConverter}">
                                <Binding Path="SlotOptionsEnabled"/>
                                <Binding Path="InputEnabled"/>
                            </MultiBinding>
                        </ComboBox.IsEnabled>
                    </ComboBox>
                    <Label x:Name="SlotVolumeLevelLabel"
                       Margin="5 5 0 0"
                       VerticalAlignment="Center"
                       Content="{lex:Loc Key={x:Static loc:ResourceKeys.RelativeVolume}}"/>
                </StackPanel>

                <!-- Keno Games Option Section -->
                <TextBlock x:Name="KenoGamesTextBlock" 
                           Margin="0 30 0 0"
                           Text="{lex:Loc Key={x:Static loc:ResourceKeys.KenoGamesOptions}}"/>

                <!-- Keno Enable Auto Play Section -->
                <CheckBox x:Name="KenoEnableAutoPlayCheckBox"
                      Content="{lex:Loc Key={x:Static loc:ResourceKeys.EnableAutoPlay}}" 
                      IsChecked="{Binding KenoEnableAutoPlay}">
                    <CheckBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource BoolAndConverter}">
                            <Binding Path="KenoAllowedAutoPlay"/>
                            <Binding Path="InputEnabled"/>
                        </MultiBinding>
                    </CheckBox.IsEnabled>
                </CheckBox>

                <!-- Keno Show Player Speed Section -->
                <CheckBox x:Name="KenoShowPlayerSpeedCheckBox"
                      Content="{lex:Loc Key={x:Static loc:ResourceKeys.ShowPlayerSpeedButton}}" 
                      IsChecked="{Binding KenoShowPlayerSpeedButton}">
                    <CheckBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource BoolAndConverter}">
                            <Binding Path="KenoOptionsEnabled"/>
                            <Binding Path="InputEnabled"/>
                            <Binding Path="KenoPlayerSpeedButtonEnabled" />
                        </MultiBinding>
                    </CheckBox.IsEnabled>
                </CheckBox>

                <!-- Keno Speed Level Section -->
                <StackPanel x:Name="KenoSpeedLevelStackPanel"
                        Orientation="Horizontal"
                        Margin="0 5 0 0">
                    <ComboBox x:Name="KenoSpeedLevelComboBox"
                         HorizontalAlignment="Left"
                         Width="80"
                         ItemsSource="{Binding GameSpeed}"
                         SelectedItem="{Binding KenoSpeedLevel, Mode=TwoWay}">
                        <ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolAndConverter}">
                                <Binding Path="KenoOptionsEnabled"/>
                                <Binding Path="InputEnabled"/>
                            </MultiBinding>
                        </ComboBox.IsEnabled>
                    </ComboBox>
                    <Label x:Name="KenoSpeedLevelLabel"
                       Margin="5 5 0 0"
                       VerticalAlignment="Center"
                       Content="{lex:Loc Key={x:Static loc:ResourceKeys.SpeedLevel}}"/>
                </StackPanel>

                <!-- Keno Default Player Speed Section -->
                <StackPanel x:Name="KenoDefaultPlaySpeedStackPanel"
                        Orientation="Horizontal"
                        Margin="0 5 0 0">
                    <ComboBox x:Name="KenoDefaultSpeedLevelComboBox"
                          HorizontalAlignment="Left"
                          Width="80"
                          ItemsSource="{Binding DefaultPlaySpeed}"
                          SelectedItem="{Binding KenoDefaultSpeedLevel, Mode=TwoWay}">
                        <ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolAndConverter}">
                                <Binding Path="KenoOptionsEnabled"/>
                                <Binding Path="InputEnabled"/>
                            </MultiBinding>
                        </ComboBox.IsEnabled>
                    </ComboBox>
                    <Label x:Name="KenoDefaultPlayerSpeedLabel"
                       Margin="5 5 0 0"
                       VerticalAlignment="Center"
                       Content="{lex:Loc Key={x:Static loc:ResourceKeys.DefaultPlayerSpeed}}"/>
                </StackPanel>

                <!-- Keno Volume Section -->
                <StackPanel x:Name="KenoVolumeStackPanel"
                        Orientation="Horizontal"
                        Margin="0 5 0 0">
                    <ComboBox x:Name="KenoVolumeComboBox"
                        HorizontalAlignment="Left"
                        DisplayMemberPath="Description"
                        SelectedValuePath="Value"
                        Width="80"
                        ItemsSource="{helpers:Enumeration {x:Type audio:VolumeScalar}}"
                        SelectedValue="{Binding KenoVolumeScalar}">
                        <ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolAndConverter}">
                                <Binding Path="KenoOptionsEnabled"/>
                                <Binding Path="InputEnabled"/>
                            </MultiBinding>
                        </ComboBox.IsEnabled>
                    </ComboBox>
                    <Label x:Name="KenoVolumeLabel"
                       Margin="5 5 0 0"
                       VerticalAlignment="Center"
                       Content="{lex:Loc Key={x:Static loc:ResourceKeys.RelativeVolume}}"/>
                </StackPanel>
            </StackPanel>

            <!-- Right Side Grid Section -->
            <StackPanel Orientation="Vertical"
                        Grid.Column="4"
                        Grid.Row="0">

                <!-- Poker Game Options Section -->
                <TextBlock x:Name="PokerGameOptionsTextBlock"
                       Text="{lex:Loc Key={x:Static loc:ResourceKeys.PokerGamesOptions}}"/>

                <!-- Poker Enable Auto Hold Section -->
                <CheckBox x:Name="PokerEnableAutoHoldCheckBox"
                      Content="{lex:Loc Key={x:Static loc:ResourceKeys.EnableAutoHold}}" 
                      IsChecked="{Binding PokerEnableAutoHold}">
                    <CheckBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource BoolAndConverter}">
                            <Binding Path="AutoHoldConfigurable"/>
                            <Binding Path="LogicDoorEnabled"/>
                            <Binding Path="InputEnabled"/>
                        </MultiBinding>
                    </CheckBox.IsEnabled>
                </CheckBox>

                <!-- Poker Show Player Speed Section -->
                <CheckBox x:Name="PokerShowPlayerSpeedCheckBox"
                      Content="{lex:Loc Key={x:Static loc:ResourceKeys.ShowPlayerSpeedButton}}" 
                      IsChecked="{Binding PokerShowPlayerSpeedButton}">
                    <CheckBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource BoolAndConverter}">
                            <Binding Path="PokerOptionsEnabled"/>
                            <Binding Path="InputEnabled"/>
                            <Binding Path="PokerPlayerSpeedButtonEnabled" />
                        </MultiBinding>
                    </CheckBox.IsEnabled>
                </CheckBox>

                <!-- Poker Speed Level Section -->
                <StackPanel x:Name="PokerSpeedLevelStackPanel"
                        Orientation="Horizontal"
                        Margin="0 5 0 0">
                    <ComboBox x:Name="PokerSpeedLevelComboBox"
                          HorizontalAlignment="Center"
                          Width="80"
                          ItemsSource="{Binding GameSpeed}"
                          SelectedItem="{Binding PokerSpeedLevel, Mode=TwoWay}">
                        <ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolAndConverter}">
                                <Binding Path="PokerOptionsEnabled"/>
                                <Binding Path="InputEnabled"/>
                            </MultiBinding>
                        </ComboBox.IsEnabled>
                    </ComboBox>
                    <Label x:Name="PokerSpeedLevelLabel"
                       Margin="5 5 0 0"
                       VerticalAlignment="Center"
                       Content="{lex:Loc Key={x:Static loc:ResourceKeys.SpeedLevel}}"/>
                </StackPanel>

                <!-- Poker Default Player Speed Section -->
                <StackPanel x:Name="PokerDefaultPlayerSpeedStackPanel"
                        Orientation="Horizontal"
                        Margin="0 5 0 0">
                    <ComboBox x:Name="PokerDefaultPlayerSpeedComboBox" 
                          HorizontalAlignment="Center"
                          Width="80"
                          ItemsSource="{Binding DefaultPlaySpeed}"
                          SelectedItem="{Binding PokerDefaultSpeedLevel, Mode=TwoWay}">
                        <ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolAndConverter}">
                                <Binding Path="PokerOptionsEnabled"/>
                                <Binding Path="InputEnabled"/>
                            </MultiBinding>
                        </ComboBox.IsEnabled>
                    </ComboBox>

                    <Label x:Name="PokerDefaultPlayerSpeedLabel" 
                       Margin="5 5 0 0"
                       VerticalAlignment="Center"
                       Content="{lex:Loc Key={x:Static loc:ResourceKeys.DefaultPlayerSpeed}}"/>
                </StackPanel>

                <!-- Poker Volume Level Section -->
                <StackPanel x:Name="PokerVolumeLevelStackPanel"
                        Orientation="Horizontal"
                        Margin="0 5 0 0">
                    <ComboBox x:Name="PokerVolumeLevelComboBox"
                          HorizontalAlignment="Left"
                          DisplayMemberPath="Description"
                          SelectedValuePath="Value"
                          Width="80"
                          ItemsSource="{helpers:Enumeration {x:Type audio:VolumeScalar}}"
                          SelectedValue="{Binding PokerVolumeScalar}">
                        <ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolAndConverter}">
                                <Binding Path="PokerOptionsEnabled"/>
                                <Binding Path="InputEnabled"/>
                            </MultiBinding>
                        </ComboBox.IsEnabled>
                    </ComboBox>

                    <Label x:Name="PokerVolumeLevelLabel"
                       Margin="5 5 0 0"
                       VerticalAlignment="Center"
                       Content="{lex:Loc Key={x:Static loc:ResourceKeys.RelativeVolume}}"/>
                </StackPanel>

                <!-- Poker Background color Section -->
                <StackPanel x:Name="PokerBackgroundColorStackPanel"
                            Orientation="Vertical"
                            Margin="0 5 0 15">
                    <StackPanel Orientation="Horizontal">
                        <ComboBox x:Name="PokerBackgroundColorComboBox" 
                                  HorizontalAlignment="Left"
                                  ItemsSource="{Binding PokerBackgroundColors}"
                                  SelectedItem="{Binding PokerBackgroundColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ComboBox.IsEnabled>
                                <MultiBinding Converter="{StaticResource BoolAndConverter}">
                                    <Binding Path="PokerOptionsEnabled"/>
                                    <Binding Path="InputEnabled"/>
                                </MultiBinding>
                            </ComboBox.IsEnabled>
                        </ComboBox>

                        <Label x:Name="PokerColorLabel"
                               Margin="5 5 0 0"
                               VerticalAlignment="Center"
                               Content="{lex:Loc Key={x:Static loc:ResourceKeys.BackgroundColor}}"/>
                    </StackPanel>
                    <Button Margin="10 10 0 10" HorizontalAlignment="Right" IsEnabled="{Binding BackgroundPreviewAvailable}"
                            Content="{lex:Loc Key={x:Static loc:ResourceKeys.AttractModePreviewButtonText}}" Command="{Binding PreviewBackgroundCommand}" />
                </StackPanel>

                <!-- Blackjack Game Options Section -->
                <TextBlock x:Name="BlackjackGameOptionsTextBlock" 
                           Margin="0 30 0 0"
                           Text="{lex:Loc Key={x:Static loc:ResourceKeys.BlackjackGamesOptions}}"/>

                <!-- Blackjack Volume Level Section -->
                <StackPanel x:Name="BlackjackVolumeLevelStackPanel"
                        Orientation="Horizontal"
                        Margin="0 5 0 0">
                    <ComboBox x:Name="BlackjackVolumeLevelComboBox"
                          HorizontalAlignment="Left"
                          DisplayMemberPath="Description"
                          SelectedValuePath="Value"
                          Width="80"
                          ItemsSource="{helpers:Enumeration {x:Type audio:VolumeScalar}}"
                          SelectedValue="{Binding BlackjackVolumeScalar}">
                        <ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolAndConverter}">
                                <Binding Path="BlackjackOptionsEnabled"/>
                                <Binding Path="InputEnabled"/>
                            </MultiBinding>
                        </ComboBox.IsEnabled>
                    </ComboBox>

                    <Label x:Name="BlackjackVolumeLevelLabel"
                       Margin="5 5 0 0"
                       VerticalAlignment="Center"
                       Content="{lex:Loc Key={x:Static loc:ResourceKeys.RelativeVolume}}"/>
                </StackPanel>

                <!-- Roulette Game Options Section -->
                <TextBlock x:Name="RouletteGameOptionsTextBlock" 
                           Margin="0 30 0 0"
                           Text="{lex:Loc Key={x:Static loc:ResourceKeys.RouletteGamesOptions}}"/>

                <!-- Roulette Volume Level Section -->
                <StackPanel x:Name="RouletteVolumeLevelStackPanel"
                            Orientation="Horizontal" 
                            Margin="0 5 0 0">
                    <ComboBox x:Name="RouletteVolumeLevelComboBox" 
                              HorizontalAlignment="Left" 
                              DisplayMemberPath="Description"
                              SelectedValuePath="Value"
                              Width="80"
                              ItemsSource="{helpers:Enumeration {x:Type audio:VolumeScalar}}"
                              SelectedValue="{Binding RouletteVolumeScalar}">
                        <ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolAndConverter}">
                                <Binding Path="RouletteOptionsEnabled"/>
                                <Binding Path="InputEnabled"/>
                            </MultiBinding>
                        </ComboBox.IsEnabled>
                    </ComboBox>
                    <Label x:Name="RouletteVolumeLevelLabel" 
                           Margin="5 5 0 0" 
                           VerticalAlignment="Center" 
                           Content="{lex:Loc Key={x:Static loc:ResourceKeys.RelativeVolume}}"/>
                </StackPanel>
            </StackPanel>

            <!-- Change Game Lobby Layout Section -->
            <Button x:Name="ChangeGameLobbyLayoutButton" 
                Grid.Column="4" 
                Grid.Row="3" 
                Content="{lex:Loc Key={x:Static loc:ResourceKeys.ChangeGameLobbyLayout}}"
                HorizontalAlignment="Left" 
                Margin="5"
                Visibility="Hidden"
                Command="{Binding ChangeGameLobbyLayoutCommand}"/>
        </Grid>
    </ScrollViewer>
</operatorMenu:OperatorMenuPage>

