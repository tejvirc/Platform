<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Aristocrat.Monaco.Gaming.UI.Converters"
                    xmlns:commonConverters="http://monaco.aristocrat.com/common"
                    xmlns:uicommon="clr-namespace:Aristocrat.Monaco.UI.Common;assembly=Aristocrat.Monaco.UI.Common"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Gaming.UI.ViewModels"
                    xmlns:controls="clr-namespace:Aristocrat.Monaco.Gaming.UI.Views.Controls"
                    xmlns:common="http://monaco.aristocrat.com/common"
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <!-- Accent and AppTheme setting -->
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
        <ResourceDictionary Source="../../Skins/Styles.xaml" />
        <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:IntToBoolConverter x:Key="IntToBool"/>
    <converters:EnumToBoolConverter x:Key="EnumToBool"/>
    <commonConverters:InverseBooleanConverter x:Key="InverseBoolConverter"/>
    <converters:IndexToVisibilityConverter x:Key="IndexConverter" />
    <commonConverters:CollectionConverter x:Key="CollectionConverter" />
     
    <system:Int32 x:Key="AllDenom">-1</system:Int32>
    <system:Int32 x:Key="DenomA">1</system:Int32>
    <system:Int32 x:Key="DenomB">5</system:Int32>
    <system:Int32 x:Key="DenomC">25</system:Int32>

    <DataTemplate x:Key="NevadaUpiTemplate" DataType="{x:Type viewModels:LobbyViewModel}">
        <Grid Width="1881">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="317"/>
                <ColumnDefinition Width="296"/>
                <ColumnDefinition Width="164"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Image Grid.ColumnSpan="4" Grid.Column="0" Source="{DynamicResource UpiBackground}"/>

            <Button x:Name="btnCashOut"
                Grid.Column="0"
                Margin="45 0 25 0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                IsEnabled="{Binding Path=CashOutEnabled}"
                Command="{Binding Path=CashOutCommand}"
                Style="{StaticResource stlFlatButton}">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Image Name="cashOutImage" Source="{DynamicResource CashOutNormal}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="cashOutImage" Property="Source" Value="{DynamicResource CashOutDisabled}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <Label 
                Grid.Column="1" 
                Content="{Binding FormattedCredits}" 
                Margin="0 10 0 0"
                FontSize="44" 
                FontFamily="Impact" 
                Foreground="White"
                HorizontalContentAlignment="Center"
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Center">
            </Label>
            <Label 
                Grid.Column="2" 
                Content="{Binding ClockTimer.CurrentTime}" 
                Margin="0 30 4 0" 
                FontSize="28" 
                Foreground="Gold" 
                HorizontalContentAlignment="Center" 
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Center">
            </Label>

            <StackPanel Name="DenomPanel" Grid.Column="3" Orientation="Horizontal" 
                    Margin="24 15 0 15" HorizontalAlignment="Left"
                    >
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                         Margin="0 0 10 0" IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource AllDenom}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="AllDenomImage" Source="{DynamicResource AllDenomOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="AllDenomImage" Property="Source" Value="{DynamicResource AllDenomOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>

                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                         Margin="0 0 10 0" IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource DenomA}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="DenomAImage" Source="{DynamicResource Denom1CentOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="DenomAImage" Property="Source" Value="{DynamicResource Denom1CentOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                         Margin="0 0 10 0" IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource DenomB}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="DenomBImage" Source="{DynamicResource Denom5CentOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="DenomBImage" Property="Source" Value="{DynamicResource Denom5CentOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                         IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource DenomC}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="DenomCImage" Source="{DynamicResource Denom25CentOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="DenomCImage" Property="Source" Value="{DynamicResource Denom25CentOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ManitobaUpiTemplate" DataType="{x:Type viewModels:LobbyViewModel}">
        <Grid x:Name="UpiGrid" Width="1881">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width=".102*"/>
                <ColumnDefinition Width=".142*"/>
                <ColumnDefinition Width=".168*"/>
                <ColumnDefinition Width=".419*"/>
                <ColumnDefinition Width=".168*"/>
            </Grid.ColumnDefinitions>
            <Image Grid.ColumnSpan="5" Grid.Column="0" Source="{DynamicResource UpiBackground}"/>

            <Grid Grid.Column="0" Margin="0 30 0 0">
                <Label Grid.Column="0" Content="{Binding ClockTimer.CurrentTime}" FontSize="28" Foreground="Gold" HorizontalAlignment="Center" VerticalAlignment="Center"
                       Visibility="{Binding ClockTimer.IsSessionOverLabelVisible, Converter={StaticResource TrueCollapsedFalseVisible}}" />
                <Image Grid.Column="0" Source="{DynamicResource SessionOverLabel}" Stretch="None" Margin="0 10 0 0" HorizontalAlignment="Center" VerticalAlignment="Center"
                       Visibility="{Binding ClockTimer.IsSessionOverLabelVisible, Converter={StaticResource TrueVisibleFalseCollapsed}}" />
            </Grid>

            <Image Grid.Column="0" uicommon:ImageHelper.SourceResourceKey="{Binding ClockTimer.TimeLabelResourceKey}" Stretch="None" Margin="0 53 0 0" HorizontalAlignment="Center" VerticalAlignment="Top"/>
            <Rectangle Grid.Column="0" Fill="Transparent" Width="148" Height="70" Margin="1 35 0 0" RadiusX="20" RadiusY="20" controls:MouseEvents.MouseDown="{Binding ClockSwitchCommand}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <Label Grid.Column="1" Content="{Binding FormattedCredits}" Margin="0 10 0 0" FontSize="44" FontFamily="Impact" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" />

            <ContentControl x:Name="CashOutWrapper" Grid.Column="2" controls:MouseEvents.MouseDown="{Binding CashOutWrapperMouseDownCommand}">
                <Button x:Name="btnCashOut"
                        Margin="38 0 24 0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        IsEnabled="{Binding Path=CashOutEnabled}"
                        Command="{Binding Path=CashOutCommand}"
                        Style="{StaticResource stlFlatButton}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Image Name="cashOutImage" Source="{DynamicResource CashOutNormal}"/>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding ElementName=btnCashOut, Path=IsEnabled}" Value="False">
                                    <Setter TargetName="cashOutImage" Property="Source" Value="{DynamicResource CashOutDisabled}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </ContentControl>

            <StackPanel x:Name="DenomPanel" Grid.Column="3" Orientation="Horizontal" 
                        Margin="15" HorizontalAlignment="Center" controls:MouseEvents.PreviewMouseDown="{Binding UpiPreviewMouseDownCommand}">
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                             Margin="0 0 10 0" 
                             Command="{Binding Path=DenomFilterPressedCommand}"
                             IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource AllDenom}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="AllDenomImage" Source="{DynamicResource AllDenomOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="AllDenomImage" Property="Source" Value="{DynamicResource AllDenomOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                             Command="{Binding Path=DenomFilterPressedCommand}"
                             Margin="0 0 10 0" IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource DenomB}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="DenomBImage" Source="{DynamicResource Denom5CentOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="DenomBImage" Property="Source" Value="{DynamicResource Denom5CentOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                             Command="{Binding Path=DenomFilterPressedCommand}"
                             IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource DenomC}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="DenomCImage" Source="{DynamicResource Denom25CentOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="DenomCImage" Property="Source" Value="{DynamicResource Denom25CentOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
            </StackPanel>

            <ContentControl x:Name="LearnAboutVltWrapper" Grid.Column="4" controls:MouseEvents.MouseDown="{Binding CashOutWrapperMouseDownCommand}">
                <Button x:Name="btnLearnAboutVlt"
                        Margin="20 0 37 0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        IsEnabled="True" 
                        Command="{Binding Path=ResponsibleGamingDialogOpenCommand}"
                        Style="{StaticResource stlFlatButton}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Image Name="learnAboutVltImage" Source="{DynamicResource LearnAboutVltNormal}"/>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding ElementName=btnLearnAboutVlt, Path=IsEnabled}" Value="False">
                                    <Setter TargetName="learnAboutVltImage" Property="Source" Value="{DynamicResource LearnAboutVltDisabled}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </ContentControl>

        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="OregonUpiTemplate" DataType="{x:Type viewModels:LobbyViewModel}">
        <Grid x:Name="UpiGrid" Width="1881">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width=".102*"/>
                <ColumnDefinition Width=".160*"/>
                <ColumnDefinition Width=".171*"/>
                <ColumnDefinition Width=".566*"/>
            </Grid.ColumnDefinitions>
            <Image Grid.ColumnSpan="4" Grid.Column="0" Source="{DynamicResource UpiBackground}"/>

            <Grid Grid.Column="0" Margin="0 30 0 0">
                <Label Grid.Column="0" Content="{Binding ClockTimer.CurrentTime}" FontSize="28" Foreground="Gold" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Image Grid.Column="0" Source="{DynamicResource SessionOverLabel}" Stretch="None" Margin="0 10 0 0" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
            <Image Grid.Column="0" uicommon:ImageHelper.SourceResourceKey="{Binding ClockTimer.TimeLabelResourceKey}" Stretch="None" Margin="0 53 0 0" HorizontalAlignment="Center" VerticalAlignment="Top"/>

            <ContentControl x:Name="BankWrapper" Grid.Column="1"
                            controls:MouseEvents.MouseDown="{Binding AddCreditsCommand}">
                <Label Content="{Binding FormattedCredits}" Margin="0 10 0 0" FontSize="44"
                       FontFamily="Impact" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </ContentControl>

            <ContentControl x:Name="CashOutWrapper" Grid.Column="2" controls:MouseEvents.MouseDown="{Binding CashOutWrapperMouseDownCommand}">
                <Button x:Name="btnCashOut"
                        Margin="38 0 24 0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        IsEnabled="{Binding Path=CashOutEnabled}"
                        Command="{Binding Path=CashOutCommand}"
                        Style="{StaticResource stlFlatButton}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Image Name="cashOutImage" Source="{DynamicResource CashOutNormal}"/>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding ElementName=btnCashOut, Path=IsEnabled}" Value="False">
                                    <Setter TargetName="cashOutImage" Property="Source" Value="{DynamicResource CashOutDisabled}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </ContentControl>

            <StackPanel x:Name="DenomPanel" Grid.Column="3" Orientation="Horizontal" 
                        Margin="15" HorizontalAlignment="Center" controls:MouseEvents.PreviewMouseDown="{Binding UpiPreviewMouseDownCommand}">
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                             Margin="0 0 10 0" 
                             Command="{Binding Path=DenomFilterPressedCommand}"
                             IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource AllDenom}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="AllDenomImage" Source="{DynamicResource AllDenomOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="AllDenomImage" Property="Source" Value="{DynamicResource AllDenomOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                             Command="{Binding Path=DenomFilterPressedCommand}"
                             Margin="0 0 10 0" IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource DenomA}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="DenomAImage" Source="{DynamicResource Denom1CentOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="DenomAImage" Property="Source" Value="{DynamicResource Denom1CentOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                             Command="{Binding Path=DenomFilterPressedCommand}"
                             Margin="0 0 10 0" IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource DenomB}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="DenomBImage" Source="{DynamicResource Denom5CentOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="DenomBImage" Property="Source" Value="{DynamicResource Denom5CentOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                             Command="{Binding Path=DenomFilterPressedCommand}"
                             IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource DenomC}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="DenomCImage" Source="{DynamicResource Denom25CentOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="DenomCImage" Property="Source" Value="{DynamicResource Denom25CentOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
            </StackPanel>

        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="IllinoisUpiTemplate" DataType="{x:Type viewModels:LobbyViewModel}">
        <Grid x:Name="UpiGrid" Width="1881">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width=".103*"/>
                <ColumnDefinition Width=".142*"/>
                <ColumnDefinition Width=".175*"/>
                <ColumnDefinition Width=".579*"/>
            </Grid.ColumnDefinitions>
            <Image Grid.ColumnSpan="4" Grid.Column="0" Source="{DynamicResource UpiBackground}"/>

            <Label Grid.Column="1" Content="{Binding FormattedCredits}" Margin="0 10 0 0" FontSize="44" FontFamily="Impact" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" />

            <ContentControl x:Name="CashOutWrapper" Grid.Column="2" controls:MouseEvents.MouseDown="{Binding CashOutWrapperMouseDownCommand}">
                <Button x:Name="btnCashOut"
                        Margin="35,0,35,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        IsEnabled="{Binding Path=CashOutEnabled}"
                        Command="{Binding Path=CashOutCommand}"
                        Style="{StaticResource stlFlatButton}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Image Name="cashOutImage" Source="{DynamicResource CashOutNormal}"/>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding ElementName=btnCashOut, Path=IsEnabled}" Value="False">
                                    <Setter TargetName="cashOutImage" Property="Source" Value="{DynamicResource CashOutDisabled}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </ContentControl>

            <StackPanel x:Name="DenomPanel" Grid.Column="3" Orientation="Horizontal" 
                        Margin="0,15,27,15" HorizontalAlignment="Center" controls:MouseEvents.PreviewMouseDown="{Binding UpiPreviewMouseDownCommand}">
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                             Margin="0 0 10 0" 
                             Command="{Binding Path=DenomFilterPressedCommand}"
                             IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource AllDenom}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="AllDenomImage" Source="{DynamicResource AllDenomOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="AllDenomImage" Property="Source" Value="{DynamicResource AllDenomOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                             Command="{Binding Path=DenomFilterPressedCommand}"
                             Margin="0 0 10 0" IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource DenomA}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="DenomBImage" Source="{DynamicResource Denom1CentOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="DenomBImage" Property="Source" Value="{DynamicResource Denom1CentOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                             Command="{Binding Path=DenomFilterPressedCommand}"
                             IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource DenomB}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="DenomCImage" Source="{DynamicResource Denom5CentOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="DenomCImage" Property="Source" Value="{DynamicResource Denom5CentOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="AlbertaUpiTemplate" DataType="{x:Type viewModels:LobbyViewModel}">
        <Grid x:Name="UpiGrid" Width="1881">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width=".102*"/>
                <ColumnDefinition Width=".142*"/>
                <ColumnDefinition Width=".168*"/>
                <ColumnDefinition Width=".419*"/>
                <ColumnDefinition Width=".168*"/>
            </Grid.ColumnDefinitions>
            <Image Grid.ColumnSpan="5" Grid.Column="0" Source="{DynamicResource UpiBackground}"/>

            <Grid Grid.Column="0" Margin="0 30 0 0">
                <Label Grid.Column="0" Content="{Binding ClockTimer.CurrentTime}" FontSize="28" Foreground="Gold" HorizontalAlignment="Center" VerticalAlignment="Center"
                       Visibility="{Binding ClockTimer.IsSessionOverLabelVisible, Converter={StaticResource TrueCollapsedFalseVisible}}" />
                <Image Grid.Column="0" Source="{DynamicResource SessionOverLabel}" Stretch="None" Margin="0 10 0 0" HorizontalAlignment="Center" VerticalAlignment="Center"
                       Visibility="{Binding ClockTimer.IsSessionOverLabelVisible, Converter={StaticResource TrueVisibleFalseCollapsed}}" />
            </Grid>
       
            <Label Grid.Column="1" Content="{Binding FormattedCredits}" Margin="0 10 0 0" FontSize="44" FontFamily="Impact" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" />

            <ContentControl x:Name="CashOutWrapper" Grid.Column="2" controls:MouseEvents.MouseDown="{Binding CashOutWrapperMouseDownCommand}">
                <Button x:Name="btnCashOut"
                        Margin="38 0 24 0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        IsEnabled="{Binding Path=CashOutEnabled}"
                        Command="{Binding Path=CashOutCommand}"
                        Style="{StaticResource stlFlatButton}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Image Name="cashOutImage" Source="{DynamicResource CashOutNormal}"/>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding ElementName=btnCashOut, Path=IsEnabled}" Value="False">
                                    <Setter TargetName="cashOutImage" Property="Source" Value="{DynamicResource CashOutDisabled}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </ContentControl>

            <StackPanel x:Name="DenomPanel" Grid.Column="3" Orientation="Horizontal" 
                        Margin="15" HorizontalAlignment="Center" controls:MouseEvents.PreviewMouseDown="{Binding UpiPreviewMouseDownCommand}">
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                             Margin="0 0 10 0" 
                             Command="{Binding Path=DenomFilterPressedCommand}"
                             IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource AllDenom}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="AllDenomImage" Source="{DynamicResource AllDenomOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="AllDenomImage" Property="Source" Value="{DynamicResource AllDenomOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                             Command="{Binding Path=DenomFilterPressedCommand}"
                             Margin="0 0 10 0" IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource DenomB}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="DenomBImage" Source="{DynamicResource Denom5CentOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="DenomBImage" Property="Source" Value="{DynamicResource Denom5CentOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                             Command="{Binding Path=DenomFilterPressedCommand}"
                             IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource DenomC}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="DenomCImage" Source="{DynamicResource Denom25CentOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="DenomCImage" Property="Source" Value="{DynamicResource Denom25CentOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
            </StackPanel>

            <ContentControl Grid.Column="4">
                <Button Margin="20 0 37 0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        IsEnabled="{Binding Path=ResponsibleGamingInfoEnabled}" 
                        Command="{Binding Path=ResponsibleGamingDialogOpenCommand}"
                        Style="{StaticResource stlFlatButton}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Image Name="image" Source="{DynamicResource ResponsibleGamingNormal}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="image" Property="Source" Value="{DynamicResource ResponsibleGamingDisabled}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </ContentControl>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="NewYorkLotteryUpiTemplate" DataType="{x:Type viewModels:LobbyViewModel}">
        <Grid x:Name="UpiGrid" Width="1881">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width=".103*"/>
                <ColumnDefinition Width=".142*"/>
                <ColumnDefinition Width=".175*"/>
                <ColumnDefinition Width=".579*"/>
            </Grid.ColumnDefinitions>
            <Image Grid.ColumnSpan="4" Grid.Column="0" Source="{DynamicResource UpiBackground}"/>

            <Label Grid.Column="1" Content="{Binding FormattedCredits}" Margin="0 10 0 0" FontSize="44" FontFamily="Impact" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" />

            <ContentControl x:Name="CashOutWrapper" Grid.Column="2" controls:MouseEvents.MouseDown="{Binding CashOutWrapperMouseDownCommand}">
                <Button x:Name="btnCashOut"
                        Margin="35,0,35,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        IsEnabled="{Binding Path=CashOutEnabled}"
                        Command="{Binding Path=CashOutCommand}"
                        Style="{StaticResource stlFlatButton}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Image Name="cashOutImage" Source="{DynamicResource CashOutNormal}"/>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding ElementName=btnCashOut, Path=IsEnabled}" Value="False">
                                    <Setter TargetName="cashOutImage" Property="Source" Value="{DynamicResource CashOutDisabled}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </ContentControl>

            <StackPanel x:Name="DenomPanel" Grid.Column="3" Orientation="Horizontal" 
                        Margin="0,15,27,15" HorizontalAlignment="Center" controls:MouseEvents.PreviewMouseDown="{Binding UpiPreviewMouseDownCommand}">
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                             Margin="0 0 10 0" 
                             Command="{Binding Path=DenomFilterPressedCommand}"
                             IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource AllDenom}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="AllDenomImage" Source="{DynamicResource AllDenomOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="AllDenomImage" Property="Source" Value="{DynamicResource AllDenomOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                             Command="{Binding Path=DenomFilterPressedCommand}"
                             Margin="0 0 10 0" IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource DenomA}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="DenomBImage" Source="{DynamicResource Denom1CentOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="DenomBImage" Property="Source" Value="{DynamicResource Denom1CentOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
                <RadioButton Style="{StaticResource StlFlatToggleButton}"
                             Command="{Binding Path=DenomFilterPressedCommand}"
                             IsChecked="{Binding DenomFilter,
                            Converter={StaticResource IntToBool}, 
                            ConverterParameter={StaticResource DenomB}}">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Image Name="DenomCImage" Source="{DynamicResource Denom5CentOff}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="DenomCImage" Property="Source" Value="{DynamicResource Denom5CentOn}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="StandardUpiTemplate" DataType="{x:Type viewModels:LobbyViewModel}">
        <Grid Width="1880">
            <Image Source="{DynamicResource UpiBackground}">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding VolumeButtonVisible}" Value="True" />
                                    <Condition Binding="{Binding ServiceButtonVisible}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>

            <Image Source="{DynamicResource UpiBackgroundNoService}">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding VolumeButtonVisible}" Value="True" />
                                    <Condition Binding="{Binding ServiceButtonVisible}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>

            <Image Source="{DynamicResource UpiBackgroundNoVolume}">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding VolumeButtonVisible}" Value="False" />
                                    <Condition Binding="{Binding ServiceButtonVisible}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>

            <Image Source="{DynamicResource UpiBackgroundNoVolumeNoService}">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding VolumeButtonVisible}" Value="False" />
                                    <Condition Binding="{Binding ServiceButtonVisible}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            
            <Canvas>
                <Grid Canvas.Left="98" Canvas.Top="40" Visibility="{Binding VolumeButtonVisible, Converter={StaticResource TrueVisibleFalseCollapsed}}">
                    <Button x:Name="btnVolume0"
                            Command="{Binding Volume.VolumeCommand}"
                            Style="{StaticResource stlFlatButton}"
                            Visibility="{Binding Volume.VolumeValue, Converter={StaticResource IndexConverter}, ConverterParameter=0}">>
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Image common:ImageHelper.SourceResourceKey="{Binding Volume.ResourceKeys, Converter={StaticResource CollectionConverter}, ConverterParameter=0}" />
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="btnVolume1"
                            Command="{Binding Volume.VolumeCommand}"
                            Style="{StaticResource stlFlatButton}"
                            Visibility="{Binding Volume.VolumeValue, Converter={StaticResource IndexConverter}, ConverterParameter=1}">>
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Image common:ImageHelper.SourceResourceKey="{Binding Volume.ResourceKeys, Converter={StaticResource CollectionConverter}, ConverterParameter=1}" />
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="btnVolume2"
                            Command="{Binding Volume.VolumeCommand}"
                            Style="{StaticResource stlFlatButton}"
                            Visibility="{Binding Volume.VolumeValue, Converter={StaticResource IndexConverter}, ConverterParameter=2}">>
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Image common:ImageHelper.SourceResourceKey="{Binding Volume.ResourceKeys, Converter={StaticResource CollectionConverter}, ConverterParameter=2}" />
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="btnVolume3"
                            Command="{Binding Volume.VolumeCommand}"
                            Style="{StaticResource stlFlatButton}"
                            Visibility="{Binding Volume.VolumeValue, Converter={StaticResource IndexConverter}, ConverterParameter=3}">>
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Image common:ImageHelper.SourceResourceKey="{Binding Volume.ResourceKeys, Converter={StaticResource CollectionConverter}, ConverterParameter=3}" />
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="btnVolume4"
                            Command="{Binding Volume.VolumeCommand}"
                            Style="{StaticResource stlFlatButton}"
                            Visibility="{Binding Volume.VolumeValue, Converter={StaticResource IndexConverter}, ConverterParameter=4}">>
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Image common:ImageHelper.SourceResourceKey="{Binding Volume.ResourceKeys, Converter={StaticResource CollectionConverter}, ConverterParameter=4}" />
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="btnVolume5"
                            Command="{Binding Volume.VolumeCommand}"
                            Style="{StaticResource stlFlatButton}"
                            Visibility="{Binding Volume.VolumeValue, Converter={StaticResource IndexConverter}, ConverterParameter=5}">>
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Image common:ImageHelper.SourceResourceKey="{Binding Volume.ResourceKeys, Converter={StaticResource CollectionConverter}, ConverterParameter=5}" />
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </Grid>

                <Button x:Name="btnService"
                    Canvas.Left = "285"
                    Canvas.Top = "40"
                    Visibility="{Binding ServiceButtonVisible, Converter={StaticResource TrueVisibleFalseCollapsed}}"
                    IsEnabled="{Binding Path=VbdServiceButtonDisabled, Converter={StaticResource InverseBoolConverter}}"
                    Command="{Binding Path=ServiceCommand}"
                    Style="{StaticResource stlFlatButton}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Image Name="serviceImage" Source="{DynamicResource ServiceNormal}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="serviceImage" Property="Source" Value="{DynamicResource ServiceDisabled}"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding IsServiceRequested}" Value="True">
                                    <Setter TargetName="serviceImage" Property="Source" Value="{DynamicResource ServicePressed}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <Label 
                    Canvas.Left="740"
                    Canvas.Top="44"
                    Width="400"
                    Height="77"
                    Content="{Binding FormattedCredits}" 
                    FontSize="44" 
                    FontFamily="Impact" 
                    Foreground="White"
                    HorizontalContentAlignment="Center"
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center">
                </Label>

                <Button x:Name="btnCashOut"
                    Canvas.Left="1459"
                    Canvas.Top="41"
                    IsEnabled="{Binding Path=CashOutEnabled}"
                    Command="{Binding Path=CashOutCommand}"
                    Style="{StaticResource stlFlatButton}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Image Name="cashOutImage" Source="{DynamicResource CashOutNormal}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="cashOutImage" Property="Source" Value="{DynamicResource CashOutDisabled}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Canvas>
        </Grid>
    </DataTemplate>
</ResourceDictionary>