<UserControl
    x:Class="Aristocrat.Monaco.Gaming.UI.Views.Lobby.MultiLanguageUpi"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="http://monaco.aristocrat.com/common"
    xmlns:controls1="clr-namespace:Aristocrat.Monaco.Gaming.UI.Views.Controls"
    xmlns:converters="clr-namespace:Aristocrat.Monaco.Gaming.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:uicommon="clr-namespace:Aristocrat.Monaco.UI.Common;assembly=Aristocrat.Monaco.UI.Common"
    xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Gaming.UI.ViewModels"
    d:DataContext="{d:DesignInstance {x:Type viewModels:LobbyViewModel}}"
    d:DesignHeight="300"
    d:DesignWidth="300"
    AutomationProperties.AutomationId="UserControl0_6CF61223"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <!--  Apply MahApps.Metro styles to all controls  -->
            <ResourceDictionary.MergedDictionaries>
                <!--  MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive!  -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <!--  Accent and AppTheme setting  -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="../../Skins/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:IntToBoolConverter x:Key="IntToBool" />
            <converters:MarginConverter x:Key="MarginConverter" />
            <common:BitmapToImageSourceConverter x:Key="BitmapToImageConverter" />
            <system:Int32 x:Key="AllDenom">-1</system:Int32>
            <system:Int32 x:Key="DenomA">1</system:Int32>
            <system:Int32 x:Key="DenomB">5</system:Int32>
            <system:Int32 x:Key="DenomC">25</system:Int32>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid
        x:Name="UpiGrid"
        Width="1881"
        AutomationProperties.AutomationId="Grid1_6CF61223">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width=".102*" AutomationProperties.AutomationId="ColumnDefinition2_6CF61223" />
            <ColumnDefinition Width=".142*" AutomationProperties.AutomationId="ColumnDefinition3_6CF61223" />
            <ColumnDefinition Width=".168*" AutomationProperties.AutomationId="ColumnDefinition4_6CF61223" />
            <ColumnDefinition Width=".419*" AutomationProperties.AutomationId="ColumnDefinition5_6CF61223" />
            <ColumnDefinition Width=".168*" AutomationProperties.AutomationId="ColumnDefinition6_6CF61223" />
        </Grid.ColumnDefinitions>
        <Image
            Grid.Column="0"
            Grid.ColumnSpan="5"
            AutomationProperties.AutomationId="Image7_6CF61223"
            Source="{DynamicResource UpiBackground}" />
        <Label
            Grid.Column="0"
            Margin="0,30,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            AutomationProperties.AutomationId="Label8_6CF61223"
            Content="{Binding ClockTimer.CurrentTime}"
            FontSize="28"
            Foreground="Gold" />
        <Image
            Grid.Column="1"
            Margin="{Binding ActiveLocaleCode, Converter={StaticResource MarginConverter}}"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            AutomationProperties.AutomationId="Image9_6CF61223"
            Source="{DynamicResource BankImage}"
            Stretch="None" />
        <Label
            Grid.Column="1"
            Margin="0,10,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            AutomationProperties.AutomationId="Label10_6CF61223"
            Content="{Binding FormattedCredits}"
            FontFamily="Impact"
            FontSize="44"
            Foreground="White" />
        <ContentControl
            x:Name="CashOutWrapper"
            Grid.Column="2"
            controls1:MouseEvents.MouseDown="{Binding CashOutWrapperMouseDownCommand}"
            AutomationProperties.AutomationId="ContentControl11_6CF61223">
            <Button
                x:Name="btnCashOut"
                Margin="38,0,24,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                AutomationProperties.AutomationId="Button12_6CF61223"
                Command="{Binding Path=CashOutCommand}"
                CommandParameter="main"
                IsEnabled="{Binding Path=CashOutEnabled}"
                Style="{StaticResource stlFlatButton}">
                <!-- Ex: Jurisdiction resources
                <Image>
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Source" Value="{lex:BLoc Key=CashOutNormal, Converter={StaticResource BitmapToImageConverter}}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=btnCashOut, Path=IsEnabled}" Value="False">
                                    <Setter Property="Source" Value="{lex:BLoc Key=CashOutDisabled, Converter={StaticResource BitmapToImageConverter}}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>-->
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Image
                            Name="cashOutImage"
                            AutomationProperties.AutomationId="Image13_6CF61223"
                            Source="{DynamicResource CashOutNormal}" />
                        <ControlTemplate.Triggers>
                            <DataTrigger
                                AutomationProperties.AutomationId="DataTrigger14_6CF61223"
                                Binding="{Binding ElementName=btnCashOut, Path=IsEnabled}"
                                Value="False">
                                <Setter TargetName="cashOutImage" Property="Source" Value="{DynamicResource CashOutDisabled}" />
                            </DataTrigger>
                            <Trigger AutomationProperties.AutomationId="Trigger0_13BEB1B8" Property="IsPressed" Value="True">
                                <Setter TargetName="cashOutImage" Property="Source" Value="{DynamicResource CashOutPressed}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </ContentControl>
        <StackPanel
            x:Name="DenomPanel"
            Grid.Column="3"
            Margin="15"
            HorizontalAlignment="Center"
            controls1:MouseEvents.PreviewMouseDown="{Binding UpiPreviewMouseDownCommand}"
            AutomationProperties.AutomationId="StackPanel15_6CF61223"
            Orientation="Horizontal">
            <RadioButton
                Margin="0,0,12,0"
                AutomationProperties.AutomationId="RadioButton16_6CF61223"
                Command="{Binding Path=DenomFilterPressedCommand}"
                IsChecked="{Binding DenomFilter, Converter={StaticResource IntToBool}, ConverterParameter={StaticResource AllDenom}}"
                Style="{StaticResource stlFlatToggleButton}">
                <RadioButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Image
                            Name="AllDenomImage"
                            AutomationProperties.AutomationId="Image17_6CF61223"
                            Source="{DynamicResource AllDenomOff}" />
                        <ControlTemplate.Triggers>
                            <Trigger AutomationProperties.AutomationId="Trigger18_6CF61223" Property="IsChecked" Value="True">
                                <Setter TargetName="AllDenomImage" Property="Source" Value="{DynamicResource AllDenomOn}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </RadioButton.Template>
            </RadioButton>
            <RadioButton
                Margin="0,0,12,0"
                AutomationProperties.AutomationId="RadioButton19_6CF61223"
                Command="{Binding Path=DenomFilterPressedCommand}"
                IsChecked="{Binding DenomFilter, Converter={StaticResource IntToBool}, ConverterParameter={StaticResource DenomA}}"
                Style="{StaticResource stlFlatToggleButton}">
                <RadioButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Image
                            Name="DenomAImage"
                            AutomationProperties.AutomationId="Image20_6CF61223"
                            Source="{DynamicResource Denom1CentOff}" />
                        <ControlTemplate.Triggers>
                            <Trigger AutomationProperties.AutomationId="Trigger21_6CF61223" Property="IsChecked" Value="True">
                                <Setter TargetName="DenomAImage" Property="Source" Value="{DynamicResource Denom1CentOn}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </RadioButton.Template>
            </RadioButton>
            <RadioButton
                Margin="0,0,12,0"
                AutomationProperties.AutomationId="RadioButton22_6CF61223"
                Command="{Binding Path=DenomFilterPressedCommand}"
                IsChecked="{Binding DenomFilter, Converter={StaticResource IntToBool}, ConverterParameter={StaticResource DenomB}}"
                Style="{StaticResource stlFlatToggleButton}">
                <RadioButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Image
                            Name="DenomBImage"
                            AutomationProperties.AutomationId="Image23_6CF61223"
                            Source="{DynamicResource Denom5CentOff}" />
                        <ControlTemplate.Triggers>
                            <Trigger AutomationProperties.AutomationId="Trigger24_6CF61223" Property="IsChecked" Value="True">
                                <Setter TargetName="DenomBImage" Property="Source" Value="{DynamicResource Denom5CentOn}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </RadioButton.Template>
            </RadioButton>
            <RadioButton
                AutomationProperties.AutomationId="RadioButton25_6CF61223"
                Command="{Binding Path=DenomFilterPressedCommand}"
                IsChecked="{Binding DenomFilter, Converter={StaticResource IntToBool}, ConverterParameter={StaticResource DenomC}}"
                Style="{StaticResource stlFlatToggleButton}">
                <RadioButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Image
                            Name="DenomCImage"
                            AutomationProperties.AutomationId="Image26_6CF61223"
                            Source="{DynamicResource Denom25CentOff}" />
                        <ControlTemplate.Triggers>
                            <Trigger AutomationProperties.AutomationId="Trigger27_6CF61223" Property="IsChecked" Value="True">
                                <Setter TargetName="DenomCImage" Property="Source" Value="{DynamicResource Denom25CentOn}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </RadioButton.Template>
            </RadioButton>
        </StackPanel>
        <ToggleButton
            x:Name="LanguageButton"
            Grid.Column="4"
            Margin="24,0,38,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            controls1:MouseEvents.MouseDown="{Binding UserInteractionCommand}"
            controls1:MouseEvents.PreviewMouseDown="{Binding UpiPreviewMouseDownCommand}"
            AutomationProperties.AutomationId="ToggleButton28_6CF61223"
            IsChecked="{Binding IsPrimaryLanguageSelected}"
            Style="{StaticResource stlFlatToggleButton}">
            <ToggleButton.Template>
                <ControlTemplate TargetType="ToggleButton">
                    <!--  Show language not selected.  So if, for example, we are in french, display English text.  -->
                    <StackPanel AutomationProperties.AutomationId="StackPanel1_13BEB1B8" Orientation="Vertical">
                        <Image
                            Name="LanguageImage"
                            uicommon:ImageHelper.SourceResourceKey="{Binding LanguageButtonResourceKey}"
                            AutomationProperties.AutomationId="Image29_6CF61223" />
                        <Image
                            Name="ActiveLanguageImage"
                            uicommon:ImageHelper.SourceResourceKey="{Binding LanguageButtonPressedResourceKey}"
                            AutomationProperties.AutomationId="Image2_13BEB1B8"
                            Visibility="Collapsed" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger AutomationProperties.AutomationId="Trigger3_13BEB1B8" Property="IsPressed" Value="true">
                            <Setter TargetName="LanguageImage" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ActiveLanguageImage" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ToggleButton.Template>
        </ToggleButton>
    </Grid>
</UserControl>