syntax = "proto3";

package Aristocrat.Monaco.v1;

import "google/protobuf/any.proto";
import "messages.proto";

service GameService {
	// Communications and notifications
	rpc Join(JoinRequest) returns (Empty) {}
	rpc Leave(LeaveRequest) returns (Empty) {}
	rpc FatalError(FatalErrorNotification) returns (Empty) {}
	rpc RuntimeEvent(RuntimeEventNotification) returns (Empty) {}
	rpc RuntimeFlagChange(RuntimeFlagNotification) returns (Empty) {}
	rpc RuntimeRequest(RuntimeRequestNotification) returns (RuntimeRequestResponse) {}
	rpc RuntimeStateChange(RuntimeStateNotication) returns (Empty) {}
	rpc ButtonDeckImageChanged(Empty) returns (Empty) {}
	rpc ButtonStatesChanged(ButtonStatesChangedNotfication) returns (Empty) {}

	// Game play
	rpc BeginGameRound(BeginGameRoundRequest) returns (BeginGameRoundResponse) {}
	rpc BeginGameRoundAsync(BeginGameRoundAsyncRequest) returns (Empty) {}
	rpc BeginGameRoundResult(BeginGameRoundResultNotification) returns (Empty) {}
	rpc GameRoundEvent(GameRoundEventRequest) returns (Empty) {}
	rpc RecoveryPoint(RecoveryPointNotification) returns (Empty) {}
	rpc GetLocalStorage(GetLocalStorageRequest) returns (GetLocalStorageResponse) {}
	rpc UpdateLocalStorage(UpdateLocalStorageRequest) returns (Empty) {}
	rpc GetMeters(Empty) returns (GetMetersResponse) {}
	rpc UpdateMeters(UpdateMetersRequest) returns (Empty) {}
	rpc GetRandomNumber32(GetRandomNumber32Request) returns (GetRandomNumber32Response) {}
	rpc GetRandomNumber64(GetRandomNumber64Request) returns (GetRandomNumber64Response) {}
	rpc Shuffle(ShuffleRequest) returns (ShuffleResponse) {}
	rpc UpdateBonusKey(UpdateBonusKeyRequest) returns (Empty) {}
	rpc EndGameRound(EndGameRoundRequest) returns (Empty) {}
	rpc UpdateBetOptions(UpdateBetOptionsRequest) returns (Empty) {}

	// Progressives
	rpc ConnectJackpotPool(ConnectJackpotPoolRequest) returns (ConnectJackpotPoolResponse) {}
	rpc GetJackpotValues(GetJackpotValuesRequest) returns (LevelInfoResponse) {}
	rpc UpdateJackpotValues(UpdateJackpotValuesRequest) returns (Empty) {}
	rpc TriggerJackpot(TriggerJackpotRequest) returns (TriggerJackpotResponse) {}
	rpc ClaimJackpot(ClaimJackpotRequest)  returns (LevelInfoResponse) {}
	rpc SetJackpotLevelWagers(LevelWagerRequest) returns (Empty) {}

	// Game Selection
	rpc SelectDenomination(SelectDenominationRequest) returns (Empty) {}
}

message JoinRequest {
	int32 runtimePort = 1;
}

message LeaveRequest {
}

message FatalErrorNotification {
	enum ErrorCode
	{
		NoError = 0;
		LiabilityLimit = 1;
		LegitimacyLimit = 2;
		Configuration = 3;
	}
	ErrorCode errorCode = 1;
	string message = 2;
}

message RuntimeEventNotification {
	enum RuntimeEvent
	{
		RequestGameExit = 0;
		RequestCashout = 1;
		RequestConfiguration = 2;
		RequestAllowGameRound = 3;
		NotifyGameReady = 4;
		ServiceButtonPressed = 5;
		ReserveButtonPressed = 6;
		GameSelectionScreenEntered = 7;
		GameSelectionScreenExited = 8;
		AdditionalInfoButtonPressed = 9;
		PlayerMenuEntered = 10;
		PlayerMenuExited = 11;
		PlayerInfoDisplayMenuRequested = 12;
		PlayerInfoDisplayExited = 13;
		GameAttractModeEntered = 14;
        GameAttractModeExited = 15;
	}
	RuntimeEvent runtimeEvent = 1;
}

message RuntimeFlagNotification {
	RuntimeFlag flag = 1;
	bool state = 2;
}

message RuntimeRequestNotification {
	enum RuntimeRequest
	{
		BeginGameRound = 0;
		BeginAttract = 1;
		BeginLobby = 2;
		BeginPlatformHelp = 3;
		EndPlatformHelp = 4;
		BeginCelebratoryNoise = 5;
		EndCelebratoryNoise = 6;
		BeginGameAttract = 7;
		EndGameAttract = 8;
	}
	RuntimeRequest request = 1;
}

message RuntimeRequestResponse {
	bool result = 1;
} 

message RuntimeStateNotication {
	RuntimeState from = 1;
	RuntimeState to = 2;
}

message BeginGameRoundRequest {
	uint64 denomination = 1;
}

message BeginGameRoundResponse {
	bool result = 1;
}

message BeginGameRoundAsyncRequest {
	uint64 denomination = 1;
	uint64 betAmount = 2;
	google.protobuf.Any outcomeRequest = 3;
	repeated google.protobuf.Any gameDetails = 4;
	bytes data = 5;
}

message GameInfo {
	uint32 betLinePreset = 1;
	uint32 betMultiplier = 2;
}

message CentralOutcome {
	uint32 outcomeCount = 1;
	uint32 templateId = 2;
}

message BeginGameRoundResultNotification {
	repeated google.protobuf.Any results = 1;
}

message PendingJackpotTriggers {
	repeated uint32 levels = 1;
}

message GameRoundEventRequest {
	GameRoundEventType type = 1;
	GameRoundEventStage stage = 2;
	GameRoundPlayMode playMode = 3;
	repeated string gameRoundInfo = 4;
	uint64 betAmount = 5;
	uint64 winAmount = 6;
	uint64 stake = 7;
	bytes data = 8;
}

message GetLocalStorageRequest {
}

message GetLocalStorageResponse {
	repeated LocalStorage storageData = 1;
}

message UpdateLocalStorageRequest {
	repeated LocalStorage storageData = 1;
}

message LocalStorage {
	StorageLocation location = 1;
	map<string, string> data = 2;
}

message GetMetersResponse {
	map<string, uint64> meters = 1;
}

message UpdateMetersRequest {
	map<string, uint64> meters = 1;
}

message GetRandomNumber32Request {
	uint32 range = 1;
}

message GetRandomNumber64Request {
	uint64 range = 1;
}

message ShuffleRequest {
	repeated uint64 value = 1;
}

message ShuffleResponse {
	repeated uint64 value = 1;
}

message GetRandomNumber32Response {
	uint32 value = 1;
}

message GetRandomNumber64Response {
	uint64 value = 1;
}

message UpdateBonusKeyRequest {
	string poolName = 1;
	string key = 2;
}

message RecoveryPointNotification {
	bytes data = 1;
}

message EndGameRoundRequest {
	uint64 betAmount = 1;
	uint64 winAmount = 2;
}

message ConnectJackpotPoolRequest {
	string poolName = 1;
}

message ConnectJackpotPoolResponse {
	bool connected = 1;
}

message ClaimJackpotRequest {
	GameRoundPlayMode playMode = 1;
	string poolName = 2;
	repeated uint64 transactionIds = 3;
}

message LevelInfoResponse {
	repeated LevelInfo levelInfo = 3;
}

message GetJackpotValuesRequest {
	GameRoundPlayMode playMode = 1;
	string poolName = 2;
}

message UpdateJackpotValuesRequest {
	GameRoundPlayMode playMode = 1;
	string poolName = 2;
	repeated PoolValue poolValues = 3;
}

message TriggerJackpotRequest {
	GameRoundPlayMode mode = 1;
	string poolName = 2;
	repeated uint32 levels = 3;
	repeated uint64 transactionIds = 4;
}

message TriggerJackpotResponse {
	map<uint32, uint64> trigger = 1;
}

message PoolValue {
	uint32 levelId = 1;
	uint64 cents = 2;
	uint64 fraction = 3;
}

message LevelWagerRequest {
	// uint64[] betCent
	repeated uint64 wagers = 1;
}

message ButtonStatesChangedNotfication {
    repeated ButtonStateChangedNotification buttonStates = 1;
}

message ButtonStateChangedNotification {
	uint32 buttonId = 1;
	// NOTE: These are treated as a bit field; a set of flags. Transported as a signed integer
	enum SystemButtonState
	{
		NotSet = 0;
		Enabled = 1;
		LightOn = 2;
		BlinkFast = 4;
		BlinkSlow = 8;
		OverridePlatform = 16;
		LockedByPlatform = 128;
	}
	int32 state = 2;
}

message SelectDenominationRequest {
	uint64 denomination = 1;
}

message UpdateBetOptionsRequest {
	uint64 wager = 1;
	uint32 betMultiplier = 2;
	uint32 lineCost = 3;
	uint32 numberLines = 4;
	uint32 ante = 5;
	uint32 betLinePresetId = 6;
}
