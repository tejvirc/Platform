syntax = "proto3";

package Aristocrat.Monaco.v1;

import "reelMessages.proto";

service ReelService {
	rpc SpinReels(SpinReelsRequest) returns(SpinReelsResponse) {}
	rpc NudgeReels(NudgeReelsRequest) returns(NudgeReelsResponse) {}
	rpc GetReelsState(GetReelsStateRequest) returns(GetReelsStateResponse) {}
	rpc GetConnectedReels(ConnectedReelsRequest) returns(ConnectedReelsResponse) {}
	rpc UpdateReelsSpeed(UpdateReelsSpeedRequest) returns(UpdateReelsSpeedResponse) {}
}
 
message UpdateReelsSpeedRequest {
	repeated ReelSpeedData speedData = 1;
}
 
message UpdateReelsSpeedResponse {
	bool result = 1;
}
 
message ReelSpeedData {
	int32 reelId = 1;
	int32 speed = 2;
}
 
message ConnectedReelsRequest {
}
 
message ConnectedReelsResponse {
	repeated int32 reelId = 1;
}
 
message SpinReelsResponse {
	bool result = 1;
}
 
message GetReelsStateRequest {
}
 
message GetReelsStateResponse {
	map<int32, ReelState> states = 1;
}
 
message NudgeReelsResponse {
	bool result = 1;
}
 
message SpinReelsRequest {
	repeated ReelSpinData spinData = 1;
}
 
enum Direction {
	Forward = 0;
	Backwards = 1;
}
 
message ReelSpinData {
	int32 reelId = 1;
	Direction direction = 2;
	int32 speed = 3;
	int32 step = 4;
}
 
message NudgeReelsRequest {
	repeated ReelNudgeData nudgeData = 1;
}
 
message ReelNudgeData {
	int32 reelId = 1;
	Direction direction = 2;
	int32 speed = 3;
	int32 steps = 4;
}