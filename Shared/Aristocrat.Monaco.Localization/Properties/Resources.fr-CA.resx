<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="And" xml:space="preserve">
    <value>et</value>
  </data>
  <data name="ApplyLabel" xml:space="preserve">
    <value>Appliquer</value>
  </data>
  <data name="Billion" xml:space="preserve">
    <value>Milliard</value>
  </data>
  <data name="CallAttendantText" xml:space="preserve">
    <value>Appelez un préposé</value>
  </data>
  <data name="CashingOutText" xml:space="preserve">
    <value>Impression du coupon…</value>
  </data>
  <data name="Cent" xml:space="preserve">
    <value>Cent</value>
  </data>
  <data name="Cents" xml:space="preserve">
    <value>Cent</value>
  </data>
  <data name="ContinueText" xml:space="preserve">
    <value>Continuer</value>
  </data>
  <data name="CreditsWageredText" xml:space="preserve">
    <value>EN ESPÈCES MISÉS</value>
  </data>
  <data name="CreditsWonText" xml:space="preserve">
    <value>EN ESPÈCES GAGNÉS</value>
  </data>
  <data name="DisableCountdownMessage" xml:space="preserve">
    <value>La machine sera désactivée:</value>
  </data>
  <data name="Dollar" xml:space="preserve">
    <value>Dollar</value>
  </data>
  <data name="Dollars" xml:space="preserve">
    <value>Dollar</value>
  </data>
  <data name="Eight" xml:space="preserve">
    <value>Huit</value>
  </data>
  <data name="Eighteen" xml:space="preserve">
    <value>Dix-huit</value>
  </data>
  <data name="Eighty" xml:space="preserve">
    <value>Quatre-vingts</value>
  </data>
  <data name="EightyPrefix" xml:space="preserve">
    <value>Quatre-vingt</value>
  </data>
  <data name="Eleven" xml:space="preserve">
    <value>Onze</value>
  </data>
  <data name="EmptyStringNotAllowErrorMessage" xml:space="preserve">
    <value>??The empty string is not allowed.??</value>
  </data>
  <data name="EndCreditsText" xml:space="preserve">
    <value>EN ESPÈCES FINAUX</value>
  </data>
  <data name="EndTimeText2" xml:space="preserve">
    <value>HEURE DE FIN</value>
  </data>
  <data name="ExitText" xml:space="preserve">
    <value>Quitter</value>
  </data>
  <data name="Fifteen" xml:space="preserve">
    <value>Quinze</value>
  </data>
  <data name="Fifty" xml:space="preserve">
    <value>Cinquante</value>
  </data>
  <data name="Five" xml:space="preserve">
    <value>Cinq</value>
  </data>
  <data name="Forty" xml:space="preserve">
    <value>Quarante</value>
  </data>
  <data name="Four" xml:space="preserve">
    <value>Quatre</value>
  </data>
  <data name="Fourteen" xml:space="preserve">
    <value>Quatorze</value>
  </data>
  <data name="GameHistoryStatusComplete" xml:space="preserve">
    <value>Terminé</value>
  </data>
  <data name="GameHistoryStatusFatalError" xml:space="preserve">
    <value>Erreur</value>
  </data>
  <data name="GameHistoryStatusInProgress" xml:space="preserve">
    <value>En cours</value>
  </data>
  <data name="GameHistoryStatusRecoveryFailed" xml:space="preserve">
    <value>Échec du rétablissement</value>
  </data>
  <data name="GameHistoryStatusText" xml:space="preserve">
    <value>ÉTAT</value>
  </data>
  <data name="GameNameText2" xml:space="preserve">
    <value>JEU/ÉVÉNEMENT</value>
  </data>
  <data name="GameOrderMessage" xml:space="preserve">
    <value>Choisissez un jeu et utilisez les flèches vers le haut/vers le bas pour modifier l’ordre</value>
  </data>
  <data name="GameRoundInfoText" xml:space="preserve">
    <value>INFO ÉVÉNEMENT RONDE DE JEU</value>
  </data>
  <data name="Hundred" xml:space="preserve">
    <value>Cent</value>
  </data>
  <data name="IdleText" xml:space="preserve">
    <value>Could you or someone you know have a problem with gambling? For help call 1-800-461-1234. Pourriez-vous ou quelqu'un que vous connaissez avoir un problème avec le jeu? Pour obtenir de l'aide, composez le 1-800-461-1234.</value>
  </data>
  <data name="IdleTextTitle" xml:space="preserve">
    <value>Texte inactif</value>
  </data>
  <data name="InsertingBillText" xml:space="preserve">
    <value>Insertion du billet…</value>
  </data>
  <data name="InsertingVoucherText" xml:space="preserve">
    <value>Validation du coupon…</value>
  </data>
  <data name="InstalledLabel" xml:space="preserve">
    <value>Installé le</value>
  </data>
  <data name="ListContainsNullWlementErrorMessage" xml:space="preserve">
    <value>??The list contains a null element.??</value>
  </data>
  <data name="MaximumValueReachedCashOutText1" xml:space="preserve">
    <value>La valeur maximale a été atteinte.</value>
  </data>
  <data name="MaximumValueReachedCashOutText2" xml:space="preserve">
    <value>Un ticket d’encaissement est en cours d’impression.</value>
  </data>
  <data name="Million" xml:space="preserve">
    <value>Million</value>
  </data>
  <data name="Nine" xml:space="preserve">
    <value>Neuf</value>
  </data>
  <data name="Nineteen" xml:space="preserve">
    <value>Dix-neuf</value>
  </data>
  <data name="Ninety" xml:space="preserve">
    <value>Quatre-vingt-dix</value>
  </data>
  <data name="NotDefaultErrorMessageTemplate" xml:space="preserve">
    <value>??The parameter '{0}' was passed in with a default value, was expected to be nondefault.??</value>
  </data>
  <data name="NotNullSubtypeErrorMessageTemplate" xml:space="preserve">
    <value>??The type {0} or a derived type was expected, but {1} was given.??</value>
  </data>
  <data name="NullValueNotAllowErrorMessage" xml:space="preserve">
    <value>??Null value is not allowed.??</value>
  </data>
  <data name="NumBillsInText" xml:space="preserve">
    <value>Nombre de billets insérés</value>
  </data>
  <data name="One" xml:space="preserve">
    <value>Un</value>
  </data>
  <data name="PaidMeterLabel" xml:space="preserve">
    <value>PAYÉ :</value>
  </data>
  <data name="ParameterNameTemplate" xml:space="preserve">
    <value>??{0}. Parameter name: {1}.??</value>
  </data>
  <data name="PrintHandPayText" xml:space="preserve">
    <value>Printing Receipt...</value>
  </data>
  <data name="RecoveringText" xml:space="preserve">
    <value>Récupération</value>
  </data>
  <data name="RecoveryFailedText" xml:space="preserve">
    <value>ÉCHEC DU RÉTABLISSEMENT</value>
  </data>
  <data name="ReferenceNumberText" xml:space="preserve">
    <value>Nº</value>
  </data>
  <data name="ReplayDisabledInGameText" xml:space="preserve">
    <value>La reprise est seulement disponible à partir de l’écran de sélection</value>
  </data>
  <data name="ReplayPauseInputText" xml:space="preserve">
    <value>Touchez un bouton en bas pour continuer la reprise</value>
  </data>
  <data name="ReplayText" xml:space="preserve">
    <value>Reprise</value>
  </data>
  <data name="SaveText2" xml:space="preserve">
    <value>Enregistrer</value>
  </data>
  <data name="SequenceNumberText" xml:space="preserve">
    <value>Numéro de séquence</value>
  </data>
  <data name="Seven" xml:space="preserve">
    <value>Sept</value>
  </data>
  <data name="Seventeen" xml:space="preserve">
    <value>Dix-sept</value>
  </data>
  <data name="Seventy" xml:space="preserve">
    <value>Soixante-dix</value>
  </data>
  <data name="Six" xml:space="preserve">
    <value>Six</value>
  </data>
  <data name="Sixteen" xml:space="preserve">
    <value>Seize</value>
  </data>
  <data name="Sixty" xml:space="preserve">
    <value>Soixante</value>
  </data>
  <data name="StartCreditsText" xml:space="preserve">
    <value>EN ESPÈCES INITIAUX</value>
  </data>
  <data name="StartTimeText2" xml:space="preserve">
    <value>HEURE DE DÉBUT</value>
  </data>
  <data name="StringLengthGreaterOrEqualErrorMessageTemplate" xml:space="preserve">
    <value>??The string length should be greater than or equal to {0}.??</value>
  </data>
  <data name="StringLengthGreaterThanErrorMessageTemplate" xml:space="preserve">
    <value>??The string length should be greater than {0}.??</value>
  </data>
  <data name="StringLengthLessOrEqualErrorMessageTemplate" xml:space="preserve">
    <value>??The string length should be less than or equal to {0}??</value>
  </data>
  <data name="StringLengthLessThanErrorMessageTemplate" xml:space="preserve">
    <value>??The string length should be less than {0}.??</value>
  </data>
  <data name="Ten" xml:space="preserve">
    <value>Dix</value>
  </data>
  <data name="Thirteen" xml:space="preserve">
    <value>Treize</value>
  </data>
  <data name="Thirty" xml:space="preserve">
    <value>Trente</value>
  </data>
  <data name="Thousand" xml:space="preserve">
    <value>Mille</value>
  </data>
  <data name="Three" xml:space="preserve">
    <value>Trois</value>
  </data>
  <data name="Twelve" xml:space="preserve">
    <value>Douze</value>
  </data>
  <data name="Twenty" xml:space="preserve">
    <value>Vingt</value>
  </data>
  <data name="Two" xml:space="preserve">
    <value>Deux</value>
  </data>
  <data name="UnexpectedValueErrorMessage" xml:space="preserve">
    <value>??The argument has an unexpected value.??</value>
  </data>
  <data name="UnknownMeterValueText" xml:space="preserve">
    <value>Compteur introuvable</value>
  </data>
  <data name="ValueNotNullErrorMessage" xml:space="preserve">
    <value>??Value cannot be null??</value>
  </data>
  <data name="WatOutText" xml:space="preserve">
    <value>Transférer</value>
  </data>
  <data name="Zero" xml:space="preserve">
    <value>Zéro</value>
  </data>
  <data name="TestText" xml:space="preserve">
    <value>Prueba</value>
  </data>
  <data name="VoucherInTickets" xml:space="preserve">
    <value>??Voucher In Tickets??</value>
  </data>
  <data name="VoucherInAmount" xml:space="preserve">
    <value>??Voucher In Amount??</value>
  </data>
  <data name="GamesPlayed" xml:space="preserve">
    <value>Jeux misé</value>
  </data>
  <data name="GamesWon" xml:space="preserve">
    <value>Jeux Gagné</value>
  </data>
  <data name="TotalDashBillIn" xml:space="preserve">
    <value>Total des billets en</value>
  </data>
  <data name="CoinInFormat" xml:space="preserve">
    <value>Pièces de {0:c0}</value>
  </data>
  <data name="BillInFormat" xml:space="preserve">
    <value>Billets de {0:c0}</value>
  </data>
  <data name="MainDoorOpenCount" xml:space="preserve">
    <value>Ouvertures de la porte principale</value>
  </data>
  <data name="MainDoorOpenPowerOffCount" xml:space="preserve">
    <value>Ouvertures de la porte principale hors tension</value>
  </data>
  <data name="CashDoorOpenCount" xml:space="preserve">
    <value>Ouvertures de la boîte à billets</value>
  </data>
  <data name="CashDoorOpenPowerOffCount" xml:space="preserve">
    <value>Ouvertures de la boîte à billets hors tension</value>
  </data>
  <data name="LogicDoorOpenCount" xml:space="preserve">
    <value>Ouvertures de la porte logique</value>
  </data>
  <data name="LogicDoorOpenPowerOffCount" xml:space="preserve">
    <value>Ouvertures de la porte logique hors tension</value>
  </data>
  <data name="TopBoxDoorOpenCount" xml:space="preserve">
    <value>Ouvertures de la boîte secondare</value>
  </data>
  <data name="TopBoxDoorOpenPowerOffCount" xml:space="preserve">
    <value>Ouvertures de la boîte secondare hors tension</value>
  </data>
  <data name="RetailerAccess" xml:space="preserve">
    <value>Accès au menu Admin</value>
  </data>
  <data name="TechnicianAccess" xml:space="preserve">
    <value>Accès au menu Technicien</value>
  </data>
  <data name="AmountPlayed" xml:space="preserve">
    <value>Montant misé</value>
  </data>
  <data name="AmountWon" xml:space="preserve">
    <value>Montant gagné</value>
  </data>
  <data name="CashoutTickets" xml:space="preserve">
    <value>??Cashout Tickets??</value>
  </data>
  <data name="TotalDashCoinIn" xml:space="preserve">
    <value>Total des pièces en</value>
  </data>
  <data name="TotalDashCoinsAndBills" xml:space="preserve">
    <value>Total des insertions (billets et monnaie)</value>
  </data>
  <data name="Backend" xml:space="preserve">
    <value>???Backend???</value>
  </data>
  <data name="ReplayCompletedText" xml:space="preserve">
    <value>???Done - Press Exit to quit Replay???</value>
  </data>
  <data name="PlayableOnly" xml:space="preserve">
    <value>JOUABLE UNIQUEMENT</value>
  </data>
  <data name="EnabledDenominationsLabel" xml:space="preserve">
    <value>Dénominations activées:</value>
  </data>
  <data name="Handpay" xml:space="preserve">
    <value>Handpay</value>
  </data>
</root>