name: SonarQube

on:
  workflow_dispatch:
  
  push:
    branches:
    - main
    - release/*
    paths:
    - 'Accounting/**'
    - 'Application/**'
    - 'Gaming/**'
    - 'Hardware/**'
    - 'Jurisdiction/**'
    - 'Kernel/**'
    - 'Protocol/**'
    - 'Shared/**'
    - 'Test/**'
  
  pull_request:
    branches:
    - main
    - release/*
      
jobs:
  analyze:
    name: Analyze
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      env:
        NUGET_AUTH_TOKEN: ${{secrets.REGISTRY_TOKEN}}
      with:
        dotnet-version: '5.x'
        source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
    - name: Remove TeamCity NuGet Source
      run: >
        dotnet nuget remove source TeamCity --configfile ./NuGet.config
    - name: Setup msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Setup NuGet
      uses: nuget/setup-nuget@v1.0.5
      with:
        nuget-version: '5.x'
    - name: Cache NuGet Packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.nuget/packages
        key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj') }}
    - name: Setup VSTest Path
      uses: darenm/setup-vstest@v1
    - name: Setup dotCover
      run: |
        nuget install JetBrains.dotCover.CommandLineTools -Version 2021.1.2 -OutputDirectory .\packages
        echo "${{ github.workspace }}\packages\JetBrains.dotCover.CommandLineTools.2021.1.2\tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.x'
    - name: Determine Version
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7
      with:
        useConfigFile: true
        additionalArguments: '/updateassemblyinfo'
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Cache SonarQube packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarQube scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarQube scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory -Force
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
    - name: Begin scan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      shell: powershell
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"monaco" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
    - name: Restore
      run: |
        nuget restore .\Monaco.sln
    - name: Build - Debug
      run: |
        msbuild -p:"Configuration=Debug" -p:"Platform=Any CPU" -t:Rebuild .\Monaco.sln
    - name: End Scan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      shell: powershell
      run: |
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
    - name: Quality Gate check
      uses: sonarsource/sonarqube-quality-gate-action@master
      timeout-minutes: 10
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        scanMetadataReportFile: .sonarqube/out/.sonar/report-task.txt
