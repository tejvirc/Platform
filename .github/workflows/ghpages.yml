name: GitHubPages

on:
  workflow_dispatch:

  push:
    branches:
    - main
    paths:
    - 'Accounting/**'
    - 'Application/**'
    - 'Gaming/**'
    - 'Hardware/**'
    - 'Jurisdiction/**'
    - 'Kernel/**'
    - 'Protocol/**'
    - 'Shared/**'
    - 'Documentation/**'

jobs:
  build-docs:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      env:
        NUGET_AUTH_TOKEN: ${{secrets.REGISTRY_TOKEN}}
      with:
        dotnet-version: '5.x'
        source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
    - name: Remove TeamCity NuGet Source
      run: >
        dotnet nuget remove source TeamCity --configfile ./NuGet.config
    - name: Setup msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Setup NuGet
      uses: nuget/setup-nuget@v1.0.5
      with:
        nuget-version: '5.x'
    - name: Cache NuGet Packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.nuget/packages
        key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj') }}
    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.x'
    - name: Determine Version
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7
      with:
        useConfigFile: true
        additionalArguments: '/updateassemblyinfo'
    - name: Setup DocFX
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: install docfx
    - name: Install Plugins
      working-directory: Documentation
      run: |
        nuget install DocFx.Plugins.PlantUml -OutputDirectory plugins -ExcludeVersion -DependencyVersion Ignore -Verbosity detailed
        nuget install DocFx.Plugins.Monaco -OutputDirectory plugins -ExcludeVersion -DependencyVersion Ignore -Verbosity detailed
    - name: Restore
      run: |
        nuget restore .\Monaco.sln
    - name: Build docs
      working-directory: Documentation
      run: docfx docfx.json
    - uses: actions/upload-artifact@v2
      with:
        name: site
        path: ./Documentation/_site/
        if-no-files-found: error

  publish-pages:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/download-artifact@v2
      with:
        name: site
        path: _site
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.REPO_TOKEN }}
        publish_dir: ./_site
        keep_files: true

  publish-web:
    runs-on: [self-hosted, Windows, monaco]

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: site
        path: _site
    - name: Upload
      shell: cmd
      run: |
        FOR /F "tokens=* USEBACKQ" %%F IN (`rclone obscure ${{ secrects.DOCS_FTP_PASS }}`) DO (
          SET FTP_PASS=%%F
        )
        rclone sync _site :ftp:docs --ftp-host=${{ secrects.DOCS_FTP_URL }} --ftp-user=${{ secrects.DOCS_FTP_USER }} --ftp-pass=%FTP_PASS% --no-update-modtime
