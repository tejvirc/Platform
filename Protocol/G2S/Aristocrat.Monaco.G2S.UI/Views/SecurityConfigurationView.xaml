<operatorMenu:OperatorMenuPage x:Class="Aristocrat.Monaco.G2S.UI.Views.SecurityConfigurationView"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                               xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                               xmlns:lex="http://wpflocalizeextension.codeplex.com"
                               lex:ResxLocalizationProvider.DefaultAssembly="Aristocrat.Monaco.Localization"
                               lex:ResxLocalizationProvider.DefaultDictionary="Resources" 
                               xmlns:loc="http://monaco.aristocrat.com/localization"
                               xmlns:viewModels="clr-namespace:Aristocrat.Monaco.G2S.UI.ViewModels"
                               xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                               xmlns:operatorMenu="clr-namespace:Aristocrat.Monaco.Application.UI.OperatorMenu;assembly=Aristocrat.Monaco.Application.UI"
                               FocusManager.FocusedElement="{Binding ElementName=ScepEnabledCheckbox}"
                               Background="Transparent"
                               mc:Ignorable="d" d:DesignHeight="800" d:DesignWidth="1000"
                               d:DataContext="{d:DesignInstance {x:Type viewModels:SecurityConfigurationViewModel}}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/OperatorMenu.xaml"/>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/Converters.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <controls:MetroTabControl controls:TabControlHelper.Underlined="TabItems" Background="Transparent">
            <TabItem Header="SCEP" IsEnabled="{Binding TabsActive}">
                <AdornerDecorator>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".5*"/>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width=".5*"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0" Margin="0,20,0,10">
                        <CheckBox Name="ScepEnabledCheckbox"
                                  Tag="{lex:Loc SecurityConfiguration_ScepEnabled}" 
                                  IsChecked="{Binding Path=EnrollmentEnabled, Mode=TwoWay}"
                                  IsEnabled="{Binding Path=ScepEnabled, Mode=OneWay}"
                                  Style="{DynamicResource MonacoCheckBoxGeneral}"/>
                        <Label Content="{lex:Loc SecurityConfiguration_ScepEnabled}" VerticalAlignment="Center" />
                    </StackPanel>

                    <Label Grid.Column="0" Grid.Row="1" Content="{lex:Loc SecurityConfiguration_ManagerLocation}" />
                    <TextBox Grid.Column="0" Grid.Row="2" Text="{Binding Path=CertificateManagerLocation, ValidatesOnDataErrors=True, Mode=TwoWay}" IsEnabled="{Binding Path=EnrollmentEditEnabled, Mode=OneWay}" InputScope="Url" Margin="5,0,0,0" />

                    <Label Grid.Column="0" Grid.Row="3" Content="{lex:Loc CertificatePreSharedSecretTitle}" />
                    <TextBox Grid.Column="0" Grid.Row="4" Text="{Binding Path=PreSharedSecret, ValidatesOnDataErrors=True, Mode=TwoWay}" 
                             IsEnabled="{Binding Path=EnrollmentEditEnabled, Mode=OneWay}" InputScope="Password" Margin="5,0,0,0" />

                    <Label Grid.Column="0" Grid.Row="5" Content="{lex:Loc SecurityConfiguration_Scep_CaIdent}"  />
                    <TextBox Grid.Column="0" Grid.Row="6" Text="{Binding Identity, ValidatesOnDataErrors=True, Mode=TwoWay}" 
                             IsEnabled="{Binding Path=EnrollmentEditEnabled}" InputScope="Default" Margin="5,0,0,0" />

                    <Label Grid.Column="0" Grid.Row="7" Content="{lex:Loc SecurityConfiguration_Scep_UsernameField}" />
                    <TextBox Grid.Column="0" Grid.Row="8" Text="{Binding Path=UserName, ValidatesOnDataErrors=True, Mode=TwoWay}" 
                             IsEnabled="{Binding Path=EnrollmentEditEnabled}" InputScope="LogOnName" Margin="5,0,0,0"/>

                    <Grid Grid.Column="0" Grid.Row="9" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width=".5*"/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width=".5*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Grid.Row="0" Content="{lex:Loc SecurityConfiguration_KeySize}" />
                        <ComboBox Grid.Column="0" Grid.Row="1" IsEnabled="{Binding Path=EnrollmentEditEnabled}" 
                                  ItemsSource="{Binding KeySizes}" SelectedItem="{Binding KeySize}" 
                                  Margin="5,0,0,0" Width="100" HorizontalAlignment="Left"/>

                        <Label Grid.Column="2" Grid.Row="0" Content="{lex:Loc SecurityConfiguration_Scep_ManualPollingInterval}" />
                        <TextBox Grid.Column="2" Grid.Row="1" 
                                 Text="{Binding Path=ManualPollingInterval, ValidatesOnDataErrors=True, Mode=TwoWay}" 
                                 IsEnabled="{Binding Path=EnrollmentEnabled}" InputScope="Number" 
                                 Margin="5,0,0,0" Width="150" HorizontalAlignment="Left"/>
                    </Grid>

                    <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="10" Margin="5,20,0,0">
                        <CheckBox Tag="{lex:Loc SecurityConfiguration_ValidateDomain}" 
                                  IsChecked="{Binding Path=ValidateDomain, Mode=TwoWay}" 
                                  IsEnabled="{Binding Path=EnrollmentEnabled}" />
                        <Label Content="{lex:Loc SecurityConfiguration_ValidateDomain}" />
                    </StackPanel>

                    <StackPanel Grid.Column="0" Grid.Row="11" Grid.ColumnSpan="3" Orientation="Horizontal" Margin="5,25,0,0">
                        <Button Content="{Binding RequestButtonCaption}" 
                                Command="{Binding EnrollCertificateCommand}" Margin="0,0,0,0" Width="350" />
                        <Button Content="{lex:Loc Buttons_GetThumbprint}" 
                                Command="{Binding GetThumbprintCommand}" Margin="40,0,0,0"  Width="350"/>
                    </StackPanel>

                </Grid>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="OCSP">
                <TabItem.Style>
                    <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding TabsActive}" Value="True" />
                                    <Condition Binding="{Binding ShowSCEPRequestStatus}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <AdornerDecorator>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".5*"/>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width=".5*"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal" Grid.Row="0" IsEnabled="True" Margin="0,20,0,10">
                        <!--IsEnabled="{Binding Path=EnrollmentEnabled}" >-->
                        <CheckBox Tag="{lex:Loc SecurityConfiguration_OcspEnabled}" 
                                  IsChecked="{Binding Path=RenewalEnabled, Mode=TwoWay}" 
                                  Style="{DynamicResource MonacoCheckBoxGeneral}"/>
                        <Label Content="{lex:Loc SecurityConfiguration_OcspEnabled}" VerticalAlignment="Center"/>
                    </StackPanel>

                    <Label Grid.Column="0" Grid.Row="1" Content="{lex:Loc SecurityConfiguration_OcspResponderAddress}" />
                    <TextBox Grid.Column="0" Grid.Row="2" Text="{Binding Path=CertificateStatusLocation, ValidatesOnDataErrors=True, Mode=TwoWay}" IsEnabled="{Binding Path=RenewalEnabled}" InputScope="Url" Margin="5,5,0,0"/>
                    <Label Grid.Column="1" Grid.Row="2" Content="{lex:Loc SecurityConfiguration_RequiredText}" 
                           VerticalAlignment="Center" Foreground="{lex:Loc SecurityConfiguration_RequiredForegroundColor}"
                           Visibility="{Binding Path=RenewalEnabled, Converter={StaticResource TrueVisibleFalseCollapsed}}" />

                    <Label Grid.Column="0" Grid.Row="3" Content="{lex:Loc SecurityConfiguration_MaxPeriodOffline}" />
                    <TextBox Grid.Column="0" Grid.Row="4" Text="{Binding OfflinePeriod, ValidatesOnDataErrors=True, Mode=TwoWay}" IsEnabled="{Binding Path=RenewalEnabled}" InputScope="Number" Margin="5,5,0,0"/>

                    <Label Grid.Column="0" Grid.Row="5" Content="{lex:Loc SecurityConfiguration_ReAuthenticatePeriod}" />
                    <TextBox Grid.Column="0" Grid.Row="6" Text="{Binding ReAuthenticatedPeriod, ValidatesOnDataErrors=True, Mode=TwoWay}" IsEnabled="{Binding Path=RenewalEnabled}" InputScope="Number" Margin="5,5,0,0"/>

                    <Label Grid.Column="0" Grid.Row="7" Content="{lex:Loc SecurityConfiguration_AcceptPreviousCertPeriod}" />
                    <TextBox Grid.Column="0" Grid.Row="8" Text="{Binding AcceptPreviouslyGoodCertificatePeriod, ValidatesOnDataErrors=True, Mode=TwoWay}" IsEnabled="{Binding Path=RenewalEnabled}" InputScope="Number" Margin="5,5,0,0"/>

                    <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="9" Margin="5,5,0,0">
                        <!--IsEnabled="{Binding Path=EnrollmentEnabled}" >-->
                        <CheckBox Tag="{lex:Loc SecurityConfiguration_NoncesEnabled}" 
                                  IsChecked="{Binding NoncesEnabled, Mode=TwoWay}" 
                                  Style="{DynamicResource MonacoCheckBoxGeneral}"/>
                        <Label Content="{lex:Loc SecurityConfiguration_NoncesEnabled}" VerticalAlignment="Center"/>
                    </StackPanel>

                    <StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="10">
                        <Button Content="{lex:Loc SecurityConfiguration_OcspResponderTest}" Command="{Binding TestCertificateStatusCommand}" Margin="0,10,0,0" />
                    </StackPanel>
                    </Grid>
                    </AdornerDecorator>
            </TabItem>
        </controls:MetroTabControl>

        <Grid Margin="-20,-200,-20,0" Visibility="{Binding Path=ShowSCEPRequestStatus, Converter={StaticResource TrueVisibleFalseCollapsed}}" >
            <Border Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,368,0,176" >
                <DockPanel LastChildFill="True">
                    <Label DockPanel.Dock="Top" Content="{lex:Loc StatusText}"  HorizontalAlignment="Center" />
                        <Label DockPanel.Dock="Top" Margin="10"  Content="{Binding RequestStatus}" HorizontalAlignment="Center" Visibility="Visible" />
                    <Button DockPanel.Dock="Bottom" Margin="10" Content="{lex:Loc Cancel}" Command="{Binding CancelRequestCommand}" HorizontalAlignment="Center" />
                </DockPanel>
            </Border>
        </Grid>

        <Grid Margin="-20,-200,-20,0" Visibility="{Binding Path=ShowOSCPRequestStatus, Converter={StaticResource TrueVisibleFalseCollapsed}}" >
            <Border Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,368,0,176" >
                <DockPanel LastChildFill="True">
                    <Label DockPanel.Dock="Top" Content="{lex:Loc StatusText}"  HorizontalAlignment="Center" />
                    <Label DockPanel.Dock="Top" Margin="10"  Content="{Binding RequestStatus}" HorizontalAlignment="Center" Visibility="Visible" />
                </DockPanel>
            </Border>
        </Grid>
        
        <Grid Margin="-20,-320,-20,0" Visibility="{Binding Path=ShowThumbprint, Converter={StaticResource TrueVisibleFalseCollapsed}}" >
            <Border Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Center" >
                <DockPanel LastChildFill="True">
                    <Label Content="{lex:Loc SecurityConfiguration_Thumbprint}" DockPanel.Dock="Top" HorizontalAlignment="Center" />
                    <Button DockPanel.Dock="Bottom" Content="{lex:Loc Close}" Command="{Binding ClosePopupCommand}" HorizontalAlignment="Center" />
                    <Label Margin="10" DockPanel.Dock="Top" Content="{Binding Thumbprint}" HorizontalAlignment="Center"/>
                </DockPanel>
            </Border>
        </Grid>

        <Grid Margin="-20,-35,-20,0" Visibility="{Binding Path=ShowInvalidServerResponse, Converter={StaticResource TrueVisibleFalseCollapsed}}" >
            <Border Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,468,0,126" >
                <DockPanel LastChildFill="True">
                    <Label Content="{lex:Loc StatusText}" DockPanel.Dock="Top" HorizontalAlignment="Center" />
                    <Label Content="{lex:Loc SecurityConfiguration_InvalidServerResponse}" DockPanel.Dock="Top" Margin="10" HorizontalAlignment="Center" />
                    <Button DockPanel.Dock="Bottom" Content="{lex:Loc Close}" Command="{Binding ClosePopupCommand}" HorizontalAlignment="Center" />
                </DockPanel>
            </Border>
        </Grid>

        <Grid Margin="-20,-35,-20,0" Visibility="{Binding Path=ShowInvalidCertStatusLocation, Converter={StaticResource TrueVisibleFalseCollapsed}}" >
            <Border Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,468,0,126" >
                <DockPanel LastChildFill="True">
                    <Label Content="{lex:Loc StatusText}" DockPanel.Dock="Top" HorizontalAlignment="Center" />
                    <Label Content="{lex:Loc SecurityConfiguration_InvalidCertLocation}" DockPanel.Dock="Top" Margin="10" HorizontalAlignment="Center" />
                    <Button DockPanel.Dock="Bottom" Content="{lex:Loc Close}" Command="{Binding ClosePopupCommand}" HorizontalAlignment="Center" />
                </DockPanel>
            </Border>
        </Grid>

    </Grid>
</operatorMenu:OperatorMenuPage>



