<operatorMenu:OperatorMenuPage x:Class="Aristocrat.Monaco.G2S.UI.Views.CertificatesView"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                               xmlns:lex="http://wpflocalizeextension.codeplex.com"
                               lex:ResxLocalizationProvider.DefaultAssembly="Aristocrat.Monaco.Localization"
                               lex:ResxLocalizationProvider.DefaultDictionary="Resources"
                               xmlns:operatorMenu="clr-namespace:Aristocrat.Monaco.Application.UI.OperatorMenu;assembly=Aristocrat.Monaco.Application.UI"
                               xmlns:viewModels="clr-namespace:Aristocrat.Monaco.G2S.UI.ViewModels"
                               xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                               xmlns:common="clr-namespace:Aristocrat.Monaco.UI.Common;assembly=Aristocrat.Monaco.UI.Common"
                               mc:Ignorable="d"
                               d:DataContext="{d:DesignInstance viewModels:CertificatesViewModel, IsDesignTimeCreatable=False}"
                               FocusManager.FocusedElement="{Binding ElementName=MainMenu}"
                               Background="Transparent"
                               common:DialogParticipation.Register="{Binding}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/OperatorMenu.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="CertificateNavButton" TargetType="Button" BasedOn="{StaticResource MonacoButton1}" >
                <Setter Property="Margin" Value="5 5 0 5" />
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Padding" Value="15" />
            </Style>
            
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="4"  Content="{lex:Loc CertificateRenewButtonTitle}" 
                    Command="{Binding RenewCertificateCommand, Mode=OneWay}" 
                    IsEnabled="{Binding Path=RenewEnabled, Converter={StaticResource BoolToVisConverter}}" 
                    VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="5,5,0,5"  />
            <Button Grid.Column="5" Content="{lex:Loc CertificateRemoveButtonTitle}"  
                    Command="{Binding RemoveCertificateCommand, Mode=OneWay}" 
                    IsEnabled="{Binding Path=RemoveEnabled, Converter={StaticResource BoolToVisConverter}}" 
                    VerticalAlignment="Bottom" HorizontalAlignment="Right"  Margin="5,5,0,5" />
            <Button Grid.Column="2"  
                    Command="{Binding RollUpCommand, Mode=OneWay}" 
                    Style="{StaticResource CertificateNavButton}">
                <iconPacks:PackIconMaterial 
                    Kind="ArrowUpBold"
                    Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}" />
            </Button>
            <Button Grid.Column="1"  
                    Command="{Binding DrillDownCommand, Mode=OneWay}" 
                    Style="{StaticResource CertificateNavButton}">
                <iconPacks:PackIconMaterial 
                    Kind="ArrowDownBold"
                    Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}" />
            </Button>
            <StackPanel Margin="10" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left"  
                        Visibility="{Binding Path=EnrollEnabled, Converter={StaticResource BoolToVisConverter}}" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.Column="0" Content="{lex:Loc CertificatePreSharedSecretTitle}" Margin="10,5,0,0"/>
                    <TextBox Grid.Row="0" Grid.Column="1" Name="PreSharedSecret" Width="200"  Margin="5,5,0,0" IsEnabled="{Binding IsScepEnabled, Mode=OneWay}">
                        <TextBox.Text>
                            <Binding Path="PreSharedSecret" UpdateSourceTrigger="PropertyChanged" />
                        </TextBox.Text>
                    </TextBox>

                    <Button Grid.Row="0" Grid.Column="3" Content="{lex:Loc CertificateEnrollButtonTitle}" 
                         Command="{Binding EnrollCertificateCommand, Mode=OneWay}" Margin="5,5,0,0" 
                         VerticalAlignment="Bottom" HorizontalAlignment="Right" >
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource MonacoButton}">
                                <Setter Property="IsEnabled" Value="false" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=PreSharedSecret, Path=(Validation.HasError)}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="true" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </StackPanel>
        </Grid>

        <DataGrid Name="CertificatesViewer" 
                  Grid.Row="1"
                  ItemsSource="{Binding CertificateInfoData, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedItem="{Binding SelectedCertificate}">
           
            <DataGrid.Columns>
                <DataGridTextColumn Header="{lex:Loc NameLabel}" Width="Auto" Binding="{Binding CommonName}" />
                <DataGridTextColumn Header="{lex:Loc CertificateThumbprint}" Width="Auto" Binding="{Binding Thumbprint}" FontSize="14"/>
                <DataGridTextColumn Header="{lex:Loc CertificateNotBefore}" Width="Auto" Binding="{Binding NotBefore}" />
                <DataGridTextColumn Header="{lex:Loc CertificateNotAfter}" Width="Auto" Binding="{Binding NotAfter}" />
                <DataGridTextColumn Header="{lex:Loc CertificateVerifyDate}" Width="Auto" Binding="{Binding VerificationDate}" />
                <DataGridTextColumn Header="{lex:Loc StatusText}" Width="Auto" Binding="{Binding Status}" />
                <DataGridTextColumn Header="{lex:Loc CertificateOcspOfflineDate}" Width="Auto" Binding="{Binding OcspOfflineDate}" />
            </DataGrid.Columns>
        </DataGrid>

        <Grid Grid.Row="1" 
              Grid.RowSpan="3"
              Visibility="{Binding Path=ShowRequestStatus, Converter={StaticResource BoolToVisConverter}}">
            <Border Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Center" >
                <DockPanel LastChildFill="True">
                    <Label Content="{lex:Loc StatusText}" DockPanel.Dock="Top" HorizontalAlignment="Center" />
                    <Button DockPanel.Dock="Bottom" 
                            Margin="10" 
                            Content="{lex:Loc Cancel}" 
                            Command="{Binding CancelRequestCommand}" 
                            HorizontalAlignment="Center" />
                    <Label DockPanel.Dock="Bottom" 
                           Content="{Binding RequestStatus}" 
                           HorizontalAlignment="Center" />
                </DockPanel>
            </Border>
        </Grid>
    </Grid>
    
</operatorMenu:OperatorMenuPage>

