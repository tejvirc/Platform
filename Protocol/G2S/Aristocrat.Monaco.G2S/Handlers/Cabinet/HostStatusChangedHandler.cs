namespace Aristocrat.Monaco.G2S.Handlers.Cabinet
{
    using Aristocrat.G2S;
    using Aristocrat.G2S.Client.Devices;
    using Aristocrat.G2S.Client.Devices.v21;
    using Aristocrat.G2S.Protocol.v21;

    public class HostStatusChangedHandler : IStatusChangedHandler<ICabinetDevice>
    {
        private readonly ICommandBuilder<ICabinetDevice, cabinetStatus> _commandBuilder;
        private readonly IEventLift _eventLift;

        public HostStatusChangedHandler(
            ICommandBuilder<ICabinetDevice, cabinetStatus> commandBuilder,
            IEventLift eventLift)
        {
            _commandBuilder = commandBuilder;
            _eventLift = eventLift;
        }

        public void Handle(ICabinetDevice device)
        {
            // If the cabinet device is disabled G2S_CBE003 will be generated by the EgmStateObserver
            if (device.HostEnabled)
            {
                var status = new cabinetStatus();
                _commandBuilder.Build(device, status);
                _eventLift.Report(device, EventCode.G2S_CBE004, device.DeviceList(status));
            }
        }
    }
}