<operatorMenu:OperatorMenuPage x:Class="Aristocrat.Monaco.Sas.UI.ConfigurationScreen.SasConfigurationPage"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"  
                               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                               xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Sas.UI.ViewModels"
                               xmlns:operatorMenu="clr-namespace:Aristocrat.Monaco.Application.UI.OperatorMenu;assembly=Aristocrat.Monaco.Application.UI"
                               xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                               xmlns:helpers="http://monaco.aristocrat.com/common"
                               xmlns:cs="clr-namespace:Aristocrat.Monaco.Sas.UI.ConfigurationScreen"
                               xmlns:lex="http://wpflocalizeextension.codeplex.com"
                               lex:ResxLocalizationProvider.DefaultAssembly="Aristocrat.Monaco.Localization"
                               lex:ResxLocalizationProvider.DefaultDictionary="Resources" 
                               xmlns:loc="http://monaco.aristocrat.com/localization"
                               mc:Ignorable="d"
                               d:DataContext="{d:DesignInstance {x:Type viewModels:SasConfigurationViewModel}}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Aristocrat.Monaco.UI.Common;component/Skins/OperatorMenu.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <helpers:CurrencyConverter x:Key="CurrencyConverter"/>

            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MonacoCheckBoxGeneral}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="10"/>
            </Style>
            <Style TargetType="{x:Type cs:OptionalRadioButton}" BasedOn="{StaticResource MonacoRadioButton}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="10"/>
            </Style>

            <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MonacoRadioButton}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="10"/>
            </Style>

            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MonacoComboBox}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource MonacoLabel}">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <Style TargetType="{x:Type helpers:AlphaNumericTextBox}" BasedOn="{StaticResource MonacoTextBox}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Margin" Value="10 5"/>
                <Setter Property="MaxLength" Value="10"/>
                <Setter Property="MinWidth" Value="90"/>
                <Setter Property="Padding" Value="10 5"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Label Grid.Column="0" 
               Grid.Row="0" 
               Content="{lex:Loc DualHost}"/>

        <controls:ToggleSwitch Grid.Row="1" 
                                     Grid.Column="0"
                                     IsEnabled="{Binding InputEnabled}"
                                     controls:ControlsHelper.CornerRadius="0"
                                     helpers:ToggleSwitchButtonHelper.OffContent="{lex:Loc Off}"
                                     helpers:ToggleSwitchButtonHelper.OnContent="{lex:Loc On}"/>

        <GroupBox Grid.Column="0" 
                  Grid.Row="2" 
                  Header="{lex:BLoc PortAssignmentGroupHeader}" 
                  Margin="0 20 0 0"
                  IsEnabled="{Binding InputEnabled}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition>
                        <RowDefinition.Style>
                            <Style TargetType="RowDefinition">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SasProtocolConfiguration.IsValidationHandled}" Value="True">
                                        <Setter Property="Height" Value="Auto"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SasProtocolConfiguration.IsValidationHandled}" Value="False">
                                        <Setter Property="Height" Value="0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RowDefinition.Style>
                    </RowDefinition>
                    <RowDefinition>
                        <RowDefinition.Style>
                            <Style TargetType="RowDefinition">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SasProtocolConfiguration.IsFundTransferHandled}" Value="True">
                                        <Setter Property="Height" Value="Auto"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SasProtocolConfiguration.IsFundTransferHandled}" Value="False">
                                        <Setter Property="Height" Value="0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RowDefinition.Style>
                    </RowDefinition>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition>
                        <RowDefinition.Style>
                            <Style TargetType="RowDefinition">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SasProtocolConfiguration.IsProgressiveHandled}" Value="True">
                                        <Setter Property="Height" Value="Auto"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SasProtocolConfiguration.IsProgressiveHandled}" Value="False">
                                        <Setter Property="Height" Value="0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RowDefinition.Style>
                    </RowDefinition>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" 
                       Grid.Column ="1" 
                       Content="{lex:BLoc Host1Label}" 
                       HorizontalContentAlignment="Center"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"/>

                <Label Grid.Row="0" 
                       Grid.Column="2" 
                       Content="{lex:BLoc Host2Label}" 
                       HorizontalContentAlignment="Center"
                       Visibility="{Binding DualHostSetup, Converter={StaticResource BoolToVisHiddenConverter}, UpdateSourceTrigger=PropertyChanged}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"/>

                <Label x:Name="AddressLabel" 
                       Grid.Row="1" 
                       Grid.Column ="0" 
                       Content="{lex:BLoc AddressLabel}"/>
 
                <helpers:AlphaNumericTextBox x:Name="Address1TextBox" 
                                             Grid.Row="1" 
                                             Grid.Column="1"
                                             IsReadOnly="False"
                                             IsAlphaNumeric="False"
                                             CanBeEmpty="False"
                                             CharacterCasing="Upper"
                                             VerticalAlignment="Center"
                                             TextChanged="SasAddressTextBox_OnTextChanged"
                                             Text="{
                                                Binding CommunicationAddress1, 
                                                Mode=TwoWay, 
                                                UpdateSourceTrigger=PropertyChanged, 
                                                ValidatesOnDataErrors=True, 
                                                NotifyOnValidationError=True}" 
                                             ErrorText="{
                                                Binding CommunicationAddress1ErrorText, 
                                                Mode=TwoWay, 
                                                UpdateSourceTrigger=PropertyChanged}"
                                             IsEnabled="{Binding AddressHost1Editable}"
                                             MaxLength="{Binding CommunicationAddress1MaxLength, Mode=OneWay}"/>

                <helpers:AlphaNumericTextBox x:Name="Address2TextBox" 
                                             Grid.Row="1" 
                                             Grid.Column="2"
                                             IsReadOnly="False"
                                             IsAlphaNumeric="False"
                                             CanBeEmpty="False"
                                             CharacterCasing="Upper"
                                             VerticalAlignment="Center"
                                             TextChanged="SasAddressTextBox_OnTextChanged"
                                             Text="{
                                                Binding CommunicationAddress2, 
                                                Mode=TwoWay, 
                                                UpdateSourceTrigger=PropertyChanged, 
                                                ValidatesOnDataErrors=True, 
                                                NotifyOnValidationError=True}" 
                                             ErrorText="{
                                                Binding CommunicationAddress2ErrorText, 
                                                Mode=TwoWay, 
                                                UpdateSourceTrigger=PropertyChanged}"
                                             IsEnabled="{Binding AddressHost2Editable}"
                                             MaxLength="{Binding CommunicationAddress2MaxLength, Mode=OneWay}"
                                             Visibility="{Binding DualHostSetup, Converter={StaticResource BoolToVisHiddenConverter}, UpdateSourceTrigger=PropertyChanged}"/>

                <Label x:Name="GeneralControlPortLabel" 
                       Grid.Row="2" 
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       Content="{lex:BLoc GeneralControlPortLabel}"/>

                <RadioButton x:Name="Host1GeneralControlCheck" 
                             Grid.Row="2" 
                             Grid.Column ="1" 
                             GroupName="GeneralControlHost"
                             VerticalAlignment="Center"
                             IsEnabled="{Binding GeneralControlEditable}"
                             IsChecked="{Binding GeneralControlOnHost1, Mode=TwoWay}" />

                <RadioButton x:Name="Host2GeneralControlCheck" 
                             Grid.Row="2" 
                             Grid.Column="2" 
                             GroupName="GeneralControlHost"
                             VerticalAlignment="Center"
                             IsEnabled="{Binding GeneralControlEditable}"
                             IsChecked="{Binding GeneralControlOnHost2, Mode=TwoWay}" 
                             Visibility="{Binding DualHostSetup, Converter={StaticResource BoolToVisHiddenConverter}, UpdateSourceTrigger=PropertyChanged}"/>

                <Label Grid.Row="3" 
                       Grid.Column="0" 
                       VerticalAlignment="Center"
                       Content="{lex:BLoc AccountingDenom}"/>

                <ComboBox Grid.Row="3" 
                          Grid.Column ="1"
                          Margin="10 5"
                          ItemsSource="{Binding AccountingDenoms}"
                          VerticalAlignment="Center"
                          SelectedIndex="{Binding AccountingDenom1Index, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                          SelectedItem="{Binding AccountingDenom1, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource CurrencyConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <Grid Grid.Row="3" 
                      Grid.Column ="2"
                      VerticalAlignment="Center"
                      Visibility="{Binding DualHostSetup, Converter={StaticResource BoolToVisHiddenConverter}, UpdateSourceTrigger=PropertyChanged}">

                    <ComboBox ItemsSource="{Binding AccountingDenoms}"
                              SelectedIndex="{Binding AccountingDenom2Index, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                              SelectedItem="{Binding AccountingDenom2, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                              Margin="10 5">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource CurrencyConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>

                <Label x:Name="ValidationPortLabel" 
                       Grid.Row="4" 
                       Grid.Column ="0" 
                       VerticalAlignment="Center"
                       Content="{lex:BLoc ValidationPortLabel}"/>

                <cs:OptionalRadioButton x:Name="Host1ValidationCheck" 
                          Grid.Row="4" Grid.Column ="1"
                          GroupName="Validation"
                          VerticalAlignment="Center"
                          IsChecked="{Binding ValidationOnHost1, Mode=TwoWay}"/>

                <cs:OptionalRadioButton x:Name="Host2ValidationCheck" 
                          Grid.Row="4" 
                          Grid.Column ="2"
                          GroupName="Validation"
                          VerticalAlignment="Center"
                          IsChecked="{Binding ValidationOnHost2, Mode=TwoWay}"
                          Visibility="{Binding DualHostSetup, Converter={StaticResource BoolToVisHiddenConverter}, UpdateSourceTrigger=PropertyChanged}"/>

                <Label x:Name="AftPortLabel" 
                       Grid.Row="5" 
                       Grid.Column="0" 
                       VerticalAlignment="Center"
                       Content="{lex:BLoc AftPortLabel}"/>

                <cs:OptionalRadioButton x:Name="Host1AftCheck" 
                          Grid.Row="5" 
                          Grid.Column ="1"
                          GroupName="Aft"
                          VerticalAlignment="Center"
                          IsChecked="{Binding AftOnHost1, Mode=TwoWay}"/>

                <cs:OptionalRadioButton x:Name="Host2AftCheck" 
                          Grid.Row="5" 
                          Grid.Column ="2"
                          GroupName="Aft"
                          VerticalAlignment="Center"
                          IsChecked="{Binding AftOnHost2, Mode=TwoWay}"
                          Visibility="{Binding DualHostSetup, Converter={StaticResource BoolToVisHiddenConverter}, UpdateSourceTrigger=PropertyChanged}"/>

                <Label x:Name="LegacyBonusingPortLabel" 
                       Grid.Row="6" 
                       Grid.Column="0" 
                       VerticalAlignment="Center"
                       Content="{lex:BLoc LegacyBonusPortLabel}"/>

                <cs:OptionalRadioButton x:Name="Host1LegacyBonusCheck" 
                          Grid.Row="6" 
                          Grid.Column ="1"
                          GroupName="Bonus"
                          VerticalAlignment="Center"
                          IsChecked="{Binding LegacyBonusOnHost1, Mode=TwoWay}"/>

                <cs:OptionalRadioButton x:Name="Host2LegacyBonusCheck" 
                          Grid.Row="6" 
                          Grid.Column ="2"
                          GroupName="Bonus"
                          VerticalAlignment="Center"
                          IsChecked="{Binding LegacyBonusOnHost2, Mode=TwoWay}"
                          Visibility="{Binding DualHostSetup, Converter={StaticResource BoolToVisHiddenConverter}, UpdateSourceTrigger=PropertyChanged}"/>

                <Label x:Name="GameStartEndPortLabel" 
                       Grid.Row="7" 
                       Grid.Column ="0"
                       VerticalAlignment="Center"
                       Content="{lex:BLoc GameStartEndPortLabel}"/>

                <CheckBox x:Name="Host1GameStartEndCheck" 
                                        Grid.Row="7" 
                                        Grid.Column="1" 
                                        VerticalAlignment="Center"
                                        IsChecked="{Binding GameStartEndOnHost1, Mode=TwoWay}" />

                <CheckBox x:Name="Host2GameStartEndCheck" 
                                        Grid.Row="7" 
                                        Grid.Column="2"
                                        VerticalAlignment="Center"
                                        IsChecked="{Binding GameStartEndOnHost2, Mode=TwoWay}" 
                                        Visibility="{Binding DualHostSetup, Converter={StaticResource BoolToVisHiddenConverter}, UpdateSourceTrigger=PropertyChanged}"/>

                <Label x:Name="ProgressivePortLabel" 
                       Grid.Row="8" 
                       Grid.Column ="0" 
                       VerticalAlignment="Center"
                       Content="{lex:BLoc ProgressivePortLabel}"/>

                <cs:OptionalRadioButton x:Name="Host1ProgressiveCheck" 
                                        Grid.Row="8" 
                                        Grid.Column="1" 
                                        GroupName="ProgHost"
                                        VerticalAlignment="Center"
                                        IsChecked="{Binding ProgressiveOnHost1, Mode=TwoWay}" />

                <cs:OptionalRadioButton x:Name="Host2ProgressiveCheck" 
                                        Grid.Row="8" 
                                        Grid.Column="2"
                                        GroupName="ProgHost"
                                        VerticalAlignment="Center"
                                        IsChecked="{Binding ProgressiveOnHost2, Mode=TwoWay}" 
                                        Visibility="{Binding DualHostSetup, Converter={StaticResource BoolToVisHiddenConverter}, UpdateSourceTrigger=PropertyChanged}"/>

                <Label x:Name="NonSasProgressiveHitReportingLabel" 
                       Grid.Row="9" 
                       Grid.Column ="0"
                       VerticalAlignment="Center"
                       Content="{lex:BLoc NonSasProgressiveHitReportingLabel}"/>

                <CheckBox x:Name="Host1NonSasProgressiveHitReporting" 
                          Grid.Row="9" 
                          Grid.Column="1" 
                          VerticalAlignment="Center"
                          IsChecked="{Binding NonSasProgressiveHitReportingHost1, Mode=TwoWay}" />

                <CheckBox x:Name="Host2NonSasProgressiveHitReporting" 
                          Grid.Row="9" 
                          Grid.Column="2"
                          VerticalAlignment="Center"
                          IsChecked="{Binding NonSasProgressiveHitReportingHost2, Mode=TwoWay}" 
                          Visibility="{Binding DualHostSetup, Converter={StaticResource BoolToVisHiddenConverter}, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </GroupBox>

        <Grid Grid.Column="2" 
              Grid.Row="2"
              Margin="15 15 0 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Label x:Name="ProgGroupId" 
                   Grid.Row="0" 
                   Grid.Column="0" 
                   Content="{lex:BLoc ProgGroupIdLabel}" 
                   VerticalAlignment="Bottom"
                   HorizontalAlignment="Left"
                   Visibility="{Binding SasProtocolConfiguration.IsProgressiveHandled, Converter={StaticResource BoolToVisHiddenConverter}, UpdateSourceTrigger=PropertyChanged}"/>

            <helpers:AlphaNumericTextBox x:Name="ProgGroupIdTextBox" 
                                         Grid.Row="1" 
                                         Grid.Column="0"
                                         VerticalAlignment="Bottom"
                                         HorizontalAlignment="Left"
                                         HorizontalContentAlignment="Left"
                                         Width="450"
                                         Height="50"
                                         IsReadOnly="False"
                                         IsAlphaNumeric="False"
                                         CanBeEmpty="False"
                                         CharacterCasing="Upper" 
                                         Text="{
                                                Binding ProgressiveGroupId, 
                                                Mode=TwoWay, 
                                                UpdateSourceTrigger=PropertyChanged, 
                                                ValidatesOnDataErrors=True, 
                                                NotifyOnValidationError=True}" 
                                         ErrorText="{
                                                Binding ProgressiveGroupIdErrorText, 
                                                Mode=TwoWay, 
                                                UpdateSourceTrigger=PropertyChanged}"
                                         IsEnabled="{Binding InputEnabled}"                                                
                                         MaxLength="{Binding ProgressiveGroupIdMaxLength, Mode=OneWay}"
                                         Visibility="{Binding SasProtocolConfiguration.IsProgressiveHandled, Converter={StaticResource BoolToVisHiddenConverter}, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
    </Grid>
</operatorMenu:OperatorMenuPage>
