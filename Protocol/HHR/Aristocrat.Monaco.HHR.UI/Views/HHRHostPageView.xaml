<UserControl x:Class="Aristocrat.Monaco.Hhr.UI.Views.HHRHostPageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d" 
             xmlns:viewModels="clr-namespace:Aristocrat.Monaco.Hhr.UI.ViewModels"
             xmlns:views="clr-namespace:Aristocrat.Monaco.Hhr.UI.Views"
             xmlns:controls="clr-namespace:Aristocrat.Monaco.Hhr.UI.Controls"
             xmlns:common="http://monaco.aristocrat.com/common"
             xmlns:menu="clr-namespace:Aristocrat.Monaco.Hhr.UI.Menu"
             d:DataContext="{d:DesignInstance Type=viewModels:HostPageViewModelManager}"
             x:Name="Root"
             d:DesignHeight="300" d:DesignWidth="808">

    <UserControl.Resources>

        <ResourceDictionary>

            <DataTemplate DataType="{x:Type viewModels:ManualHandicapHelpPageViewModel}">
                <views:ManualHandicapHelpPageView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:PreviousRaceResultPageViewModel}">
                <views:PreviousRaceResultPageView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:HelpPageViewModel}">
                <views:HelpPageView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:RaceStatsPageViewModel}">
                <views:RaceStatsPageView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:ManualHandicapPageViewModel}">
                <views:ManualHandicapPageView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:CurrentProgressivePageViewModel}">
                <views:CurrentProgressivePageView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:WinningCombinationPageViewModel}">
                <views:WinningCombinationPageView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:BetHelpPageViewModel}">
                <views:BetHelpPageView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type menu:HhrPageCommand}">
                <controls:HHRButton ></controls:HHRButton>
            </DataTemplate>

            <common:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" TrueValue="Visible" FalseValue="Hidden" />

        </ResourceDictionary>

    </UserControl.Resources>

    <Viewbox x:Name="RootViewBox"  VerticalAlignment="Bottom">

        <Grid x:Name="OuterGrid" VerticalAlignment="Top">

            <Grid.Background>
                <ImageBrush Stretch="UniformToFill" ImageSource="../Resources/ShaderSL.png" />
            </Grid.Background>

            <Grid x:Name="InnerGrid" VerticalAlignment="Top" Margin="30 0 30 0">

                <!-- Header -->

                <Grid x:Name="HeaderGrid" VerticalAlignment="Top" Margin="0 30 0 0">
                    <Viewbox>
                        <Image Source="../Resources/header.png" Height="70"/>
                    </Viewbox>
                </Grid>

                <!-- Main Content -->

                <Grid x:Name="MainGrid" VerticalAlignment="Top" Margin ="0 30 0 0">
                    <Viewbox>
                        <ContentControl x:Name="HHRContentControl" Content="{Binding SelectedViewModel}" />
                    </Viewbox>
                </Grid>

                <!-- Footer -->

                <Grid x:Name="FooterGrid" VerticalAlignment="Bottom" Margin="0 10 0 136">
                    <Viewbox>
                        <Grid x:Name="ButtonAndTimerGrid">

                            <!-- Buttons, timer and footer note -->

                            <Grid x:Name="ButtonGrid" VerticalAlignment="Top">

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Center">
                                    <ItemsControl ItemsSource="{Binding SelectedViewModel.Commands}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </StackPanel>

                                <Grid Name="FooterImage" Grid.Row="1" VerticalAlignment="Top" Margin="0 20 0 0">
                                    <Image Source="../Resources/footerInfo.png" Height="24" 
                                               Visibility="{Binding SelectedViewModel.ShowFooterText, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                </Grid>
                            </Grid>

                            <!-- Timer -->

                            <controls:TimerControl x:Name="MyTimerControl" VerticalAlignment="Top" HorizontalAlignment="Right"
                                Visibility="{Binding SelectedViewModel.TimerInfo.IsVisible, Converter={StaticResource BoolToVisibilityConverter},FallbackValue=Hidden}" 
                                TimerEnabled="{Binding SelectedViewModel.TimerInfo.IsEnabled}"
                                Timeout="{Binding SelectedViewModel.TimerInfo.Timeout}"
                                IsQuickPickTextVisible="{Binding SelectedViewModel.TimerInfo.IsQuickPickTextVisible}"
                                IsAutoPickTextVisible="{Binding SelectedViewModel.TimerInfo.IsAutoPickTextVisible}"
                                OnTimerElapsedHandler="{Binding SelectedViewModel.TimerInfo.TimerElapsedCommand}"
                                OnTimerTickHandler="{Binding SelectedViewModel.TimerInfo.TimerTickCommand}" >
                            </controls:TimerControl>

                        </Grid>
                    </Viewbox>
                </Grid>
            </Grid>
        </Grid>
    </Viewbox>

</UserControl>
    